<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Higher Order うさぎ小屋]]></title>
  <link href="http://solorab.github.io/atom.xml" rel="self"/>
  <link href="http://solorab.github.io/"/>
  <updated>2014-07-05T22:56:41+09:00</updated>
  <id>http://solorab.github.io/</id>
  <author>
    <name><![CDATA[そろうさぎ]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pythonのargparseでrequire_order]]></title>
    <link href="http://solorab.github.io/blog/2014/07/05/require-order-in-python-argparse/"/>
    <updated>2014-07-05T22:06:54+09:00</updated>
    <id>http://solorab.github.io/blog/2014/07/05/require-order-in-python-argparse</id>
    <content type="html"><![CDATA[<p>optionでない引数以降は全て非optionにしたい<br />
つまり <code>--foo a --bar b c</code> を <code>--foo --bar -- a b c</code> ではなく <code>--foo -- a --bar b c</code> と等価にしたい<br />
perlのGetOptなどだと<code>require_order</code>と<code>permute</code>という指定子がありますよね</p>

<p>調べたところ、</p>

<ul>
  <li><code>nargs=argparse.REMAINDER</code>を使えば良い</li>
  <li><code>nargs=argparse.PARSER</code>なら引数がない時失敗 (<code>*</code>と<code>+</code>のような違い)</li>
</ul>

<p>他にも<code>argparse.SUPPRESS</code>を見つけた<br />
<code>description</code>や<code>help</code>といったoption引数に入れるとhelpやusageから消える</p>

<p>documentに書いてなかったりするあたりは注意すべきなのかな</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[循環的にリダイレクトする]]></title>
    <link href="http://solorab.github.io/blog/2014/07/05/redirect-cyclically/"/>
    <updated>2014-07-05T20:55:05+09:00</updated>
    <id>http://solorab.github.io/blog/2014/07/05/redirect-cyclically</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>tailf foo <span class="p">|</span> bar &gt;&gt; foo
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>もちろん逐次処理するコマンドでないといけない
    <ul>
      <li>例えば<code>sed</code>する時は<code>-u --unbuffered</code>optionが要るなど</li>
      <li>困ったら<code>while</code>に突っ込めば解決</li>
    </ul>
  </li>
  <li><code>sh</code>でも可</li>
  <li><code>&gt;&gt;</code>を<code>&gt;</code>にすると動いたり動かなかったりする
    <ul>
      <li>誰か解説ください</li>
    </ul>
  </li>
  <li>例えば <code>$ echo &gt; foo &amp;&amp; tailf foo | tee &gt;&amp;2 | sed -ue 's/$/*/' &gt;&gt; foo</code> とかすると楽しい</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[STAP細胞が見つかるまでひたすら適当な細胞を生成し続けるプログラム]]></title>
    <link href="http://solorab.github.io/blog/2014/06/18/generate-stap-cells/"/>
    <updated>2014-06-18T00:18:42+09:00</updated>
    <id>http://solorab.github.io/blog/2014/06/18/generate-stap-cells</id>
    <content type="html"><![CDATA[<p>完全に出遅れたが書いてみた (lazy kで)<br />
実行が遅すぎて発見の希望が持てない</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class=""><span class="line">FWDS細胞
</span><span class="line">BSVO細胞
</span><span class="line">TORK細胞
</span><span class="line">PKNG細胞
</span><span class="line">LGJC細胞
</span><span class="line">HCFY細胞
</span><span class="line">DUBU細胞
</span><span class="line">ZQXQ細胞
</span><span class="line">VMTM細胞
</span><span class="line">...</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="scheme"><span class="line"><span class="o">`</span><span class="nv">k</span><span class="o">````</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">si</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">si</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kk</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">ki</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sikk</span><span class="o">``</span><span class="nv">sii</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">s</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">si</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">si</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kk</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">ki</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sikk</span><span class="o">``</span><span class="nv">sii</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">s</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">si</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">si</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kk</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">ki</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sikk</span><span class="o">``</span><span class="nv">sii</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">s</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">si</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">si</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kk</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">ki</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sikk</span><span class="o">``</span><span class="nv">sii</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">s</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">````</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">siii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">s</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">````</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">s</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">````</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">````</span><span class="nv">s</span><span class="o">``</span><span class="nv">siii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">s</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">`````</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">s</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">````</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">s</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">````</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">s</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kskik</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">si</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kk</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">ki</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sikk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">siii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">si</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kk</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">ki</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sikk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">siii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">si</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kk</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">ki</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sikk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">siii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">ks</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">si</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kk</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">kik</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">ki</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">sikk</span><span class="o">``</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">si</span><span class="o">`</span><span class="nv">k</span><span class="o">`</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">`</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">```</span><span class="nv">sii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">k</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">ksk</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">```</span><span class="nv">s</span><span class="o">``</span><span class="nv">siii</span><span class="o">``</span><span class="nv">s</span><span class="o">``</span><span class="nv">s</span><span class="o">`</span><span class="nv">kski</span><span class="o">``</span><span class="nv">sii</span><span class="o">`</span><span class="nv">ki</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><a href="https://twitter.com/yagiyyyy/status/473427915531505665">Twitter / yagiyyyy: STAP細胞が見つかるまでひたすら適当な細胞を生成し続けるプ …</a></li>
  <li><a href="http://ohhiru.info/stap/">→STAP細胞を試した。</a></li>
  <li><a href="http://d.hatena.ne.jp/MikuHatsune/20140603/1401798802">STAP細胞が見つかるまでひたすら適当な細胞を生成し続けるプログラム - 驚異のアニヲタ社会復帰への道</a></li>
</ul>

<!-- more -->

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
</pre></td><td class="code"><pre><code class="scheme"><span class="line"><span class="p">(</span><span class="nb">load </span><span class="s">&quot;/path/to/lazy-k/lazier.scm&quot;</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nb">load </span><span class="s">&quot;/path/to/lazy-k/prelude.scm&quot;</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nb">load </span><span class="s">&quot;/path/to/lazy-k/prelude-numbers.scm&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">pred</span> <span class="nv">n</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">f</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nf">n</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">p</span> <span class="nv">q</span><span class="p">)</span> <span class="p">(</span><span class="nf">q</span> <span class="p">(</span><span class="nf">p</span> <span class="nv">f</span><span class="p">)))</span> <span class="p">(</span><span class="nf">k</span> <span class="nv">x</span><span class="p">)</span> <span class="nv">i</span><span class="p">)))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">-</span> <span class="nv">n</span> <span class="nv">m</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">m</span> <span class="nv">pred</span> <span class="nv">n</span><span class="p">))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;mod</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">Y</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">recur</span> <span class="nv">m</span> <span class="nv">n</span><span class="p">)</span> <span class="p">((</span><span class="nf">if&lt;</span> <span class="nv">m</span> <span class="nv">n</span><span class="p">)</span> <span class="nv">m</span> <span class="p">(</span><span class="nf">recur</span> <span class="p">(</span><span class="nb">- </span><span class="nv">m</span> <span class="nv">n</span><span class="p">)</span> <span class="nv">n</span><span class="p">)))))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">lcgs</span> <span class="nv">a</span> <span class="nv">b</span> <span class="nv">m</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">x</span><span class="p">)</span> <span class="p">(</span><span class="nf">mod</span> <span class="p">(</span><span class="nb">+ </span><span class="p">(</span><span class="nb">* </span><span class="nv">a</span> <span class="nv">x</span><span class="p">)</span> <span class="nv">b</span><span class="p">)</span> <span class="nv">m</span><span class="p">)))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;rand</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">lcgs</span> <span class="mi">13</span> <span class="mi">5</span> <span class="mi">48</span><span class="p">))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">upper-letter</span> <span class="nv">n</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">+</span> <span class="p">(</span><span class="nf">mod</span> <span class="nv">n</span> <span class="mi">26</span><span class="p">)</span> <span class="mi">65</span><span class="p">))</span>
</span><span class="line"><span class="c1">;   s   a   i   b   o   u</span>
</span><span class="line"><span class="c1">; 231,180,176 232,131,158</span>
</span><span class="line"><span class="c1">; 103, 52, 48 104,  3, 30</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">cell</span> <span class="nv">rst</span><span class="p">)</span>
</span><span class="line">          <span class="o">&#39;</span><span class="p">(</span><span class="nv">cons</span> <span class="p">(</span><span class="nb">+ </span><span class="mi">103</span> <span class="mi">128</span><span class="p">)</span>
</span><span class="line">                 <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">+ </span><span class="mi">52</span> <span class="mi">128</span><span class="p">)</span>
</span><span class="line">                       <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">+ </span><span class="mi">48</span> <span class="mi">128</span><span class="p">)</span>
</span><span class="line">                             <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">+ </span><span class="mi">104</span> <span class="mi">128</span><span class="p">)</span>
</span><span class="line">                                   <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">+ </span><span class="mi">3</span> <span class="mi">128</span><span class="p">)</span>
</span><span class="line">                                         <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">+ </span><span class="mi">30</span> <span class="mi">128</span><span class="p">)</span>
</span><span class="line">                                               <span class="p">(</span><span class="nb">cons </span><span class="mi">10</span>
</span><span class="line">                                                     <span class="nv">rst</span><span class="p">))))))))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">main</span> <span class="nv">input</span><span class="p">)</span>
</span><span class="line">          <span class="o">&#39;</span><span class="p">((</span><span class="nf">Y</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">recur</span> <span class="nv">x0</span><span class="p">)</span>
</span><span class="line">                 <span class="p">((</span><span class="k">lambda </span><span class="p">(</span><span class="nf">x1</span><span class="p">)</span>
</span><span class="line">                    <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">upper-letter</span> <span class="nv">x1</span><span class="p">)</span>
</span><span class="line">                          <span class="p">((</span><span class="k">lambda </span><span class="p">(</span><span class="nf">x2</span><span class="p">)</span>
</span><span class="line">                             <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">upper-letter</span> <span class="nv">x2</span><span class="p">)</span>
</span><span class="line">                                   <span class="p">((</span><span class="k">lambda </span><span class="p">(</span><span class="nf">x3</span><span class="p">)</span>
</span><span class="line">                                      <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">upper-letter</span> <span class="nv">x3</span><span class="p">)</span>
</span><span class="line">                                            <span class="p">((</span><span class="k">lambda </span><span class="p">(</span><span class="nf">x4</span><span class="p">)</span>
</span><span class="line">                                               <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">upper-letter</span> <span class="nv">x4</span><span class="p">)</span>
</span><span class="line">                                                     <span class="p">(</span><span class="nf">cell</span> <span class="p">(</span><span class="nf">recur</span> <span class="nv">x4</span><span class="p">))))</span>
</span><span class="line">                                             <span class="p">(</span><span class="nf">rand</span> <span class="nv">x3</span><span class="p">))))</span>
</span><span class="line">                                    <span class="p">(</span><span class="nf">rand</span> <span class="nv">x2</span><span class="p">))))</span>
</span><span class="line">                           <span class="p">(</span><span class="nf">rand</span> <span class="nv">x1</span><span class="p">))))</span>
</span><span class="line">                  <span class="p">(</span><span class="nf">rand</span> <span class="nv">x0</span><span class="p">))))</span>
</span><span class="line">            <span class="mi">0</span><span class="p">))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">print-as-unlambda</span> <span class="p">(</span><span class="nf">laze</span> <span class="ss">&#39;main</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>ちなみに乱数の周期が小さいので無限回試行しても成功しません (乱数の周期48)<br />
なので成功判定は省略しました</p>

<p>アルファベット4文字は<script type="math/tex">26^4 = 456974</script>通りあるので、最低でもその程度の周期が必要です<br />
しかし十分な周期をとるようにすると、細胞の生成が終わらず何も表示されないので仕方ない</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Awkでquine書いた]]></title>
    <link href="http://solorab.github.io/blog/2014/06/17/quine-in-awk/"/>
    <updated>2014-06-17T20:51:00+09:00</updated>
    <id>http://solorab.github.io/blog/2014/06/17/quine-in-awk</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="awk"><span class="line"><span class="c1">#!/usr/bin/awk -f</span>
</span><span class="line">    <span class="nx">BEGIN</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">s</span><span class="o">=</span><span class="s2">&quot;#!/usr/bin/awk -f\nBEGIN {\n    s=%s;\n    t=s;\n    gsub(\&quot;\\\\\\\\\&quot;, \&quot;\\\\\\\\\&quot;, t);\n    gsub(\&quot;\\\&quot;\&quot;, \&quot;\\\\\\\&quot;\&quot;, t);\n    gsub(\&quot;\\n\&quot;, \&quot;\\\\n\&quot;, t);\n    t=\&quot;\\\&quot;\&quot; t \&quot;\\\&quot;\&quot;;\n    printf(s,t);\n}\n&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="nx">t</span><span class="o">=</span><span class="nx">s</span><span class="p">;</span>
</span><span class="line">        <span class="kr">gsub</span><span class="p">(</span><span class="s2">&quot;\\\\&quot;</span><span class="p">,</span> <span class="s2">&quot;\\\\&quot;</span><span class="p">,</span> <span class="nx">t</span><span class="p">);</span>
</span><span class="line">        <span class="kr">gsub</span><span class="p">(</span><span class="s2">&quot;\&quot;&quot;</span><span class="p">,</span> <span class="s2">&quot;\\\&quot;&quot;</span><span class="p">,</span> <span class="nx">t</span><span class="p">);</span>
</span><span class="line">        <span class="kr">gsub</span><span class="p">(</span><span class="s2">&quot;\n&quot;</span><span class="p">,</span> <span class="s2">&quot;\\n&quot;</span><span class="p">,</span> <span class="nx">t</span><span class="p">);</span>
</span><span class="line">        <span class="nx">t</span><span class="o">=</span><span class="s2">&quot;\&quot;&quot;</span> <span class="nx">t</span> <span class="s2">&quot;\&quot;&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="kr">printf</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>quineは書くこと/書けることが無い時の暇潰しに良いと気付きました</li>
  <li><code>gsub</code>がキャプチャできないの知りませんでした</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[関数をEnumにして遊んだ]]></title>
    <link href="http://solorab.github.io/blog/2014/06/10/instance-enum-functions/"/>
    <updated>2014-06-10T21:38:12+09:00</updated>
    <id>http://solorab.github.io/blog/2014/06/10/instance-enum-functions</id>
    <content type="html"><![CDATA[<p>全域関数 <script type="math/tex"> f : \mathbb{A} \to \mathbb{B} </script> は <script type="math/tex"> { \left|
\mathbb{B} \right|
}^{ \left|
\mathbb{A} \right|
} </script> 個存在します<br />
なので例えば型<code>Bool -&gt; Bool</code>を持つ関数は <script type="math/tex"> {\left| \mathbb{Bool} \right|}^{\left| \mathbb{Bool} \right|} = 2^2 = 4 </script> 個であり、十分列挙可能<br />
ゆえにinstancingしました</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kr">instance</span> <span class="p">(</span><span class="o">..</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="kt">Enum</span> <span class="p">(</span><span class="n">a</span> <span class="ow">-&gt;</span> <span class="n">b</span><span class="p">)</span> <span class="kr">where</span> <span class="o">..</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!-- more -->

<h2 id="section">必要物</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="cm">{-# LANGUAGE ScopedTypeVariables #-}</span>
</span><span class="line"><span class="kr">import</span> <span class="nn">Data.Monoid</span> <span class="p">(</span><span class="nf">mconcat</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-1">補助関数</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">habitant</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Enum</span> <span class="n">a</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">a</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Int</span>
</span><span class="line"><span class="nf">habitant</span> <span class="n">a</span> <span class="ow">=</span> <span class="n">f</span> <span class="n">maxBound</span> <span class="o">-</span> <span class="n">f</span> <span class="n">minBound</span> <span class="o">+</span> <span class="mi">1</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">f</span> <span class="n">x</span> <span class="ow">=</span> <span class="n">fromEnum</span> <span class="p">(</span><span class="n">x</span> <span class="p">`</span><span class="n">asTypeOf</span><span class="p">`</span> <span class="n">a</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="nf">habitants</span> <span class="ow">::</span> <span class="n">forall</span> <span class="n">a</span><span class="o">.</span> <span class="p">(</span><span class="kt">Enum</span> <span class="n">a</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">a</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="p">[</span><span class="n">a</span><span class="p">]</span>
</span><span class="line"><span class="nf">habitants</span> <span class="ow">=</span> <span class="p">[</span><span class="n">minBound</span> <span class="ow">::</span> <span class="n">a</span> <span class="o">..</span> <span class="n">maxBound</span><span class="p">]</span>
</span><span class="line">
</span><span class="line"><span class="nf">digit</span> <span class="ow">::</span> <span class="kt">Int</span> <span class="ow">-&gt;</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="ow">-&gt;</span> <span class="kt">Int</span>
</span><span class="line"><span class="nf">digit</span> <span class="n">n</span> <span class="ow">=</span> <span class="n">sum</span> <span class="o">.</span> <span class="n">zipWith</span> <span class="p">(</span><span class="nf">\</span> <span class="n">ix</span> <span class="n">x</span> <span class="ow">-&gt;</span> <span class="n">x</span> <span class="o">*</span> <span class="n">pow</span> <span class="n">n</span> <span class="n">ix</span><span class="p">)</span> <span class="p">[</span><span class="mi">0</span> <span class="ow">::</span> <span class="kt">Int</span> <span class="o">..</span><span class="p">]</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">pow</span> <span class="kr">_</span> <span class="mi">0</span> <span class="ow">=</span> <span class="mi">1</span>
</span><span class="line">    <span class="n">pow</span> <span class="n">x</span> <span class="n">y</span> <span class="ow">=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">pow</span> <span class="n">x</span> <span class="p">(</span><span class="n">y</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="nf">unndigit</span> <span class="ow">::</span> <span class="kt">Int</span> <span class="ow">-&gt;</span> <span class="kt">Int</span> <span class="ow">-&gt;</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span>
</span><span class="line"><span class="nf">unndigit</span> <span class="n">n</span> <span class="ow">=</span> <span class="n">f</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">f</span> <span class="mi">0</span> <span class="ow">=</span> <span class="kt">[]</span>
</span><span class="line">    <span class="n">f</span> <span class="n">x</span> <span class="ow">=</span> <span class="n">f</span> <span class="p">(</span><span class="n">x</span> <span class="p">`</span><span class="n">div</span><span class="p">`</span> <span class="n">n</span><span class="p">)</span> <span class="o">++</span> <span class="p">[</span><span class="n">x</span> <span class="p">`</span><span class="n">mod</span><span class="p">`</span> <span class="n">n</span><span class="p">]</span>
</span><span class="line">
</span><span class="line"><span class="nf">decode</span> <span class="ow">::</span> <span class="n">forall</span> <span class="n">dom</span> <span class="n">cod</span><span class="o">.</span> <span class="p">(</span><span class="kt">Enum</span> <span class="n">dom</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">dom</span><span class="p">,</span> <span class="kt">Enum</span> <span class="n">cod</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">cod</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="kt">Int</span> <span class="ow">-&gt;</span> <span class="n">dom</span> <span class="ow">-&gt;</span> <span class="n">cod</span>
</span><span class="line"><span class="nf">decode</span> <span class="n">n</span> <span class="ow">=</span> <span class="kr">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="p">(</span><span class="n">cod</span> <span class="o">^</span> <span class="n">dom</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">n</span>
</span><span class="line">        <span class="kr">then</span> <span class="ne">error</span> <span class="s">&quot;wrong index of functions&quot;</span>
</span><span class="line">        <span class="kr">else</span> <span class="n">toEnum</span> <span class="o">.</span> <span class="p">(</span><span class="n">funcs</span> <span class="o">!!</span><span class="p">)</span> <span class="o">.</span> <span class="n">fromEnum</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">dom</span> <span class="ow">=</span> <span class="n">habitant</span> <span class="p">(</span><span class="n">undefined</span> <span class="ow">::</span> <span class="n">dom</span><span class="p">)</span>
</span><span class="line">    <span class="n">cod</span> <span class="ow">=</span> <span class="n">habitant</span> <span class="p">(</span><span class="n">undefined</span> <span class="ow">::</span> <span class="n">cod</span><span class="p">)</span>
</span><span class="line">    <span class="n">funcs</span> <span class="ow">=</span> <span class="kr">let</span> <span class="n">xs</span> <span class="ow">=</span> <span class="n">unndigit</span> <span class="n">cod</span> <span class="n">n</span> <span class="kr">in</span> <span class="n">replicate</span> <span class="p">(</span><span class="n">dom</span> <span class="o">-</span> <span class="n">length</span> <span class="n">xs</span><span class="p">)</span> <span class="mi">0</span> <span class="o">++</span> <span class="n">xs</span>
</span><span class="line">
</span><span class="line"><span class="nf">encode</span> <span class="ow">::</span> <span class="n">forall</span> <span class="n">dom</span> <span class="n">cod</span><span class="o">.</span> <span class="p">(</span><span class="kt">Enum</span> <span class="n">dom</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">dom</span><span class="p">,</span> <span class="kt">Enum</span> <span class="n">cod</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">cod</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="p">(</span><span class="n">dom</span> <span class="ow">-&gt;</span> <span class="n">cod</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="kt">Int</span>
</span><span class="line"><span class="nf">encode</span> <span class="n">f</span> <span class="ow">=</span> <span class="n">digit</span> <span class="n">cod</span> <span class="o">.</span> <span class="n">map</span> <span class="p">(</span><span class="n">fromEnum</span> <span class="o">.</span> <span class="n">f</span><span class="p">)</span> <span class="o">.</span> <span class="n">reverse</span> <span class="o">$</span> <span class="n">enumFrom</span> <span class="n">minDom</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">cod</span> <span class="ow">=</span> <span class="n">habitant</span> <span class="p">(</span><span class="n">undefined</span> <span class="ow">::</span> <span class="n">cod</span><span class="p">)</span>
</span><span class="line">    <span class="n">minDom</span> <span class="ow">=</span> <span class="n">minBound</span> <span class="ow">::</span> <span class="n">dom</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>digit</code>/<code>undigit</code>は、listと自然数を相互変換し、 <code>decode</code>/<code>encode</code>は、関数とlistを相互変換します</p>

<p>具体的には</p>

<ol>
  <li>列挙型から列挙型への関数を、</li>
  <li><code>fromEnum</code>/<code>toEnum</code>により、自然数から自然数への関数へ変換し、</li>
  <li>添字を引数と見ることで、自然数のlistへ変換し、</li>
  <li>listをdom進数cod桁の数と見て、1つの自然数に変換します</li>
</ol>

<h2 id="instancing">instancing</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kr">instance</span> <span class="p">(</span><span class="kt">Enum</span> <span class="n">a</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">a</span><span class="p">,</span> <span class="kt">Enum</span> <span class="n">b</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">b</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="kt">Enum</span> <span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">fromEnum</span> <span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="ow">=</span> <span class="n">fromEnum</span> <span class="n">a</span> <span class="o">*</span> <span class="n">habitant</span> <span class="n">b</span> <span class="o">+</span> <span class="n">fromEnum</span> <span class="n">b</span>
</span><span class="line">    <span class="n">toEnum</span> <span class="n">n</span> <span class="ow">=</span> <span class="p">(</span><span class="n">toEnum</span> <span class="p">(</span><span class="n">n</span> <span class="p">`</span><span class="n">div</span><span class="p">`</span> <span class="n">m</span><span class="p">),</span> <span class="n">toEnum</span> <span class="p">(</span><span class="n">n</span> <span class="p">`</span><span class="n">mod</span><span class="p">`</span> <span class="n">m</span><span class="p">))</span> <span class="kr">where</span>
</span><span class="line">        <span class="n">m</span> <span class="ow">=</span> <span class="n">habitant</span> <span class="p">(</span><span class="n">undefined</span> <span class="ow">::</span> <span class="n">b</span><span class="p">)</span>
</span><span class="line">    <span class="n">enumFrom</span> <span class="n">x</span>       <span class="ow">=</span> <span class="n">map</span> <span class="n">toEnum</span> <span class="p">[</span><span class="n">fromEnum</span> <span class="n">x</span> <span class="o">..</span> <span class="n">fromEnum</span> <span class="p">(</span><span class="n">maxBound</span> <span class="ow">::</span> <span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">))]</span>
</span><span class="line">    <span class="n">enumFromThen</span> <span class="n">x</span> <span class="n">y</span> <span class="ow">=</span> <span class="n">map</span> <span class="n">toEnum</span> <span class="p">[</span><span class="n">fromEnum</span> <span class="n">x</span><span class="p">,</span> <span class="n">fromEnum</span> <span class="n">y</span> <span class="o">..</span> <span class="n">fromEnum</span> <span class="p">(</span><span class="n">maxBound</span> <span class="ow">::</span> <span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">))]</span>
</span><span class="line">
</span><span class="line"><span class="kr">instance</span> <span class="p">(</span><span class="kt">Enum</span> <span class="n">a</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">a</span><span class="p">,</span> <span class="kt">Eq</span> <span class="n">b</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="kt">Eq</span> <span class="p">(</span><span class="n">a</span> <span class="ow">-&gt;</span> <span class="n">b</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">f</span> <span class="o">==</span> <span class="n">g</span> <span class="ow">=</span> <span class="n">all</span> <span class="p">(</span><span class="nf">\</span> <span class="n">x</span> <span class="ow">-&gt;</span> <span class="n">f</span> <span class="n">x</span> <span class="o">==</span> <span class="n">g</span> <span class="n">x</span><span class="p">)</span> <span class="n">habitants</span>
</span><span class="line">
</span><span class="line"><span class="kr">instance</span> <span class="p">(</span><span class="kt">Enum</span> <span class="n">a</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">a</span><span class="p">,</span> <span class="kt">Ord</span> <span class="n">b</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="kt">Ord</span> <span class="p">(</span><span class="n">a</span> <span class="ow">-&gt;</span> <span class="n">b</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">f</span> <span class="p">`</span><span class="n">compare</span><span class="p">`</span> <span class="n">g</span> <span class="ow">=</span> <span class="n">mconcat</span> <span class="o">$</span> <span class="n">map</span> <span class="p">(</span><span class="nf">\</span> <span class="n">x</span> <span class="ow">-&gt;</span> <span class="n">f</span> <span class="n">x</span> <span class="p">`</span><span class="n">compare</span><span class="p">`</span> <span class="n">g</span> <span class="n">x</span><span class="p">)</span> <span class="n">habitants</span>
</span><span class="line">
</span><span class="line"><span class="kr">instance</span> <span class="p">(</span><span class="kt">Bounded</span> <span class="n">a</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">b</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="kt">Bounded</span> <span class="p">(</span><span class="n">a</span> <span class="ow">-&gt;</span> <span class="n">b</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">minBound</span> <span class="ow">=</span> <span class="n">const</span> <span class="n">minBound</span>
</span><span class="line">    <span class="n">maxBound</span> <span class="ow">=</span> <span class="n">const</span> <span class="n">maxBound</span>
</span><span class="line">
</span><span class="line"><span class="kr">instance</span> <span class="p">(</span><span class="kt">Enum</span> <span class="n">a</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">a</span><span class="p">,</span> <span class="kt">Enum</span> <span class="n">b</span><span class="p">,</span> <span class="kt">Bounded</span> <span class="n">b</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="kt">Enum</span> <span class="p">(</span><span class="n">a</span> <span class="ow">-&gt;</span> <span class="n">b</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">fromEnum</span> <span class="ow">=</span> <span class="n">encode</span>
</span><span class="line">    <span class="n">toEnum</span> <span class="ow">=</span> <span class="n">decode</span>
</span><span class="line">    <span class="n">enumFrom</span> <span class="n">x</span>       <span class="ow">=</span> <span class="n">map</span> <span class="n">toEnum</span> <span class="p">[</span><span class="n">fromEnum</span> <span class="n">x</span> <span class="o">..</span> <span class="n">fromEnum</span> <span class="p">(</span><span class="n">maxBound</span> <span class="ow">::</span> <span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">))]</span>
</span><span class="line">    <span class="n">enumFromThen</span> <span class="n">x</span> <span class="n">y</span> <span class="ow">=</span> <span class="n">map</span> <span class="n">toEnum</span> <span class="p">[</span><span class="n">fromEnum</span> <span class="n">x</span><span class="p">,</span> <span class="n">fromEnum</span> <span class="n">y</span> <span class="o">..</span> <span class="n">fromEnum</span> <span class="p">(</span><span class="n">maxBound</span> <span class="ow">::</span> <span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">))]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">利用</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">false&#39;</span><span class="p">,</span> <span class="n">not&#39;</span><span class="p">,</span> <span class="n">id&#39;</span><span class="p">,</span> <span class="n">true&#39;</span> <span class="ow">::</span> <span class="kt">Bool</span> <span class="ow">-&gt;</span> <span class="kt">Bool</span>
</span><span class="line"><span class="nf">false&#39;</span> <span class="ow">=</span> <span class="n">decode</span> <span class="mi">0</span>
</span><span class="line"><span class="nf">id&#39;</span>    <span class="ow">=</span> <span class="n">decode</span> <span class="mi">1</span>
</span><span class="line"><span class="nf">not&#39;</span>   <span class="ow">=</span> <span class="n">decode</span> <span class="mi">2</span>
</span><span class="line"><span class="nf">true&#39;</span>  <span class="ow">=</span> <span class="n">decode</span> <span class="mi">3</span>
</span><span class="line">
</span><span class="line"><span class="nf">main</span> <span class="ow">::</span> <span class="kt">IO</span> <span class="nb">()</span>
</span><span class="line"><span class="nf">main</span> <span class="ow">=</span> <span class="kr">do</span>
</span><span class="line">    <span class="n">print</span> <span class="o">$</span> <span class="n">not&#39;</span> <span class="kt">True</span>
</span><span class="line">    <span class="n">print</span> <span class="o">$</span> <span class="n">fromEnum</span> <span class="p">(</span><span class="n">toEnum</span> <span class="mi">3</span> <span class="ow">::</span> <span class="kt">Bool</span> <span class="ow">-&gt;</span> <span class="kt">Bool</span> <span class="ow">-&gt;</span> <span class="kt">Bool</span><span class="p">)</span>
</span><span class="line">    <span class="n">print</span> <span class="o">$</span> <span class="n">map</span> <span class="p">(</span><span class="nf">\</span> <span class="n">f</span> <span class="ow">-&gt;</span> <span class="n">f</span> <span class="kt">True</span> <span class="kt">True</span><span class="p">)</span> <span class="p">[(</span><span class="o">&amp;&amp;</span><span class="p">)</span> <span class="o">..</span> <span class="p">(</span><span class="o">==</span><span class="p">)</span> <span class="ow">::</span> <span class="kt">Bool</span> <span class="ow">-&gt;</span> <span class="kt">Bool</span> <span class="ow">-&gt;</span> <span class="kt">Bool</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>闇っぽい</p>

<h2 id="section-3">問題</h2>
<ul>
  <li><code>Integer</code>や<code>[a]</code>等の要素の数が無限なものは、この方法では列挙できない</li>
  <li><code>Int</code>は有限だが、<code>toEnum</code>/<code>fromEnum</code>が<code>Int</code>を使うため、overflowし列挙できない</li>
  <li><code>minBound == 0</code>等、<code>Enum</code>や<code>Bounded</code>に仮定多すぎ</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Idrisに挑戦した]]></title>
    <link href="http://solorab.github.io/blog/2014/05/16/tried-idris/"/>
    <updated>2014-05-16T22:23:42+09:00</updated>
    <id>http://solorab.github.io/blog/2014/05/16/tried-idris</id>
    <content type="html"><![CDATA[<p>再挑戦する日のため、敗北した過程のメモ</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>idris
</span><span class="line">     ____    __     _
</span><span class="line">    /  _/___/ /____<span class="o">(</span>_<span class="o">)</span>____
</span><span class="line">    / // __  / ___/ / ___/     Version 0.9.12-git:dae7d7d
</span><span class="line">  _/ // /_/ / /  / <span class="o">(</span>__  <span class="o">)</span>      http://www.idris-lang.org/
</span><span class="line"> /___/<span class="se">\_</span>_,_/_/  /_/____/       Type :? <span class="k">for </span><span class="nb">help</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!-- more -->

<h2 id="install">install</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>git clone git://github.com/edwinb/Idris-dev.git idris
</span><span class="line"><span class="nv">$ </span><span class="nb">cd </span>idris
</span><span class="line"><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;CABALFLAGS += -f FFI -f curses&#39;</span> &gt; custom.mk
</span><span class="line"><span class="nv">$ </span>make
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>custom.mk</code>にFFIを加えていないと<code>:x</code>で<code>IO</code>を評価できなかった<br />
それ以外は簡単ですね</p>

<h2 id="repl">replで遊ぶ</h2>

<h3 id="head">head</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kt">Idris</span><span class="o">&gt;</span> <span class="kt">:</span><span class="n">total</span> <span class="kt">List</span><span class="o">.</span><span class="n">head</span>
</span><span class="line"><span class="kt">Prelude</span><span class="o">.</span><span class="kt">List</span><span class="o">.</span><span class="n">head</span> <span class="n">is</span> <span class="kt">Total</span>
</span><span class="line"><span class="kt">Idris</span><span class="o">&gt;</span> <span class="kt">:</span><span class="kr">type</span> <span class="kt">List</span><span class="o">.</span><span class="n">head</span>
</span><span class="line"><span class="kt">Prelude</span><span class="o">.</span><span class="kt">List</span><span class="o">.</span><span class="n">head</span> <span class="kt">:</span> <span class="p">(</span><span class="n">l</span> <span class="kt">:</span> <span class="kt">List</span> <span class="n">a</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="n">isCons</span> <span class="n">l</span> <span class="ow">=</span> <span class="kt">True</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="n">a</span>
</span><span class="line"><span class="kt">Idris</span><span class="o">&gt;</span> <span class="n">with</span> <span class="kt">List</span> <span class="n">head</span> <span class="p">[</span><span class="mi">42</span><span class="p">,</span> <span class="mi">64</span><span class="p">]</span> <span class="n">refl</span>
</span><span class="line"><span class="mi">42</span> <span class="kt">:</span> <span class="kt">Integer</span>
</span><span class="line"><span class="kt">Idris</span><span class="o">&gt;</span> <span class="n">with</span> <span class="kt">List</span> <span class="n">head</span> <span class="kt">[]</span> <span class="n">refl</span>
</span><span class="line"><span class="p">(</span><span class="n">input</span><span class="p">)</span><span class="kt">:</span><span class="mi">1</span><span class="kt">:</span><span class="mi">16</span><span class="kt">:When</span> <span class="n">elaborating</span> <span class="n">argument</span> <span class="n">ok</span> <span class="n">to</span> <span class="n">function</span> <span class="kt">Prelude</span><span class="o">.</span><span class="kt">List</span><span class="o">.</span><span class="n">head</span><span class="kt">:</span>
</span><span class="line">        <span class="kt">Can&#39;t</span> <span class="n">unify</span> <span class="o">...</span>
</span><span class="line"><span class="kt">Idris</span><span class="o">&gt;</span> <span class="kt">:</span><span class="n">doc</span> <span class="n">refl</span>
</span><span class="line"><span class="nf">refl</span> <span class="kt">:</span> <span class="n">x</span> <span class="ow">=</span> <span class="n">x</span>
</span><span class="line">    <span class="kt">A</span> <span class="n">proof</span> <span class="n">that</span> <span class="n">x</span> <span class="kr">in</span> <span class="n">fact</span> <span class="n">equals</span> <span class="n">x</span><span class="o">.</span> <span class="o">...</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>listとそれがnilでないことの証明を引数にとるため、headが全域関数 すごい</p>

<p>overloadできるので<code>with</code>構文とか<code>the</code>関数とかが必要<br />
<code>[3] : List Int</code>のような型注釈はできない<br />
<code>:type refl</code>したら怒られたので<code>refl</code>何者</p>

<h3 id="io">IO</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kt">Idris</span><span class="o">&gt;</span> <span class="n">print</span> <span class="s">&quot;foo&quot;</span>
</span><span class="line"><span class="kt">MkIO</span> <span class="p">(</span><span class="nf">\</span><span class="p">{</span><span class="n">w0</span><span class="p">}</span> <span class="ow">=&gt;</span> <span class="n">mkForeignPrim</span> <span class="p">(</span><span class="kt">FFun</span> <span class="s">&quot;putStr&quot;</span> <span class="p">[</span><span class="kt">FString</span><span class="p">]</span> <span class="kt">FUnit</span><span class="p">)</span> <span class="s">&quot;</span><span class="se">\&quot;</span><span class="s">foo</span><span class="se">\&quot;\n</span><span class="s">&quot;</span> <span class="n">w</span><span class="p">)</span> <span class="kt">:</span> <span class="kt">IO</span> <span class="nb">()</span>
</span><span class="line"><span class="kt">Idris</span><span class="o">&gt;</span> <span class="kt">:</span><span class="n">x</span> <span class="n">print</span> <span class="s">&quot;foo&quot;</span>
</span><span class="line"><span class="s">&quot;foo&quot;</span>
</span><span class="line"><span class="kt">MkIO</span> <span class="p">(</span><span class="nf">\</span><span class="p">{</span><span class="n">w0</span><span class="p">}</span> <span class="ow">=&gt;</span> <span class="n">prim__IO</span> <span class="nb">()</span><span class="p">)</span> <span class="kt">:</span> <span class="kt">IO</span> <span class="nb">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>:x</code>で実行を促さない限り副作用ありません</p>

<p>簡約後の式をreplに渡すと<code>w</code>や<code>{w0}</code>の辺りで怒られた</p>

<h2 id="quine">quine</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kr">module</span> <span class="nn">Main</span>
</span><span class="line"><span class="nf">main</span> <span class="kt">:</span> <span class="kt">IO</span> <span class="nb">()</span>
</span><span class="line"><span class="nf">main</span> <span class="ow">=</span> <span class="n">putStrLn</span> <span class="p">(</span><span class="n">s</span> <span class="o">++</span> <span class="n">show</span> <span class="p">(</span><span class="n">the</span> <span class="kt">String</span> <span class="n">s</span><span class="p">))</span> <span class="kr">where</span>
</span><span class="line">  <span class="n">s</span> <span class="ow">=</span> <span class="s">&quot;module Main</span><span class="se">\n</span><span class="s">main : IO ()</span><span class="se">\n</span><span class="s">main = putStrLn (s ++ show (the String s)) where</span><span class="se">\n</span><span class="s">  s = &quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>idris quine.idr -o a.out
</span><span class="line"><span class="nv">$ </span>diff quine.idr &lt;<span class="o">(</span>./a.out<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>haskell同様、<code>show</code>と<code>where</code>のおかげで非常にquineが書きやすい</p>

<p><code>s</code>の型注釈が要るのは何故だ</p>

<h2 id="fibonacci">fibonacci</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kr">module</span> <span class="nn">Main</span>
</span><span class="line"><span class="nf">fibs</span> <span class="kt">:</span> <span class="kt">Stream</span> <span class="kt">Nat</span>
</span><span class="line"><span class="nf">fibs</span> <span class="ow">=</span> <span class="n">map</span> <span class="n">fib</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="p">]</span>
</span><span class="line">
</span><span class="line"><span class="nf">main</span> <span class="kt">:</span> <span class="kt">IO</span> <span class="nb">()</span>
</span><span class="line"><span class="nf">main</span> <span class="ow">=</span> <span class="n">recur</span> <span class="n">fibs</span> <span class="kr">where</span>
</span><span class="line">  <span class="n">recur</span> <span class="p">(</span><span class="n">x</span> <span class="ow">::</span> <span class="n">xs</span><span class="p">)</span> <span class="ow">=</span> <span class="kr">do</span>
</span><span class="line">    <span class="n">print</span> <span class="n">x</span>
</span><span class="line">    <span class="n">recur</span> <span class="n">xs</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>fib : Nat -&gt; Nat</code>が<code>Prelude</code>にあるという恐ろしさよ</p>

<p>haskellの<code>mapM_</code>が<code>traverse_</code>に吸収された 良い<br />
また、<code>[0..]</code>が無限長なため全域関数<code>traverse_</code>では扱えず、<code>IO</code>の中で処理せねばならない</p>

<h3 id="applicative-style">applicative style</h3>

<p>しかし、haskellでは等価な以下のような別表現は動かない</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">main&#39;</span> <span class="kt">:</span> <span class="kt">IO</span> <span class="nb">()</span>
</span><span class="line"><span class="nf">main&#39;</span> <span class="ow">=</span> <span class="n">recur</span> <span class="n">fibs</span> <span class="kr">where</span>
</span><span class="line">  <span class="n">recur</span> <span class="p">(</span><span class="n">x</span> <span class="ow">::</span> <span class="n">xs</span><span class="p">)</span> <span class="ow">=</span> <span class="n">print</span> <span class="n">x</span> <span class="o">$&gt;</span> <span class="n">recur</span> <span class="n">xs</span>
</span><span class="line">
</span><span class="line"><span class="nf">main&#39;&#39;</span> <span class="kt">:</span> <span class="kt">IO</span> <span class="nb">()</span>
</span><span class="line"><span class="nf">main&#39;&#39;</span> <span class="ow">=</span> <span class="n">recur</span> <span class="n">fibs</span> <span class="kr">where</span>
</span><span class="line">  <span class="n">recur</span> <span class="p">(</span><span class="n">x</span> <span class="ow">::</span> <span class="n">xs</span><span class="p">)</span> <span class="ow">=</span> <span class="n">print</span> <span class="n">x</span> <span class="o">&gt;&gt;=</span> <span class="n">const</span> <span class="p">(</span><span class="n">recur</span> <span class="n">xs</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>replで試すと <code>do</code> <code>$&gt;</code> <code>&gt;&gt;=</code> それぞれ以下のような簡約結果になる</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kt">Idris</span><span class="o">&gt;</span> <span class="kr">do</span> <span class="p">{</span> <span class="n">putStrLn</span> <span class="s">&quot;hoge&quot;</span> <span class="p">;</span> <span class="n">print</span> <span class="mi">3</span> <span class="p">}</span>
</span><span class="line"><span class="nf">io_bind</span> <span class="p">(</span><span class="kt">MkIO</span> <span class="p">(</span><span class="nf">\</span><span class="p">{</span><span class="n">w0</span><span class="p">}</span> <span class="ow">=&gt;</span> <span class="n">mkForeignPrim</span> <span class="p">(</span><span class="kt">FFun</span> <span class="s">&quot;putStr&quot;</span> <span class="p">[</span><span class="kt">FString</span><span class="p">]</span> <span class="kt">FUnit</span><span class="p">)</span> <span class="s">&quot;hoge</span><span class="se">\n</span><span class="s">&quot;</span> <span class="n">w</span><span class="p">))</span>
</span><span class="line">        <span class="p">(</span><span class="nf">\</span><span class="p">{</span><span class="n">bindx0</span><span class="p">}</span> <span class="ow">=&gt;</span> <span class="kt">MkIO</span> <span class="p">(</span><span class="nf">\</span><span class="p">{</span><span class="n">w0</span><span class="p">}</span> <span class="ow">=&gt;</span> <span class="n">mkForeignPrim</span> <span class="p">(</span><span class="kt">FFun</span> <span class="s">&quot;putStr&quot;</span> <span class="p">[</span><span class="kt">FString</span><span class="p">]</span> <span class="kt">FUnit</span><span class="p">)</span> <span class="s">&quot;3</span><span class="se">\n</span><span class="s">&quot;</span> <span class="n">w</span><span class="p">))</span> <span class="kt">:</span> <span class="kt">IO</span> <span class="nb">()</span>
</span><span class="line"><span class="kt">Idris</span><span class="o">&gt;</span> <span class="n">putStrLn</span> <span class="s">&quot;hoge&quot;</span> <span class="o">$&gt;</span> <span class="n">print</span> <span class="mi">3</span>
</span><span class="line"><span class="nf">io_bind</span> <span class="p">(</span><span class="n">io_bind</span> <span class="p">(</span><span class="kt">MkIO</span> <span class="p">(</span><span class="nf">\</span><span class="p">{</span><span class="n">w0</span><span class="p">}</span> <span class="ow">=&gt;</span> <span class="n">mkForeignPrim</span> <span class="p">(</span><span class="kt">FFun</span> <span class="s">&quot;putStr&quot;</span> <span class="p">[</span><span class="kt">FString</span><span class="p">]</span> <span class="kt">FUnit</span><span class="p">)</span> <span class="s">&quot;hoge</span><span class="se">\n</span><span class="s">&quot;</span> <span class="n">w</span><span class="p">))</span> <span class="p">(</span><span class="nf">\</span><span class="p">{</span><span class="n">b0</span><span class="p">}</span> <span class="ow">=&gt;</span> <span class="n">io_return</span> <span class="n">id</span><span class="p">))</span>
</span><span class="line">        <span class="p">(</span><span class="nf">\</span><span class="n">f&#39;</span> <span class="ow">=&gt;</span> <span class="n">io_bind</span> <span class="p">(</span><span class="kt">MkIO</span> <span class="p">(</span><span class="nf">\</span><span class="p">{</span><span class="n">w0</span><span class="p">}</span> <span class="ow">=&gt;</span> <span class="n">mkForeignPrim</span> <span class="p">(</span><span class="kt">FFun</span> <span class="s">&quot;putStr&quot;</span> <span class="p">[</span><span class="kt">FString</span><span class="p">]</span> <span class="kt">FUnit</span><span class="p">)</span> <span class="s">&quot;3</span><span class="se">\n</span><span class="s">&quot;</span> <span class="n">w</span><span class="p">))</span> <span class="p">(</span><span class="nf">\</span><span class="n">a&#39;</span> <span class="ow">=&gt;</span> <span class="n">io_return</span> <span class="p">(</span><span class="n">f&#39;</span> <span class="n">a&#39;</span><span class="p">)))</span> <span class="kt">:</span> <span class="kt">IO</span> <span class="nb">()</span>
</span><span class="line"><span class="kt">Idris</span><span class="o">&gt;</span> <span class="n">putStrLn</span> <span class="s">&quot;hoge&quot;</span> <span class="o">&gt;&gt;=</span> <span class="n">const</span> <span class="p">(</span><span class="n">print</span> <span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="nf">io_bind</span> <span class="p">(</span><span class="kt">MkIO</span> <span class="p">(</span><span class="nf">\</span><span class="p">{</span><span class="n">w0</span><span class="p">}</span> <span class="ow">=&gt;</span> <span class="n">mkForeignPrim</span> <span class="p">(</span><span class="kt">FFun</span> <span class="s">&quot;putStr&quot;</span> <span class="p">[</span><span class="kt">FString</span><span class="p">]</span> <span class="kt">FUnit</span><span class="p">)</span> <span class="s">&quot;hoge</span><span class="se">\n</span><span class="s">&quot;</span> <span class="n">w</span><span class="p">))</span>
</span><span class="line">        <span class="p">(</span><span class="nf">\</span><span class="n">v</span> <span class="ow">=&gt;</span> <span class="kt">MkIO</span> <span class="p">(</span><span class="nf">\</span><span class="p">{</span><span class="n">w0</span><span class="p">}</span> <span class="ow">=&gt;</span> <span class="n">mkForeignPrim</span> <span class="p">(</span><span class="kt">FFun</span> <span class="s">&quot;putStr&quot;</span> <span class="p">[</span><span class="kt">FString</span><span class="p">]</span> <span class="kt">FUnit</span><span class="p">)</span> <span class="s">&quot;3</span><span class="se">\n</span><span class="s">&quot;</span> <span class="n">w</span><span class="p">))</span> <span class="kt">:</span> <span class="kt">IO</span> <span class="nb">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>末尾再帰最適化が絡んでいるのかなと思ったが、下も動くので全く分からない</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">main&#39;&#39;&#39;</span> <span class="kt">:</span> <span class="kt">IO</span> <span class="nb">()</span>
</span><span class="line"><span class="nf">main&#39;&#39;&#39;</span> <span class="ow">=</span> <span class="n">recur</span> <span class="n">fibs</span> <span class="kr">where</span>
</span><span class="line">  <span class="n">recur</span> <span class="p">(</span><span class="n">x</span> <span class="ow">::</span> <span class="n">xs</span><span class="p">)</span> <span class="ow">=</span> <span class="kr">do</span>
</span><span class="line">    <span class="n">print</span> <span class="n">x</span>
</span><span class="line">    <span class="n">recur</span> <span class="n">xs</span>
</span><span class="line">    <span class="n">putStrLn</span> <span class="s">&quot;foo&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="fizzbuzz">fizzbuzz</h2>
<p><code>Prelude</code>に<code>Semigroup</code>やばい<br />
あるからには使わねばならない</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kr">module</span> <span class="nn">Main</span>
</span><span class="line">
</span><span class="line"><span class="kr">data</span> <span class="kt">FizzBuzz</span> <span class="ow">=</span> <span class="kt">Fizz</span> <span class="o">|</span> <span class="kt">Buzz</span> <span class="o">|</span> <span class="kt">Fizzbuzz</span>
</span><span class="line">
</span><span class="line"><span class="nf">fizz</span> <span class="kt">:</span> <span class="kt">Nat</span> <span class="ow">-&gt;</span> <span class="kt">Maybe</span> <span class="kt">FizzBuzz</span>
</span><span class="line"><span class="nf">fizz</span> <span class="n">n</span> <span class="ow">=</span> <span class="kr">if</span> <span class="p">(</span><span class="n">n</span> <span class="p">`</span><span class="n">mod</span><span class="p">`</span> <span class="mi">3</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="kr">then</span> <span class="kt">Just</span> <span class="kt">Fizz</span> <span class="kr">else</span> <span class="kt">Nothing</span>
</span><span class="line"><span class="nf">buzz</span> <span class="kt">:</span> <span class="kt">Nat</span> <span class="ow">-&gt;</span> <span class="kt">Maybe</span> <span class="kt">FizzBuzz</span>
</span><span class="line"><span class="nf">buzz</span> <span class="n">n</span> <span class="ow">=</span> <span class="kr">if</span> <span class="p">(</span><span class="n">n</span> <span class="p">`</span><span class="n">mod</span><span class="p">`</span> <span class="mi">5</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="kr">then</span> <span class="kt">Just</span> <span class="kt">Buzz</span> <span class="kr">else</span> <span class="kt">Nothing</span>
</span><span class="line">
</span><span class="line"><span class="kr">instance</span> <span class="kt">Eq</span> <span class="kt">FizzBuzz</span> <span class="kr">where</span>
</span><span class="line">  <span class="kt">Fizzbuzz</span> <span class="o">==</span> <span class="kt">Fizzbuzz</span> <span class="ow">=</span> <span class="kt">True</span>
</span><span class="line">  <span class="kt">Fizz</span> <span class="o">==</span> <span class="kt">Fizz</span> <span class="ow">=</span> <span class="kt">True</span>
</span><span class="line">  <span class="kt">Buzz</span> <span class="o">==</span> <span class="kt">Buzz</span> <span class="ow">=</span> <span class="kt">True</span>
</span><span class="line">  <span class="kr">_</span> <span class="o">==</span> <span class="kr">_</span> <span class="ow">=</span> <span class="kt">False</span>
</span><span class="line">
</span><span class="line"><span class="kr">instance</span> <span class="kt">Semigroup</span> <span class="kt">FizzBuzz</span> <span class="kr">where</span>
</span><span class="line">  <span class="n">a</span> <span class="o">&lt;+&gt;</span> <span class="n">b</span> <span class="ow">=</span> <span class="kr">if</span> <span class="n">a</span> <span class="o">==</span> <span class="n">b</span> <span class="kr">then</span> <span class="n">a</span> <span class="kr">else</span> <span class="kt">Fizzbuzz</span>
</span><span class="line">
</span><span class="line"><span class="nf">fizzbuzz</span> <span class="kt">:</span> <span class="kt">Nat</span> <span class="ow">-&gt;</span> <span class="kt">Maybe</span> <span class="kt">FizzBuzz</span>
</span><span class="line"><span class="nf">fizzbuzz</span> <span class="n">n</span> <span class="ow">=</span> <span class="n">fizz</span> <span class="n">n</span> <span class="o">&lt;+&gt;</span> <span class="n">buzz</span> <span class="n">n</span>
</span><span class="line">
</span><span class="line"><span class="kr">instance</span> <span class="kt">Show</span> <span class="kt">FizzBuzz</span> <span class="kr">where</span>
</span><span class="line">  <span class="n">show</span> <span class="kt">Fizz</span> <span class="ow">=</span> <span class="s">&quot;fizz&quot;</span>
</span><span class="line">  <span class="n">show</span> <span class="kt">Buzz</span> <span class="ow">=</span> <span class="s">&quot;buzz&quot;</span>
</span><span class="line">  <span class="n">show</span> <span class="kt">Fizzbuzz</span> <span class="ow">=</span> <span class="s">&quot;fizzbuzz&quot;</span>
</span><span class="line">
</span><span class="line"><span class="nf">main</span> <span class="kt">:</span> <span class="kt">IO</span> <span class="nb">()</span>
</span><span class="line"><span class="nf">main</span> <span class="ow">=</span> <span class="n">recur</span> <span class="mi">1</span> <span class="kr">where</span>
</span><span class="line">  <span class="n">recur</span> <span class="kt">:</span> <span class="kt">Nat</span> <span class="ow">-&gt;</span> <span class="kt">IO</span> <span class="nb">()</span>
</span><span class="line">  <span class="n">recur</span> <span class="n">n</span> <span class="ow">=</span> <span class="kr">do</span>
</span><span class="line">    <span class="n">putStrLn</span> <span class="o">$</span> <span class="n">fromMaybe</span> <span class="p">(</span><span class="n">show</span> <span class="n">n</span><span class="p">)</span> <span class="p">(</span><span class="n">map</span> <span class="n">show</span> <span class="o">$</span> <span class="n">fizzbuzz</span> <span class="n">n</span><span class="p">)</span>
</span><span class="line">    <span class="n">recur</span> <span class="o">$</span> <span class="n">succ</span> <span class="n">n</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>半群なので結合律が必要なのですが、何故か後から追加で証明を与える仕様になっている<br />
結合律の有無がよく分からないならそれはmagmaだと思うのですが、なにか理由があるのでしょう</p>

<p>そして肝心の証明はよく分からなかったので全列挙しました</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kr">instance</span> <span class="kt">VerifiedSemigroup</span> <span class="kt">FizzBuzz</span> <span class="kr">where</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizz</span>     <span class="kt">Fizz</span>     <span class="kt">Fizz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizz</span>     <span class="kt">Fizz</span>     <span class="kt">Buzz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizz</span>     <span class="kt">Fizz</span>     <span class="kt">Fizzbuzz</span> <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizz</span>     <span class="kt">Buzz</span>     <span class="kt">Fizz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizz</span>     <span class="kt">Buzz</span>     <span class="kt">Buzz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizz</span>     <span class="kt">Buzz</span>     <span class="kt">Fizzbuzz</span> <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizz</span>     <span class="kt">Fizzbuzz</span> <span class="kt">Fizz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizz</span>     <span class="kt">Fizzbuzz</span> <span class="kt">Buzz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizz</span>     <span class="kt">Fizzbuzz</span> <span class="kt">Fizzbuzz</span> <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Buzz</span>     <span class="kt">Fizz</span>     <span class="kt">Fizz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Buzz</span>     <span class="kt">Fizz</span>     <span class="kt">Buzz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Buzz</span>     <span class="kt">Fizz</span>     <span class="kt">Fizzbuzz</span> <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Buzz</span>     <span class="kt">Buzz</span>     <span class="kt">Fizz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Buzz</span>     <span class="kt">Buzz</span>     <span class="kt">Buzz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Buzz</span>     <span class="kt">Buzz</span>     <span class="kt">Fizzbuzz</span> <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Buzz</span>     <span class="kt">Fizzbuzz</span> <span class="kt">Fizz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Buzz</span>     <span class="kt">Fizzbuzz</span> <span class="kt">Buzz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Buzz</span>     <span class="kt">Fizzbuzz</span> <span class="kt">Fizzbuzz</span> <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizzbuzz</span> <span class="kt">Fizz</span>     <span class="kt">Fizz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizzbuzz</span> <span class="kt">Fizz</span>     <span class="kt">Buzz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizzbuzz</span> <span class="kt">Fizz</span>     <span class="kt">Fizzbuzz</span> <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizzbuzz</span> <span class="kt">Buzz</span>     <span class="kt">Fizz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizzbuzz</span> <span class="kt">Buzz</span>     <span class="kt">Buzz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizzbuzz</span> <span class="kt">Buzz</span>     <span class="kt">Fizzbuzz</span> <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizzbuzz</span> <span class="kt">Fizzbuzz</span> <span class="kt">Fizz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizzbuzz</span> <span class="kt">Fizzbuzz</span> <span class="kt">Buzz</span>     <span class="ow">=</span> <span class="n">refl</span>
</span><span class="line">  <span class="n">semigroupOpIsAssociative</span> <span class="kt">Fizzbuzz</span> <span class="kt">Fizzbuzz</span> <span class="kt">Fizzbuzz</span> <span class="ow">=</span> <span class="n">refl</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>証明力足りない</p>

<h2 id="section">所感</h2>
<p>現段階では、方が強すぎて書きにくく感じる<br />
haskellで少し気をつけながら書くほうが楽である</p>

<p>定理照明系に明るくないのが問題なのだろう<br />
まずはcoqに習熟すべきかと思う</p>

<p>また、document周りが不満<br />
主にapi-documentがweb上に見つからないこと</p>

<h2 id="refs">refs</h2>
<ul>
  <li><a href="http://www.idris-lang.org/">Idris -</a></li>
  <li><a href="https://github.com/idris-lang/Idris-dev">idris-lang/Idris-dev</a>
    <ul>
      <li><a href="https://github.com/idris-lang/Idris-dev/wiki">Home · idris-lang/Idris-dev Wiki</a></li>
    </ul>
  </li>
  <li><a href="http://mandel59.hateblo.jp/search?q=idris">記事一覧 - M59のブログ</a>
    <ul>
      <li><a href="http://mandel59.hateblo.jp/entry/2013/09/02/184831">こわくない Idris (1) - M59のブログ</a></li>
    </ul>
  </li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brainfuckでquine書いた]]></title>
    <link href="http://solorab.github.io/blog/2014/04/27/quine-in-brainfuck/"/>
    <updated>2014-04-27T18:00:42+09:00</updated>
    <id>http://solorab.github.io/blog/2014/04/27/quine-in-brainfuck</id>
    <content type="html"><![CDATA[<ul>
  <li>haskellを使って書いた</li>
  <li><a href="https://github.com/solorab/brainfuck-hs">solorab/brainfuck-hs</a></li>
  <li>1763chars</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>整形済みcode start:1 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
</pre></td><td class="code"><pre><code class="bf"><span class="line"><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="c"></span>
</span><span class="line"><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="c"></span>
</span><span class="line"><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+++++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="c"></span>
</span><span class="line"><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="c"></span>
</span><span class="line"><span class="nv">&gt;</span><span class="nb">+++++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="c"></span>
</span><span class="line"><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="c"></span>
</span><span class="line"><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="c"></span>
</span><span class="line"><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="c"></span>
</span><span class="line"><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="c"></span>
</span><span class="line"><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="c"></span>
</span><span class="line"><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="c"></span>
</span><span class="line"><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="c"></span>
</span><span class="line"><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="c"></span>
</span><span class="line"><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="c"></span>
</span><span class="line"><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="c"></span>
</span><span class="line"><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="nb">+++++++</span><span class="nv">&gt;</span><span class="c"></span>
</span><span class="line"><span class="nb">+++++</span><span class="nv">&gt;</span><span class="nb">++++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="nb">++++++</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="nb">+++++++</span><span class="c"></span>
</span><span class="line"><span class="k">[[</span><span class="nv">&gt;&gt;&gt;</span><span class="nb">+</span><span class="nv">&lt;&lt;&lt;</span><span class="nb">-</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">]</span><span class="nv">&gt;&gt;&gt;&gt;</span><span class="c"></span>
</span><span class="line"><span class="k">[</span><span class="nv">&lt;</span><span class="nb">++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="nt">.</span><span class="nb">---------------</span><span class="c"></span>
</span><span class="line"><span class="nb">----</span><span class="nv">&gt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nt">.</span><span class="nv">&lt;</span><span class="nb">+</span><span class="nv">&gt;&gt;</span><span class="nb">-</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]</span><span class="nv">&gt;&gt;</span><span class="k">]</span><span class="nv">&lt;&lt;&lt;</span><span class="c"></span>
</span><span class="line"><span class="k">[</span><span class="nv">&lt;</span><span class="k">]</span><span class="nv">&gt;</span><span class="c"></span>
</span><span class="line"><span class="k">[</span><span class="nv">&lt;&lt;</span><span class="nb">+++++++++++++++++++++++++++++++++++++++++++</span><span class="nv">&gt;&gt;</span><span class="nb">-</span><span class="nv">&lt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">[</span><span class="nb">-</span><span class="k">[</span><span class="nb">-</span><span class="k">[</span><span class="nb">-</span><span class="k">[</span><span class="nb">-</span><span class="k">[</span><span class="nb">-</span><span class="k">[</span><span class="nb">-</span><span class="nv">&lt;</span><span class="nb">-</span><span class="nv">&gt;</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]</span><span class="c"></span>
</span><span class="line"><span class="k">]</span><span class="nv">&gt;</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nb">++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]]</span><span class="nv">&gt;</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nb">++++++++++++++</span><span class="c"></span>
</span><span class="line"><span class="nb">++++++++++++++++++++++++++++++++++</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]]</span><span class="nv">&gt;</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]]</span><span class="nv">&gt;</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nb">+++++++++++++++++</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]]</span><span class="nv">&gt;</span><span class="k">]</span><span class="c"></span>
</span><span class="line"><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nb">+++++++++++++++++++</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]]</span><span class="nv">&gt;</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]]</span><span class="nv">&lt;</span><span class="nt">.</span><span class="k">[</span><span class="nb">-</span><span class="k">]</span><span class="nv">&gt;&gt;&gt;</span><span class="k">]</span><span class="c"></span>
</span><span class="line"><span class="nb">++++++++++</span><span class="nt">.</span><span class="c"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!-- more -->

<h2 id="section">処理手順</h2>

<h3 id="data">data読み込み</h3>
<p><code>&gt;&lt;+-[].,</code>を<code>1..8</code>に適当に対応付け、1文字1byteで格納<br />
先頭byteを<code>0</code>とし番兵、data末尾で停止</p>

<h3 id="data-1">data移動</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>start:18 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bf"><span class="line"><span class="k">[[</span><span class="nv">&gt;&gt;&gt;</span><span class="nb">+</span><span class="nv">&lt;&lt;&lt;</span><span class="nb">-</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">]</span><span class="nv">&gt;&gt;&gt;&gt;</span><span class="c"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>作業用空間の確保のため、全体を3byte右へずらしながら先頭へ<br />
番兵<code>0</code>でwhileを脱出し、data部分の先頭に移動し停止</p>

<h3 id="data-2">data部出力</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>start:19 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bf"><span class="line"><span class="k">[</span><span class="nv">&lt;</span><span class="nb">++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="nt">.</span><span class="nb">---------------</span><span class="c"></span>
</span><span class="line"><span class="nb">----</span><span class="nv">&gt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nt">.</span><span class="nv">&lt;</span><span class="nb">+</span><span class="nv">&gt;&gt;</span><span class="nb">-</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]</span><span class="nv">&gt;&gt;</span><span class="k">]</span><span class="nv">&lt;&lt;&lt;</span><span class="c"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>&gt;</code>を出力し、<code>*ptr</code>を<code>+</code>にして準備<br />
<code>+</code>を出力しつつdataを次回利用のため後方に保存<br />
dataを舐め終わると、作業領域の分だけ多めに左へ戻る</p>

<h3 id="section-1">先頭へ</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>start:21 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bf"><span class="line"><span class="k">[</span><span class="nv">&lt;</span><span class="k">]</span><span class="nv">&gt;</span><span class="c"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="program">program部出力</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>start:22 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bf"><span class="line"><span class="k">[</span><span class="nv">&lt;&lt;</span><span class="nb">+++++++++++++++++++++++++++++++++++++++++++</span><span class="nv">&gt;&gt;</span><span class="nb">-</span><span class="nv">&lt;</span><span class="nb">+</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">[</span><span class="nb">-</span><span class="k">[</span><span class="nb">-</span><span class="k">[</span><span class="nb">-</span><span class="k">[</span><span class="nb">-</span><span class="k">[</span><span class="nb">-</span><span class="k">[</span><span class="nb">-</span><span class="nv">&lt;</span><span class="nb">-</span><span class="nv">&gt;</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nb">+++</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]</span><span class="c"></span>
</span><span class="line"><span class="k">]</span><span class="nv">&gt;</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nb">++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]]</span><span class="nv">&gt;</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nb">++++++++++++++</span><span class="c"></span>
</span><span class="line"><span class="nb">++++++++++++++++++++++++++++++++++</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]]</span><span class="nv">&gt;</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nb">++</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]]</span><span class="nv">&gt;</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nb">+++++++++++++++++</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]]</span><span class="nv">&gt;</span><span class="k">]</span><span class="c"></span>
</span><span class="line"><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;</span><span class="nb">+++++++++++++++++++</span><span class="nv">&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]]</span><span class="nv">&gt;</span><span class="k">]</span><span class="nv">&lt;</span><span class="k">[</span><span class="nv">&lt;&gt;</span><span class="k">[</span><span class="nb">-</span><span class="k">]]</span><span class="nv">&lt;</span><span class="nt">.</span><span class="k">[</span><span class="nb">-</span><span class="k">]</span><span class="nv">&gt;&gt;&gt;</span><span class="k">]</span><span class="c"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>&gt;&lt;+-[].</code>を出力しながら右へ進む<br />
dataはもう使わないので破壊的に舐める<br />
<code>decr ; if (non-0) then { *recur* } else { write }</code>のようにし、1~8のswitch文のようなものを実現<br />
<code>+</code>の共通部分と<code>.</code>は共通化している</p>

<p>最も短縮の余地を残す部分である</p>

<h3 id="section-2">改行出力</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>start:26 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bf"><span class="line"><span class="nb">++++++++++</span><span class="nt">.</span><span class="c"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lazy Kでquine書いた (Iota記法)]]></title>
    <link href="http://solorab.github.io/blog/2014/04/17/quine-in-lazy-k/"/>
    <updated>2014-04-17T23:45:00+09:00</updated>
    <id>http://solorab.github.io/blog/2014/04/17/quine-in-lazy-k</id>
    <content type="html"><![CDATA[<ul>
  <li><a href="https://twitter.com/fumieval">@fumieval</a>氏のそれの再実装であって、独自性は特に無い
    <ul>
      <li><a href="http://d.hatena.ne.jp/fumiexcel/20120402/1333343067">文字列リテラルが無いLazy Kで黒魔術も力技も使わずにクワイン - fumievalの日記</a></li>
    </ul>
  </li>
  <li>自己満足性は非常に高いのでおすすめ</li>
  <li><a href="http://solorab.github.io/blog/2014/04/17/how-to-write-a-quine/">前回記事</a>に沿って命名/実装した
    <ul>
      <li>もちろん先人の知恵も借りた</li>
    </ul>
  </li>
</ul>

<!-- more -->

<h2 id="code">code</h2>

<div class="bogus-wrapper" title="quine.scm"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
</pre></td><td class="code"><pre><code class="scheme"><span class="line"><span class="p">(</span><span class="nb">load </span><span class="s">&quot;/path/to/lazier.scm&quot;</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nb">load </span><span class="s">&quot;/path/to/prelude.scm&quot;</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nb">load </span><span class="s">&quot;/path/to/prelude-numbers.scm&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;map</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">Y</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">recur</span> <span class="nv">f</span> <span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="nb">null? </span><span class="nv">xs</span> <span class="p">()</span> <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nb">car </span><span class="nv">xs</span><span class="p">))</span> <span class="p">(</span><span class="nf">recur</span> <span class="nv">f</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">xs</span><span class="p">)))))))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;append</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">Y</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">recur</span> <span class="nv">xs</span> <span class="nv">ys</span><span class="p">)</span> <span class="p">(</span><span class="nb">null? </span><span class="nv">xs</span> <span class="nv">ys</span> <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">car </span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="nf">recur</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">xs</span><span class="p">)</span> <span class="nv">ys</span><span class="p">))))))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;concat</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">Y</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">recur</span> <span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="nb">null? </span><span class="nv">xs</span> <span class="p">()</span> <span class="p">(</span><span class="nb">append </span><span class="p">(</span><span class="nb">car </span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="nf">recur</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">xs</span><span class="p">)))))))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;star</span> <span class="mi">42</span><span class="p">)</span> <span class="c1">; apply operator `*&#39;</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;base</span> <span class="mi">105</span><span class="p">)</span> <span class="c1">; one point basis `i&#39;</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;newline</span> <span class="mi">10</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">; if x then `*&#39; else `i&#39;</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">bit-&gt;program</span> <span class="nv">x</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">x</span> <span class="nv">star</span> <span class="nv">base</span><span class="p">))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">str</span> <span class="nv">x</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">map</span> <span class="nv">bit-&gt;program</span> <span class="nv">x</span><span class="p">))</span>
</span><span class="line">
</span><span class="line"><span class="c1">; #t -&gt; *i*i*ii</span>
</span><span class="line"><span class="c1">; #f -&gt; **i*i*ii*ii</span>
</span><span class="line"><span class="c1">; cons #t -&gt; ***i*i*i*ii**i*i*ii**i*i*i*ii***i*i*i*ii*ii**i*i*ii*i*i*ii*i*i*ii</span>
</span><span class="line"><span class="c1">; cons #f -&gt; ***i*i*i*ii**i*i*ii**i*i*i*ii***i*i*i*ii*ii**i*i*ii**i*i*ii*ii*i*i*ii</span>
</span><span class="line"><span class="c1">; () -&gt; **i*i*ii*i*i*ii</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">bit-&gt;data</span> <span class="nv">x</span><span class="p">)</span>
</span><span class="line">          <span class="o">&#39;</span><span class="p">(</span><span class="nv">x</span> <span class="p">(</span><span class="nf">str</span> <span class="p">((</span><span class="k">lambda </span><span class="p">(</span><span class="nf">t</span> <span class="nv">f</span><span class="p">)</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">())))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))</span> <span class="p">(</span><span class="nb">cons </span><span class="no">#t</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="no">#f</span><span class="p">)))</span> <span class="c1">; `` cons #t</span>
</span><span class="line">              <span class="p">(</span><span class="nf">str</span> <span class="p">((</span><span class="k">lambda </span><span class="p">(</span><span class="nf">t</span> <span class="nv">f</span><span class="p">)</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">())))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))</span> <span class="p">(</span><span class="nb">cons </span><span class="no">#t</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="no">#f</span><span class="p">)))</span> <span class="c1">; `` cons #f</span>
</span><span class="line">              <span class="p">))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">repr</span> <span class="nv">x</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">append</span> <span class="p">(</span><span class="nf">concat</span> <span class="p">(</span><span class="nb">map </span><span class="nv">bit-&gt;data</span> <span class="nv">x</span><span class="p">))</span> <span class="p">(</span><span class="nf">str</span> <span class="p">((</span><span class="k">lambda </span><span class="p">(</span><span class="nf">t</span> <span class="nv">f</span><span class="p">)</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">t</span> <span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nf">f</span> <span class="p">()))))))))))))))))</span> <span class="p">(</span><span class="nb">cons </span><span class="no">#t</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="no">#f</span><span class="p">)))))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">main</span> <span class="nv">input</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">s</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">x</span> <span class="nv">y</span><span class="p">)</span> <span class="p">(</span><span class="nb">append </span><span class="p">(</span><span class="nf">str</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nb">append </span><span class="nv">y</span> <span class="p">(</span><span class="nb">append </span><span class="p">(</span><span class="nb">cons </span><span class="nv">newline</span> <span class="p">())</span> <span class="nv">end-of-output</span><span class="p">))))</span> <span class="nv">repr</span> <span class="nv">code</span><span class="p">))</span>
</span><span class="line"><span class="p">(</span><span class="nf">print-as-iota</span> <span class="p">(</span><span class="nf">laze</span> <span class="ss">&#39;main</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper" title="quine.scm"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="c">#!/bin/sh</span>
</span><span class="line">code<span class="o">()</span> <span class="o">{</span>
</span><span class="line">    gosh quine.scm | sed -e <span class="s1">&#39;s/\[code\]$//&#39;</span>
</span><span class="line"><span class="o">}</span>
</span><span class="line">quote<span class="o">()</span> <span class="o">{</span>
</span><span class="line">    <span class="c"># /*/` cons #t/ ; /i/` cons #f/</span>
</span><span class="line">    tr -t <span class="s1">&#39;*i&#39;</span> <span class="s1">&#39;tf&#39;</span> |
</span><span class="line">    sed -e <span class="s1">&#39;s/t/****i*i*i*ii**i*i*ii**i*i*i*ii***i*i*i*ii*ii**i*i*ii*i*i*ii*i*i*ii/g</span>
</span><span class="line"><span class="s1">    ; s/f/****i*i*i*ii**i*i*ii**i*i*i*ii***i*i*i*ii*ii**i*i*ii**i*i*ii*ii*i*i*ii/g</span>
</span><span class="line"><span class="s1">    ; s/$/**i*i*ii*i*i*ii/&#39;</span>
</span><span class="line"><span class="o">}</span>
</span><span class="line"><span class="nb">echo</span> <span class="k">$(</span>code<span class="k">)$(</span>code | quote<span class="k">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>./quine.sh &gt; quine.lazy
</span><span class="line"><span class="nv">$ </span>lazy quine.lazy &gt; out.lazy
</span><span class="line"><span class="nv">$ </span>diff quine.lazy out.lazy
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="points">ハマりpoints</h2>

<h3 id="strrepr">strとreprの接合</h3>
<p>formatのような関数を用意するのは辛いので、単に<code>append</code>を使用したい</p>

<p>lazier.scmは解決できない識別子を<code>[code]</code>のようにbracketで囲って出力する<br />
しかし単に<code>((lambda (x) (append (str x) (repr x))) code)</code>とすると、<code>lambda</code>が簡約され、<code>[code]</code>が式の内部に2つ出現する<br />
これを回避するために<code>s</code>コンビネータを使い、<code>[code]</code>が変換後の式の末尾に登場するよう調整する</p>

<h3 id="section">実行が遅い</h3>
<p>2分かかった 諦めよう</p>

<h3 id="section-1">デバッグ</h3>
<p>何処が違うのか特定するのにひと手間要した<br />
最終的には、</p>

<ol>
  <li><code>s/(i+)/\1 /g</code>等として、適当に空白で分ける</li>
  <li><code>wdiff quine.lazy out.lazy | colordiff</code>として、単語単位diff+色</li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quineを書く一般的な方法]]></title>
    <link href="http://solorab.github.io/blog/2014/04/17/how-to-write-a-quine/"/>
    <updated>2014-04-17T23:44:24+09:00</updated>
    <id>http://solorab.github.io/blog/2014/04/17/how-to-write-a-quine</id>
    <content type="html"><![CDATA[<ul>
  <li>言語固有の機能を使い特殊な方法でquineする場合は考えない</li>
  <li>とりあえず書ければいい人向け</li>
</ul>

<!-- more -->

<h2 id="section">外観</h2>
<p>quineは</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="nb">eval</span><span class="p">(</span><span class="s">&quot;program(data)&quot;</span><span class="p">)</span> <span class="c">#=&gt; &quot;program(data)&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>となる<code>program</code>部と<code>data</code>部に分けられる</p>

<h2 id="section-1">詳細</h2>
<p><code>program</code>と<code>data</code>はたいてい以下のように動く<br />
python風言語で示す</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">.</span>   <span class="nb">eval</span><span class="p">(</span><span class="s">&quot;program(data)&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">-&gt;</span>  <span class="n">program</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class="line"><span class="o">=</span>   <span class="k">print</span><span class="p">(</span><span class="n">format</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">data</span><span class="p">),</span> <span class="nb">repr</span><span class="p">(</span><span class="n">data</span><span class="p">)))</span>
</span><span class="line"><span class="o">-&gt;</span>  <span class="k">print</span><span class="p">(</span><span class="n">format</span><span class="p">(</span><span class="s">&quot;program&quot;</span><span class="p">,</span> <span class="s">&quot;data&quot;</span><span class="p">))</span>
</span><span class="line"><span class="o">-&gt;</span>  <span class="k">print</span><span class="p">(</span><span class="s">&quot;program(data)&quot;</span><span class="p">)</span>
</span><span class="line"><span class="c">#=&gt; &quot;program(data)&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">実装</h2>
<p>つまり、基本的に、実装/決定すべきは、</p>

<ul>
  <li>適当な入力<code>data</code></li>
  <li>変換関数<code>str : data -&gt; "program"</code></li>
  <li>変換関数<code>repr : data -&gt; "data"</code></li>
  <li>結合関数<code>format : ("program", "data") -&gt; "program(data)"</code></li>
  <li>適当な出力<code>print</code></li>
</ul>

<p>である<br />
<code>str</code>,<code>repr</code>,<code>format</code>等の役割の境界は曖昧である
言語によっては<code>print</code>と<code>format</code>に<code>printf</code>を採用し1つにまとめるなどできる</p>

<p>これらはたいてい、</p>

<ul>
  <li><code>data = quote("program")</code></li>
  <li><code>str = id</code></li>
  <li><code>repr = quote</code></li>
  <li><code>format = append, format</code></li>
  <li><code>print = print</code></li>
</ul>

<p>が使われる<br />
実装量が少なく楽だからである</p>

<p>また、一般的な<code>print</code>が存在しない言語では、好みの方法で出力すれば良い</p>

<h2 id="section-3">例</h2>

<h3 id="haskell">分かりやすい例 haskell</h3>

<p><code>show</code>が言語内に有るので非常に楽である</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">main</span> <span class="ow">=</span> <span class="n">putStrLn</span> <span class="o">$</span> <span class="p">(</span><span class="nf">\</span> <span class="n">x</span> <span class="ow">-&gt;</span> <span class="n">x</span> <span class="o">++</span> <span class="n">show</span> <span class="n">x</span><span class="p">)</span> <span class="s">&quot;main = putStrLn $ (</span><span class="se">\\</span><span class="s"> x -&gt; x ++ show x) &quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><code>data = "main = putStrLn $ (\\ x -&gt; x ++ show x) "</code></li>
  <li><code>str = id</code> (省略)</li>
  <li><code>repr = show</code></li>
  <li><code>format = (++)</code></li>
  <li><code>print = putStrLn</code></li>
</ul>

<h3 id="python">少し長い例 python</h3>

<p>標準関数の<code>repr</code>は高機能すぎて、quineには利用できなかったので<code>repr</code>を実装<br />
接続には<code>{}</code>で指定して<code>format</code>を使用</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c">#!/usr/bin/python3</span>
</span><span class="line"><span class="n">show</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">q</span><span class="p">:</span> <span class="s">&#39;&quot;&quot;&quot;&#39;</span> <span class="o">+</span> <span class="n">q</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\\</span><span class="s">&#39;</span><span class="p">,</span><span class="s">&#39;</span><span class="se">\\\\</span><span class="s">&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\&quot;</span><span class="s">&#39;</span><span class="p">,</span><span class="s">&#39;</span><span class="se">\\\&quot;</span><span class="s">&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;&quot;&quot;&quot;&#39;</span>
</span><span class="line"><span class="n">q</span> <span class="o">=</span> <span class="s">&quot;&quot;&quot;#!/usr/bin/python3</span>
</span><span class="line"><span class="s">show = lambda q: &#39;</span><span class="se">\&quot;\&quot;\&quot;</span><span class="s">&#39; + q.replace(&#39;</span><span class="se">\\\\</span><span class="s">&#39;,&#39;</span><span class="se">\\\\\\\\</span><span class="s">&#39;).replace(&#39;</span><span class="se">\\\&quot;</span><span class="s">&#39;,&#39;</span><span class="se">\\\\\\\&quot;</span><span class="s">&#39;) + &#39;</span><span class="se">\&quot;\&quot;\&quot;</span><span class="s">&#39;</span>
</span><span class="line"><span class="s">q = {}</span>
</span><span class="line"><span class="s">print(q.format(show(q)))&quot;&quot;&quot;</span>
</span><span class="line"><span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">show</span><span class="p">(</span><span class="n">q</span><span class="p">)))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="lazyk-iota">一般的な例 lazyk (iota)</h3>
<p><a href="http://solorab.github.io/blog/2014/04/17/quine-in-lazy-k/">次の記事</a></p>

<h2 id="section-4">参考</h2>
<ul>
  <li><a href="http://ja.wikipedia.org/wiki/%E3%82%AF%E3%83%AF%E3%82%A4%E3%83%B3_\(%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0\)">クワイン (プログラミング) - Wikipedia</a></li>
  <li><a href="http://d.hatena.ne.jp/fumiexcel/20120402/1333343067">文字列リテラルが無いLazy Kで黒魔術も力技も使わずにクワイン - fumievalの日記</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressのtableのstylesheet設定した]]></title>
    <link href="http://solorab.github.io/blog/2014/04/13/octopress-table-stylesheet/"/>
    <updated>2014-04-13T16:19:23+09:00</updated>
    <id>http://solorab.github.io/blog/2014/04/13/octopress-table-stylesheet</id>
    <content type="html"><![CDATA[<p><a href="http://samwize.com/2012/09/24/octopress-table-stylesheet/">Octopress Table Stylesheet - Junda Ong</a>のを加工&amp;配置のmemo</p>

<!-- more -->

<ol>
  <li>cssを貰ってくる</li>
  <li>selectorに問題があるので修正</li>
  <li>修正後のを配置する</li>
</ol>

<h2 id="section">入手</h2>
<p><a href="http://samwize.com/2012/09/24/octopress-table-stylesheet/">上で挙げたページ</a>から<a href="https://gist.github.com/programus/1993032#file-data-table-css">gist</a>へ行ってcssを貰う</p>

<h2 id="section-1">修正</h2>

<h3 id="section-2">動機</h3>
<p>selectorが全て以下のようになっている</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="p">{</span> <span class="o">...</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>なにか要素があって、その要素の次のtableに対して</code>ぐらいの意味 (<a href="https://developer.mozilla.org/ja/docs/Web/CSS/Adjacent\_sibling\_selectors">隣接セレクタ - CSS | MDN</a>)<br />
code-blockに<code>&lt;table&gt;</code>が使われているのでそのため<br />
しかし記事の冒頭の表に対して適用されないので修正する</p>

<p>ついでにheaderをかっこ良くした</p>

<h3 id="section-3">結果</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
</pre></td><td class="code"><pre><code class="scss"><span class="line"><span class="nt">div</span><span class="nc">.entry-content</span> <span class="o">&gt;</span> <span class="nt">table</span><span class="o">,</span> <span class="nt">div</span><span class="nc">.entry-content</span> <span class="nt">div</span><span class="nd">:not</span><span class="o">(</span><span class="nc">.highlight</span><span class="o">)</span> <span class="o">&gt;</span> <span class="nt">table</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">    <span class="nt">border-style</span><span class="nd">:solid</span><span class="o">;</span>
</span><span class="line">    <span class="nt">border-width</span><span class="nd">:1px</span><span class="o">;</span>
</span><span class="line">    <span class="nt">border-color</span><span class="nd">:</span><span class="nn">#e7e3e7</span><span class="o">;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">th</span><span class="o">,</span> <span class="nt">td</span> <span class="p">{</span>
</span><span class="line">        <span class="nt">border-style</span><span class="nd">:dashed</span><span class="o">;</span>
</span><span class="line">        <span class="nt">border-width</span><span class="nd">:1px</span><span class="o">;</span>
</span><span class="line">        <span class="nt">border-color</span><span class="nd">:</span><span class="nn">#e7e3e7</span><span class="o">;</span>
</span><span class="line">        <span class="nt">padding-left</span><span class="nd">:</span> <span class="nt">3px</span><span class="o">;</span>
</span><span class="line">        <span class="nt">padding-right</span><span class="nd">:</span> <span class="nt">3px</span><span class="o">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="nt">th</span> <span class="p">{</span>
</span><span class="line">        <span class="nt">border-style</span><span class="nd">:solid</span><span class="o">;</span>
</span><span class="line">        <span class="nt">font-weight</span><span class="nd">:bold</span><span class="o">;</span>
</span><span class="line">        <span class="o">@</span><span class="nt">include</span> <span class="nt">background</span><span class="o">(</span><span class="err">$</span><span class="nt">nav-bg-front</span><span class="o">,</span> <span class="err">$</span><span class="nt">nav-bg-back</span><span class="o">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="nt">th</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">],</span>   <span class="nt">td</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">]</span>   <span class="p">{</span> <span class="nt">text-align</span><span class="nd">:left</span><span class="o">;</span> <span class="p">}</span>
</span><span class="line">    <span class="nt">th</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="o">],</span>  <span class="nt">td</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="o">]</span>  <span class="p">{</span> <span class="nt">text-align</span><span class="nd">:right</span><span class="o">;</span> <span class="p">}</span>
</span><span class="line">    <span class="nt">th</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="o">],</span> <span class="nt">td</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="o">]</span> <span class="p">{</span> <span class="nt">text-align</span><span class="nd">:center</span><span class="o">;</span> <span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>最外のselectorは<code>各記事のrootの(直下の | 中の、highlight-classの直下にない)table</code>の意<br />
できるだけ範囲を限定したかったので<code>div.entry-content</code>制約加えた</p>

<p>table-headerはnavやfooterの設定をコピーして、グラデーションかけた</p>

<h2 id="section-4">配置</h2>
<p><code>@include background(...);</code>したため、これらをスコープに入れる必要が有るので、<br />
上のscssを<code>$OCTOPRESS/sass/custom/_styles.scss</code>に追記する</p>

<p>この行に変更を加えず元のままにしておくなら、これを<code>$OCTOPRESS/sass/data-table.scss</code>に配置し、元記事のように<code>&lt;link&gt;</code>を加えれば良い</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一点基底について調べた]]></title>
    <link href="http://solorab.github.io/blog/2014/04/13/one-point-basis/"/>
    <updated>2014-04-13T13:53:18+09:00</updated>
    <id>http://solorab.github.io/blog/2014/04/13/one-point-basis</id>
    <content type="html"><![CDATA[<table>
  <thead>
    <tr>
      <th>発見者</th>
      <th>一点基底</th>
      <th><code>S</code></th>
      <th><code>K</code></th>
      <th>他</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> </td>
      <td><code>\x.xSK</code></td>
      <td><code>X(X(X(XX)))</code></td>
      <td><code>X(X(XX))</code></td>
      <td><code>I = XX</code>, iotaで使われている</td>
    </tr>
    <tr>
      <td>John Barkley Rosser</td>
      <td><code>\x.xKSK</code></td>
      <td><code>X(XX)</code></td>
      <td><code>XXX</code></td>
      <td> </td>
    </tr>
    <tr>
      <td>Corrado Bohm</td>
      <td><code>\x.x(fS(KI))K</code></td>
      <td><code>X(XX)</code></td>
      <td><code>XX</code></td>
      <td> </td>
    </tr>
    <tr>
      <td>Henk Barendregt</td>
      <td><code>\x.x(fS(KK))K</code></td>
      <td><code>X(XXX)</code></td>
      <td><code>XXX</code></td>
      <td> </td>
    </tr>
    <tr>
      <td>Jeroen Fokker</td>
      <td><code>\f.fS(\xyz.x)</code></td>
      <td><code>X(XX)</code></td>
      <td><code>XX</code></td>
      <td> </td>
    </tr>
    <tr>
      <td>Carew Meredith</td>
      <td><code>\abcd.cd(a(Kd))</code></td>
      <td><code>V(XXX(XX)(XXXX(XXXX(VV))(K(XXXX))))</code></td>
      <td><code>XXXX(XXXX(XXX(XX))(XX))(XX)</code></td>
      <td><code>V = XXXX(K(XXXX))</code>とする</td>
    </tr>
  </tbody>
</table>

<!-- more -->

<h2 id="lets-">let’s 簡約</h2>
<p>iotaのものを簡約する</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="scheme"><span class="line"><span class="o">#</span> <span class="nv">XX</span> <span class="nv">=</span> <span class="nv">I</span>
</span><span class="line"><span class="nv">XX</span> <span class="nv">a</span>
</span><span class="line">    <span class="nv">=</span> <span class="p">(</span><span class="err">\</span><span class="nv">x</span><span class="o">.</span><span class="nv">xSK</span><span class="p">)</span> <span class="p">(</span><span class="err">\</span><span class="nv">y</span><span class="o">.</span><span class="nv">ySK</span><span class="p">)</span> <span class="nv">a</span>
</span><span class="line">    <span class="nv">=</span> <span class="p">((</span><span class="err">\</span><span class="nv">y</span><span class="o">.</span><span class="nv">ySK</span><span class="p">)</span> <span class="nv">SK</span><span class="p">)</span> <span class="nv">a</span>
</span><span class="line">    <span class="nv">=</span> <span class="p">((</span><span class="nf">S</span> <span class="nv">SK</span><span class="p">)</span> <span class="nv">K</span><span class="p">)</span> <span class="nv">a</span>
</span><span class="line">    <span class="nv">=</span> <span class="p">((</span><span class="nf">SK</span><span class="p">)</span> <span class="p">(</span><span class="nf">KK</span><span class="p">))</span> <span class="nv">a</span>
</span><span class="line">    <span class="nv">=</span> <span class="nv">SK</span> <span class="p">(</span><span class="nf">KK</span><span class="p">)</span> <span class="nv">a</span>
</span><span class="line">    <span class="nv">=</span> <span class="p">(</span><span class="nf">Ka</span><span class="p">)</span> <span class="p">(</span><span class="nf">KKa</span><span class="p">)</span>
</span><span class="line">    <span class="nv">=</span> <span class="nv">a</span>
</span><span class="line">    <span class="nv">=</span> <span class="nv">I</span> <span class="nv">a</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="scheme"><span class="line"><span class="o">#</span> <span class="nv">X</span><span class="p">(</span><span class="nf">X</span><span class="p">(</span><span class="nf">XX</span><span class="p">))</span> <span class="nv">=</span> <span class="nv">K</span>
</span><span class="line"><span class="nv">X</span><span class="p">(</span><span class="nf">X</span><span class="p">(</span><span class="nf">XX</span><span class="p">))</span>
</span><span class="line">    <span class="nv">=</span> <span class="nv">X</span><span class="p">(</span><span class="nf">XI</span><span class="p">)</span>
</span><span class="line">    <span class="nv">=</span> <span class="p">(</span><span class="err">\</span><span class="nv">x</span><span class="o">.</span><span class="nv">xSK</span><span class="p">)</span> <span class="p">((</span><span class="err">\</span><span class="nv">y</span><span class="o">.</span><span class="nv">ySK</span><span class="p">)</span> <span class="nv">I</span><span class="p">)</span>
</span><span class="line">    <span class="nv">=</span> <span class="p">(</span><span class="err">\</span><span class="nv">x</span><span class="o">.</span><span class="nv">xSK</span><span class="p">)</span> <span class="p">(</span><span class="nf">I</span> <span class="nv">SK</span><span class="p">)</span>
</span><span class="line">    <span class="nv">=</span> <span class="p">(</span><span class="err">\</span><span class="nv">x</span><span class="o">.</span><span class="nv">xSK</span><span class="p">)</span> <span class="p">(</span><span class="nf">SK</span><span class="p">)</span>
</span><span class="line">    <span class="nv">=</span> <span class="p">(</span><span class="nf">SK</span> <span class="nv">SK</span><span class="p">)</span>
</span><span class="line">    <span class="nv">=</span> <span class="p">((</span><span class="nf">KK</span><span class="p">)</span> <span class="p">(</span><span class="nf">SK</span><span class="p">))</span>
</span><span class="line">    <span class="nv">=</span> <span class="nv">K</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="scheme"><span class="line"><span class="o">#</span> <span class="nv">X</span><span class="p">(</span><span class="nf">X</span><span class="p">(</span><span class="nf">X</span><span class="p">(</span><span class="nf">XX</span><span class="p">)))</span> <span class="nv">=</span> <span class="nv">S</span>
</span><span class="line"><span class="nv">X</span><span class="p">(</span><span class="nf">X</span><span class="p">(</span><span class="nf">X</span><span class="p">(</span><span class="nf">XX</span><span class="p">)))</span>
</span><span class="line">    <span class="nv">=</span> <span class="nv">XK</span>
</span><span class="line">    <span class="nv">=</span> <span class="p">(</span><span class="err">\</span><span class="nv">x</span><span class="o">.</span><span class="nv">xSK</span><span class="p">)</span> <span class="nv">K</span>
</span><span class="line">    <span class="nv">=</span> <span class="nv">KSK</span>
</span><span class="line">    <span class="nv">=</span> <span class="nv">S</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section">参考</h2>

<ul>
  <li><a href="http://d.hatena.ne.jp/KeisukeNakano/20061008/1160288593">&amp;lambda;x. x K S K - λx.x K S K ＠ はてな</a>
    <ul>
      <li>冒頭の表はほぼこの記事をまとめただけ</li>
    </ul>
  </li>
  <li><a href="http://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3%E3%83%93%E3%83%8D%E3%83%BC%E3%82%BF%E8%AB%96%E7%90%86#One-point_basis">コンビネータ論理 # One-point basis- Wikipedia</a></li>
  <li><a href="https://en.wikipedia.org/wiki/Iota_and_Jot">Iota and Jot - Wikipedia, the free encyclopedia</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lazk Kでfizzbuzz書いた]]></title>
    <link href="http://solorab.github.io/blog/2014/04/13/fizzbuzz-in-lazy-k/"/>
    <updated>2014-04-13T02:27:48+09:00</updated>
    <id>http://solorab.github.io/blog/2014/04/13/fizzbuzz-in-lazy-k</id>
    <content type="html"><![CDATA[<ul>
  <li>妥協してschemeで書いた</li>
  <li>非常に簡単</li>
  <li>lazier.scmが強力すぎた</li>
  <li><code>$ grep -c '\&lt;[ski]\&gt;'</code>すると2 (2行 計3つ)</li>
  <li>4300byte</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
</pre></td><td class="code"><pre><code class="scheme"><span class="line"><span class="p">(</span><span class="nb">load </span><span class="s">&quot;/path/to/lazier.scm&quot;</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nb">load </span><span class="s">&quot;/path/to/prelude.scm&quot;</span><span class="p">)</span>
</span><span class="line"><span class="p">(</span><span class="nb">load </span><span class="s">&quot;/path/to/prelude-numbers.scm&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">ifzero</span> <span class="nv">n</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">ifnonzero</span> <span class="nv">n</span> <span class="nv">y</span> <span class="nv">x</span><span class="p">))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">pred</span> <span class="nv">n</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">f</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nf">n</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">p</span> <span class="nv">q</span><span class="p">)</span> <span class="p">(</span><span class="nf">q</span> <span class="p">(</span><span class="nf">p</span> <span class="nv">f</span><span class="p">)))</span> <span class="p">(</span><span class="nf">k</span> <span class="nv">x</span><span class="p">)</span> <span class="nv">i</span><span class="p">)))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">-</span> <span class="nv">n</span> <span class="nv">m</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">m</span> <span class="nv">pred</span> <span class="nv">n</span><span class="p">))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;mod</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">Y</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">recur</span> <span class="nv">m</span> <span class="nv">n</span><span class="p">)</span> <span class="p">((</span><span class="nf">if&lt;</span> <span class="nv">m</span> <span class="nv">n</span><span class="p">)</span> <span class="nv">m</span> <span class="p">(</span><span class="nf">recur</span> <span class="p">(</span><span class="nb">- </span><span class="nv">m</span> <span class="nv">n</span><span class="p">)</span> <span class="nv">n</span><span class="p">)))))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;div</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">Y</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">recur</span> <span class="nv">m</span> <span class="nv">n</span><span class="p">)</span> <span class="p">((</span><span class="nf">if&lt;</span> <span class="nv">m</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">0</span> <span class="p">(</span><span class="nf">succ</span> <span class="p">(</span><span class="nf">recur</span> <span class="p">(</span><span class="nb">- </span><span class="nv">m</span> <span class="nv">n</span><span class="p">)</span> <span class="nv">n</span><span class="p">))))))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;map</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">Y</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">recur</span> <span class="nv">f</span> <span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="nb">null? </span><span class="nv">xs</span> <span class="p">()</span> <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">f</span> <span class="p">(</span><span class="nb">car </span><span class="nv">xs</span><span class="p">))</span> <span class="p">(</span><span class="nf">recur</span> <span class="nv">f</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">xs</span><span class="p">)))))))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;append</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">Y</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">recur</span> <span class="nv">xs</span> <span class="nv">ys</span><span class="p">)</span> <span class="p">(</span><span class="nb">null? </span><span class="nv">xs</span> <span class="nv">ys</span> <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">car </span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="nf">recur</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">xs</span><span class="p">)</span> <span class="nv">ys</span><span class="p">))))))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;concat</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">Y</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">recur</span> <span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="nb">null? </span><span class="nv">xs</span> <span class="p">()</span> <span class="p">(</span><span class="nb">append </span><span class="p">(</span><span class="nb">car </span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="nf">recur</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">xs</span><span class="p">)))))))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;enum-from</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">Y</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">recur</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">n</span> <span class="p">(</span><span class="nf">recur</span> <span class="p">(</span><span class="nf">succ</span> <span class="nv">n</span><span class="p">))))))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">append-newline</span> <span class="nv">x</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">append</span> <span class="nv">x</span> <span class="p">(</span><span class="nb">cons </span><span class="mi">10</span> <span class="p">())))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;fizz</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">cons</span> <span class="mi">102</span> <span class="p">(</span><span class="nb">cons </span><span class="mi">105</span> <span class="p">(</span><span class="nb">cons </span><span class="mi">122</span> <span class="p">(</span><span class="nb">cons </span><span class="mi">122</span> <span class="p">())))))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;buzz</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">cons</span> <span class="mi">98</span> <span class="p">(</span><span class="nb">cons </span><span class="mi">117</span> <span class="p">(</span><span class="nb">cons </span><span class="mi">122</span> <span class="p">(</span><span class="nb">cons </span><span class="mi">122</span> <span class="p">())))))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;fizzbuzz</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">append</span> <span class="nv">fizz</span> <span class="nv">buzz</span><span class="p">))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;num-&gt;char</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">+</span> <span class="mi">48</span><span class="p">))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="ss">&#39;posnum-&gt;string</span>
</span><span class="line">          <span class="o">&#39;</span><span class="p">(</span><span class="nv">Y</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">recur</span> <span class="nv">n</span><span class="p">)</span> <span class="p">((</span><span class="nf">ifzero</span> <span class="nv">n</span><span class="p">)</span> <span class="p">()</span>
</span><span class="line">                                            <span class="p">(</span><span class="nb">append </span><span class="p">(</span><span class="nf">recur</span> <span class="p">(</span><span class="nf">div</span> <span class="nv">n</span> <span class="mi">10</span><span class="p">))</span> <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">num-&gt;char</span> <span class="p">(</span><span class="nf">mod</span> <span class="nv">n</span> <span class="mi">10</span><span class="p">))</span> <span class="p">()))))))</span>
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">num-&gt;string</span> <span class="nv">n</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">((</span><span class="nf">ifnonzero</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">posnum-&gt;string</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">num-&gt;char</span> <span class="mi">0</span><span class="p">)))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">num-&gt;fizzbuzz</span> <span class="nv">n</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">((</span><span class="nf">ifzero</span> <span class="p">(</span><span class="nf">mod</span> <span class="nv">n</span> <span class="mi">15</span><span class="p">)</span> <span class="nv">fizzbuzz</span>
</span><span class="line">                                       <span class="p">(</span><span class="nf">ifzero</span> <span class="p">(</span><span class="nf">mod</span> <span class="nv">n</span> <span class="mi">5</span><span class="p">)</span> <span class="nv">buzz</span>
</span><span class="line">                                               <span class="p">(</span><span class="nf">ifzero</span> <span class="p">(</span><span class="nf">mod</span> <span class="nv">n</span> <span class="mi">3</span><span class="p">)</span> <span class="nv">fizz</span>
</span><span class="line">                                                       <span class="p">(</span><span class="nf">num-&gt;string</span> <span class="nv">n</span><span class="p">))))))</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="nf">lazy-def</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">main</span> <span class="nv">input</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">concat</span> <span class="p">(</span><span class="nb">map </span><span class="p">(</span><span class="nf">o</span> <span class="nv">append-newline</span> <span class="nv">num-&gt;fizzbuzz</span><span class="p">)</span> <span class="p">(</span><span class="nf">enum-from</span> <span class="mi">1</span><span class="p">))))</span>
</span><span class="line"><span class="p">(</span><span class="nf">print-as-unlambda</span> <span class="p">(</span><span class="nf">laze</span> <span class="ss">&#39;main</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<hr />

<dl>
  <dt>2014/04/17</dt>
  <dd>
    <ul>
      <li>Yコンビネータの無駄な再定義を除去</li>
      <li>map系関数のnil周りを修正</li>
      <li>入力の無視の方法を改良</li>
    </ul>
  </dd>
</dl>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brainfuckでhello World]]></title>
    <link href="http://solorab.github.io/blog/2014/04/11/hello-world-in-brainfuck/"/>
    <updated>2014-04-11T22:56:51+09:00</updated>
    <id>http://solorab.github.io/blog/2014/04/11/hello-world-in-brainfuck</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="brainfuck"><span class="line"><span class="nb">++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="nt">.</span><span class="c"></span>
</span><span class="line"><span class="nb">---</span><span class="nt">.</span><span class="c"></span>
</span><span class="line"><span class="nb">+++++++</span><span class="nt">.</span><span class="c"></span>
</span><span class="line"><span class="nt">.</span><span class="c"></span>
</span><span class="line"><span class="nb">+++</span><span class="nt">.</span><span class="c"></span>
</span><span class="line"><span class="nb">-------------------------------------------------------------------------------</span><span class="nt">.</span><span class="c"></span>
</span><span class="line"><span class="nb">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="nt">.</span><span class="c"></span>
</span><span class="line"><span class="nb">--------</span><span class="nt">.</span><span class="c"></span>
</span><span class="line"><span class="nb">+++</span><span class="nt">.</span><span class="c"></span>
</span><span class="line"><span class="nb">------</span><span class="nt">.</span><span class="c"></span>
</span><span class="line"><span class="nb">--------</span><span class="nt">.</span><span class="c"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lazy Kでhello World書いた]]></title>
    <link href="http://solorab.github.io/blog/2014/04/09/hello-world-in-lazy-k/"/>
    <updated>2014-04-09T00:19:29+09:00</updated>
    <id>http://solorab.github.io/blog/2014/04/09/hello-world-in-lazy-k</id>
    <content type="html"><![CDATA[<ul>
  <li>“hello world”</li>
  <li>9000byteぐらい</li>
  <li>できるだけ自力で書いた</li>
  <li>CPPを使用 (<code>gcc -E</code>)</li>
  <li><a href="http://solorab.github.io/blog/2014/04/05/lambda-calculus-for-great-good/">ラムダ計算について調べた</a>のを有効活用した</li>
  <li>楽しい</li>
</ul>

<!-- more -->

<h2 id="lazy-k-is-">Lazy K is 何</h2>
<ul>
  <li><a href="http://legacy.e.tir.jp/wiliki?%cb%dd%cc%f5%3a%a5%d7%a5%ed%a5%b0%a5%e9%a5%df%a5%f3%a5%b0%b8%c0%b8%ecLazy_K">翻訳:プログラミング言語Lazy_K</a></li>
  <li><a href="http://blog.livedoor.jp/dankogai/archives/51524324.html">404 Blog Not Found:Math - 言語はどこまで小さくなれるか - (unlambda|iota|jot) のすすめ</a>
    <ul>
      <li>ここのpatchあてて-fpermissiveしたらcompile通った</li>
    </ul>
  </li>
  <li>すごそう</li>
  <li>かっこいい</li>
</ul>

<h2 id="section">入出力</h2>
<ul>
  <li>プログラムに引数として標準入力が与えられ、返り値が標準出力に出る</li>
  <li>つまり <code>getContents &gt;&gt;= (pure . main) &gt;&gt;= putStr</code></li>
  <li>ただし文字列はチャーチ数のスコットエンコーディングのリスト
    <ul>
      <li><a href="http://d.hatena.ne.jp/syamino/20120524/p1">ラムダ計算で代数的データ型を表現する方法 - @syamino はてなダイアリー</a></li>
    </ul>
  </li>
</ul>

<hr />

<h2 id="ignoreinput">ignore_input</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#define ignore_input k</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>code頭に置いて、入力を無視する</li>
  <li><code>k PROGRAM INPUT -&gt; PROGRAM</code></li>
</ul>

<h2 id="section-1">簡単な関数</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#define id (skk)</span>
</span><span class="line"><span class="cp">#define true k</span>
</span><span class="line"><span class="cp">#define false (ki)</span>
</span><span class="line"><span class="cp">#define zero false</span>
</span><span class="line"><span class="cp">#define one id</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>何とか書ける</p>

<h2 id="car-cdr--head-tail">car cdr / head tail</h2>
<ul>
  <li><code>car list = list true</code></li>
  <li><code>cdr list = list false</code></li>
</ul>

<p>しかし</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="err">\</span> <span class="n">x</span> <span class="n">y</span> <span class="p">.</span> <span class="n">y</span> <span class="n">x</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>が書けない</p>

<p>とりあえず文字列を持ってきて<code>true</code>/<code>false</code>を試してみる</p>

<p><a href="https://ja.wikipedia.org/wiki/Hello_world%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%AE%E4%B8%80%E8%A6%A7#Lazy_K">Hello worldプログラムの一覧 # Lazy_K - Wikipedia</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#define helloworld ``s``si`k```s``sss```s``s`ks`ssi``ss`ki``s`ksk`k``s``si`k` \</span>
</span><span class="line"><span class="cp">    ``ss``s``ss`ki``ss```ss`ss``ss`ki``s`ksk`k``s``si`k```s``si``ss``ss`ki``` \</span>
</span><span class="line"><span class="cp">    ss`s``sss``ss`ki``s`ksk`k``s``si`k```s``si``ss``ss`ki```ss`s``sss``ss`ki` \</span>
</span><span class="line"><span class="cp">    `s`ksk`k``s``si`k```ss``s``sss``ss```ss`ss``ss`ki``s`ksk`k``s``si`k```ss` \</span>
</span><span class="line"><span class="cp">    `ss``s``sss``s``sss``ss`ki``s`ksk`k``s``si`k```s``ss```ssi``ss`ki``ss`ki` \</span>
</span><span class="line"><span class="cp">    `s`ksk`k``s``si`k```s``si``ss``s``sss``ss`ki``ss```ss``ssi``ss`ki``s`ksk` \</span>
</span><span class="line"><span class="cp">    k``s``si`k```ss``s``sss``ss```ss`ss``ss`ki``s`ksk`k``s``si`k```ss``ss``ss \</span>
</span><span class="line"><span class="cp">    ``ss``s``sss``ss```ss`ss``ss`ki``s`ksk`k``s``si`k```s``si``ss``ss`ki```ss \</span>
</span><span class="line"><span class="cp">    `s``sss``ss`ki``s`ksk`k``s``si`k```s``ss`ki``ss```ss`ss``ss`ki``s`ksk`k`` \</span>
</span><span class="line"><span class="cp">    s``si`k```ss```ss`ss``ss`ki``s`ksk`k`k```sii```sii``s``s`kski</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">ignore_input</span> <span class="p">(</span><span class="n">helloworld</span> <span class="nb">false</span><span class="p">)</span>
</span><span class="line"><span class="cp">##=&gt; ello, world</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>動く</p>

<h2 id="t">T[]変換</h2>
<ul>
  <li>救世主現る</li>
  <li><a href="http://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3%E3%83%93%E3%83%8D%E3%83%BC%E3%82%BF%E8%AB%96%E7%90%86#S-K\_basis.E3.81.AE.E5.AE.8C.E5.85.A8.E6.80.A7">コンビネータ論理 # T[] 変換について - Wikipedia</a></li>
  <li>わりと簡単な<code>lambda式 -&gt; skiコンビネータ</code>の変換</li>
  <li>eta簡約もすると短くなる <code>(s (k X) i) -&gt; X</code></li>
</ul>

<h2 id="x-y-y-x">\ x y. y x</h2>
<p>wikipediaの例と同じだけど、自分でも変換する</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#define rev (s (k (s i)) k)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="car--cdr">car / cdr</h2>
<p><code>\ x y. y x</code> ができたので作れるように</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#define car (rev true)</span>
</span><span class="line"><span class="cp">#define cdr (rev false)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">ignore_input</span> <span class="p">(</span><span class="n">cdr</span> <span class="n">helloworld</span><span class="p">)</span>
</span><span class="line"><span class="cp">##=&gt; ello, world</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="succ">succ</h2>
<ul>
  <li><code>\ n f x. f (n f x)</code> も変換</li>
  <li>結構頑張る</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#define succ (s (k (s (s (k s) k))) (s (s (k s) k) (k i)))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="cons">cons</h2>
<ul>
  <li><code>succ</code>だけあっても使えないので<code>cons</code></li>
  <li>lazy-kはスコットエンコーディング</li>
  <li><code>\ x y z . z x y</code></li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#define cons (s (s (k s) (s (k k) (s (k s) (s (k (s i)) (s (k k) i))))) (k (s (k k) i)))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#define cons (s (s (k s) (s (k k) (s (k s) (s (k (s i)) k)))) (k k))</span>
</span><span class="line"><span class="cp">##=&gt; Iello, world</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">演算</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">plus</span> <span class="o">=</span> <span class="err">\</span> <span class="n">m</span> <span class="n">n</span><span class="p">.</span> <span class="n">m</span> <span class="n">succ</span> <span class="n">n</span>
</span><span class="line"><span class="n">mult</span> <span class="o">=</span> <span class="err">\</span> <span class="n">m</span> <span class="n">n</span> <span class="n">f</span><span class="p">.</span> <span class="n">m</span> <span class="p">(</span><span class="n">n</span> <span class="n">f</span><span class="p">)</span>
</span><span class="line"><span class="n">pow</span> <span class="o">=</span> <span class="err">\</span> <span class="n">m</span> <span class="n">n</span> <span class="n">n</span> <span class="p">(</span><span class="n">mult</span> <span class="n">m</span><span class="p">)</span> <span class="n">one</span> <span class="err">#</span> <span class="err">不要</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#define plus (s (s (k s) (s (k k) (s i (k succ)))) (k i))</span>
</span><span class="line"><span class="cp">#define mult (s (s (k s) (s (k k) (s (k s) k))) (k i))</span>
</span><span class="line"><span class="cp">#define pow (s (s (k s) (s (k (s i)) (s (k k) mult))) (k (k one)))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>手作業で丁寧に変換</li>
</ul>

<h2 id="hello-world">hello world</h2>

<h3 id="section-3">出力すべき数を確認する</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>ghc -e <span class="s1">&#39;print $ map ord &quot;hello world&quot;&#39;</span>
</span><span class="line"><span class="o">[</span>104,101,108,108,111,32,119,111,114,108,100<span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>ghc -e <span class="s1">&#39;print $ map (($ &quot;&quot;) . showIntAtBase 2 intToDigit . ord) &quot;hello world&quot;&#39;</span>
</span><span class="line"><span class="o">[</span><span class="s2">&quot;1101000&quot;</span>,<span class="s2">&quot;1100101&quot;</span>,<span class="s2">&quot;1101100&quot;</span>,<span class="s2">&quot;1101100&quot;</span>,<span class="s2">&quot;1101111&quot;</span>,<span class="s2">&quot;100000&quot;</span>,<span class="s2">&quot;1110111&quot;</span>,<span class="s2">&quot;1101111&quot;</span>,<span class="s2">&quot;1110010&quot;</span>,<span class="s2">&quot;1101100&quot;</span>,<span class="s2">&quot;1100100&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-4">数字を定義</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#define two (s (s (k s) k) i) # 無駄な変換</span>
</span><span class="line"><span class="cp">#define double (mult two)</span>
</span><span class="line"><span class="cp">#define four (double two)</span>
</span><span class="line"><span class="cp">#define eight (double four)</span>
</span><span class="line"><span class="cp">#define sixteen (double eight)</span>
</span><span class="line"><span class="cp">#define thirtytwo (double sixteen)</span>
</span><span class="line"><span class="cp">#define sixtyfour (double thirtytwo)</span>
</span><span class="line"><span class="cp">#define eof (pow four four)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>lazy-kは<code>256</code>をもって<code>eof</code>とする</li>
  <li>2進数万歳</li>
  <li>2は変換しておいた</li>
</ul>

<h3 id="section-5">完成</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="scheme"><span class="line"><span class="nv">ignore_input</span>
</span><span class="line"><span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">plus</span> <span class="nv">sixtyfour</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">thirtytwo</span> <span class="nv">eight</span><span class="p">))</span> <span class="o">#</span> <span class="nv">h</span>
</span><span class="line"><span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">plus</span> <span class="nv">sixtyfour</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">thirtytwo</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">four</span> <span class="nv">one</span><span class="p">)))</span> <span class="o">#</span> <span class="nv">e</span>
</span><span class="line"><span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">plus</span> <span class="nv">sixtyfour</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">thirtytwo</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">eight</span> <span class="nv">four</span><span class="p">)))</span> <span class="o">#</span> <span class="nv">l</span>
</span><span class="line"><span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">plus</span> <span class="nv">sixtyfour</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">thirtytwo</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">eight</span> <span class="nv">four</span><span class="p">)))</span> <span class="o">#</span> <span class="nv">l</span>
</span><span class="line"><span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">plus</span> <span class="nv">sixtyfour</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">thirtytwo</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">eight</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">four</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">two</span> <span class="nv">one</span><span class="p">)))))</span> <span class="o">#</span> <span class="nv">o</span>
</span><span class="line"><span class="p">(</span><span class="nb">cons </span><span class="nv">thirtytwo</span> <span class="o">#</span> <span class="o">&#39;</span> <span class="o">&#39;</span>
</span><span class="line"><span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">plus</span> <span class="nv">sixtyfour</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">thirtytwo</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">sixteen</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">four</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">two</span> <span class="nv">one</span><span class="p">)))))</span> <span class="o">#</span> <span class="nv">w</span>
</span><span class="line"><span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">plus</span> <span class="nv">sixtyfour</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">thirtytwo</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">eight</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">four</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">two</span> <span class="nv">one</span><span class="p">)))))</span> <span class="o">#</span> <span class="nv">o</span>
</span><span class="line"><span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">plus</span> <span class="nv">sixtyfour</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">thirtytwo</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">sixteen</span> <span class="nv">two</span><span class="p">)))</span> <span class="o">#</span> <span class="nv">r</span>
</span><span class="line"><span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">plus</span> <span class="nv">sixtyfour</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">thirtytwo</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">eight</span> <span class="nv">four</span><span class="p">)))</span> <span class="o">#</span> <span class="nv">l</span>
</span><span class="line"><span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nf">plus</span> <span class="nv">sixtyfour</span> <span class="p">(</span><span class="nf">plus</span> <span class="nv">thirtytwo</span> <span class="nv">four</span><span class="p">))</span> <span class="o">#</span> <span class="nv">e</span>
</span><span class="line"><span class="p">(</span><span class="nb">cons </span><span class="nv">eof</span> <span class="nv">k</span><span class="p">))))))))))))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>gcc -E a.lazy.cpp &gt; a.lazy <span class="o">&amp;&amp;</span> <span class="nb">echo </span>hoge | ./lazy a.lazy
</span><span class="line">hello world
</span></code></pre></td></tr></table></div></figure></notextile></div>

<hr />

<dl>
  <dt>2014/04/11</dt>
  <dd><code>two</code>の定義が抜けてたので修正</dd>
</dl>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[チャーチ数とpred関数]]></title>
    <link href="http://solorab.github.io/blog/2014/04/05/church-number-and-pred-function/"/>
    <updated>2014-04-05T21:04:13+09:00</updated>
    <id>http://solorab.github.io/blog/2014/04/05/church-number-and-pred-function</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">pred</span> <span class="n">n</span> <span class="o">=</span> <span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">n</span> <span class="p">(</span><span class="err">\</span> <span class="n">f</span> <span class="n">g</span><span class="p">.</span> <span class="n">g</span> <span class="p">(</span><span class="n">f</span> <span class="n">s</span><span class="p">))</span> <span class="p">(</span><span class="err">\</span> <span class="n">x</span><span class="p">.</span> <span class="n">o</span><span class="p">)</span> <span class="p">(</span><span class="err">\</span> <span class="n">x</span><span class="p">.</span> <span class="n">x</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>church数を<code>- 1</code>する関数</li>
  <li>基本的なはずなのに、他のと比べてやけに複雑</li>
</ul>

<!-- more -->
<!-- c は色付けのため -->

<h2 id="section">とりあえず手動簡約</h2>

<p>よく分からないので名前つけてみる</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">embed</span> <span class="n">x</span> <span class="o">=</span> <span class="err">\</span> <span class="n">f</span> <span class="n">g</span><span class="p">.</span> <span class="n">g</span> <span class="p">(</span><span class="n">f</span> <span class="n">x</span><span class="p">)</span>
</span><span class="line"><span class="k">const</span> <span class="n">x</span> <span class="n">y</span> <span class="o">=</span> <span class="n">x</span>
</span><span class="line"><span class="n">id</span> <span class="n">x</span> <span class="o">=</span> <span class="n">x</span>
</span><span class="line"><span class="n">pred</span> <span class="n">n</span> <span class="o">=</span> <span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">n</span> <span class="p">(</span><span class="n">embed</span> <span class="n">s</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">)</span> <span class="n">id</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>なにこれ:</p>

<ul>
  <li>embed
    <ul>
      <li><code>:: a -&gt; (a -&gt; b) -&gt; (b -&gt; c) -&gt; c</code></li>
      <li>なにこれ (後の繋がり的にembedと命名)</li>
    </ul>
  </li>
  <li>embed s
    <ul>
      <li>なにこれ</li>
    </ul>
  </li>
  <li>const o
    <ul>
      <li>なにこれ</li>
    </ul>
  </li>
</ul>

<p>気にせず簡約</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">pred</span> <span class="mi">2</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">pred</span> <span class="mi">2</span> <span class="n">s</span> <span class="n">o</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="mi">2</span> <span class="p">(</span><span class="n">embed</span> <span class="n">s</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">)</span> <span class="n">id</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="p">(</span><span class="n">embed</span> <span class="n">s</span><span class="p">)</span> <span class="p">((</span><span class="n">embed</span> <span class="n">s</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">))</span> <span class="n">id</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">id</span> <span class="p">(((</span><span class="n">embed</span> <span class="n">s</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">))</span> <span class="n">s</span><span class="p">)</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="p">(</span><span class="n">embed</span> <span class="n">s</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">)</span> <span class="n">s</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">s</span> <span class="p">((</span><span class="k">const</span> <span class="n">o</span><span class="p">)</span> <span class="n">s</span><span class="p">)</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">s</span> <span class="n">o</span>
</span><span class="line"><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>何故か動く</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">pred</span> <span class="mi">0</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">pred</span> <span class="mi">0</span> <span class="n">s</span> <span class="n">o</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="mi">0</span> <span class="p">(</span><span class="n">embed</span> <span class="n">s</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">)</span> <span class="n">id</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">)</span> <span class="n">id</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">o</span>
</span><span class="line"><span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>-1</code>にはならないっぽい</p>

<h2 id="section-1">簡約を追うのは諦めて、原理を考える</h2>

<ul>
  <li>数は関数なので、分解やパターンマッチはできない</li>
  <li>適用ならできる</li>
  <li>1だけ減らしたい</li>
</ul>

<!-- -->

<ol>
  <li>よって、<code>\ s o. s (s (s (... (s (s o)))))</code>の<code>o</code>を活用するのは必然</li>
  <li>しかし、<code>o</code>は<code>s</code>に適用される側</li>
  <li>そこで、何かしらひっくり返す</li>
</ol>

<p>つまり、<code>sss...sso</code>ではだめなので:</p>

<ol>
  <li><code>oss...sss</code></li>
  <li><code>sss...sos</code></li>
</ol>

<p>この<code>pred</code>の定義は後者のもよう (前者でもいけるのか否かは不明)</p>

<p>定義を再確認</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">embed</span> <span class="n">x</span>  <span class="n">f</span> <span class="n">g</span>
</span><span class="line">    <span class="o">=</span> <span class="n">g</span> <span class="p">(</span><span class="n">f</span> <span class="n">x</span><span class="p">)</span>
</span><span class="line"><span class="n">pred</span> <span class="n">n</span> <span class="o">=</span> <span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">n</span> <span class="p">(</span><span class="n">embed</span> <span class="n">s</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">)</span> <span class="n">id</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>その辺を意識してもう1度簡約<br />
<code>s</code>がどう並び替わるのか見るため番号振ります</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">pred</span> <span class="mi">4</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">pred</span> <span class="mi">4</span> <span class="n">s</span> <span class="n">o</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="mi">4</span> <span class="p">(</span><span class="n">embed</span> <span class="n">s</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">)</span> <span class="n">id</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="p">(</span><span class="n">embed</span>  <span class="n">s</span><span class="p">)</span> <span class="p">((</span><span class="n">embed</span>  <span class="n">s</span><span class="p">)</span> <span class="p">((</span><span class="n">embed</span>  <span class="n">s</span><span class="p">)</span> <span class="p">((</span><span class="n">embed</span>  <span class="n">s</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">))))</span> <span class="n">id</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="p">(</span><span class="n">embed</span> <span class="n">s1</span><span class="p">)</span> <span class="p">((</span><span class="n">embed</span> <span class="n">s2</span><span class="p">)</span> <span class="p">((</span><span class="n">embed</span> <span class="n">s3</span><span class="p">)</span> <span class="p">((</span><span class="n">embed</span> <span class="n">s4</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">))))</span> <span class="n">id</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span>        <span class="n">id</span> <span class="p">(</span> <span class="p">(</span><span class="n">embed</span> <span class="n">s2</span><span class="p">)</span> <span class="p">((</span><span class="n">embed</span> <span class="n">s3</span><span class="p">)</span> <span class="p">((</span><span class="n">embed</span> <span class="n">s4</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">)))</span>  <span class="n">s1</span><span class="p">)</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span>        <span class="n">id</span> <span class="p">(</span>        <span class="n">s1</span> <span class="p">(</span> <span class="p">(</span><span class="n">embed</span> <span class="n">s3</span><span class="p">)</span> <span class="p">((</span><span class="n">embed</span> <span class="n">s4</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">))</span>   <span class="n">s2</span><span class="p">))</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span>        <span class="n">id</span> <span class="p">(</span>        <span class="n">s1</span> <span class="p">(</span>        <span class="n">s2</span> <span class="p">(</span> <span class="p">(</span><span class="n">embed</span> <span class="n">s4</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="n">o</span><span class="p">)</span>    <span class="n">s3</span><span class="p">)))</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span>        <span class="n">id</span> <span class="p">(</span>        <span class="n">s1</span> <span class="p">(</span>        <span class="n">s2</span> <span class="p">(</span>        <span class="n">s3</span> <span class="p">((</span><span class="k">const</span> <span class="n">o</span><span class="p">)</span>    <span class="n">s4</span><span class="p">))))</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span>        <span class="n">id</span> <span class="p">(</span>        <span class="n">s1</span> <span class="p">(</span>        <span class="n">s2</span> <span class="p">(</span>        <span class="n">s3</span> <span class="p">(</span>       <span class="n">o</span>       <span class="p">))))</span>
</span><span class="line"><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">s</span> <span class="p">(</span><span class="n">s</span> <span class="p">(</span><span class="n">s</span> <span class="n">o</span><span class="p">))</span>
</span><span class="line"><span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>今回は<code>s4</code>(最も深い所の<code>s</code>)が<code>const</code>によって消えていますね</p>

<h2 id="on-wikipedia">別な定義 on wikipedia</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">pred</span> <span class="o">=</span> <span class="err">\</span> <span class="n">n</span><span class="p">.</span> <span class="n">n</span> <span class="p">(</span><span class="err">\</span> <span class="n">g</span> <span class="n">k</span><span class="p">.</span> <span class="p">(</span><span class="n">g</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="err">\</span> <span class="n">u</span><span class="p">.</span> <span class="n">plus</span> <span class="p">(</span><span class="n">g</span> <span class="n">k</span><span class="p">)</span> <span class="mi">1</span><span class="p">)</span> <span class="n">k</span><span class="p">)</span> <span class="p">(</span><span class="err">\</span> <span class="n">v</span><span class="p">.</span> <span class="mi">0</span><span class="p">)</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<blockquote>
  <p>上の部分式 (g 1) (\ u. PLUS (g k) 1) k は、 g(1) がゼロとなるとき k に評価され、そうでないときは g(k) + 1 に評価されることに注意せよ。</p>
</blockquote>

<ul>
  <li>もう1つあったので追ってみる</li>
  <li>注意書きが要るぐらいには複雑らしい</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">f</span> <span class="n">g</span> <span class="n">k</span> <span class="o">=</span> <span class="n">g</span> <span class="mi">1</span> <span class="p">(</span><span class="k">const</span> <span class="p">(</span><span class="n">plus</span> <span class="p">(</span><span class="n">g</span> <span class="n">k</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span> <span class="n">k</span>
</span><span class="line"><span class="n">pred</span> <span class="n">n</span> <span class="o">=</span> <span class="n">n</span> <span class="n">f</span> <span class="p">(</span><span class="k">const</span> <span class="mi">0</span><span class="p">)</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">誘導に従う</h3>

<p>(g 1)が0になるとき</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">g</span> <span class="o">=</span> <span class="k">const</span> <span class="mi">0</span>
</span><span class="line"><span class="n">f</span> <span class="p">(</span><span class="k">const</span> <span class="mi">0</span><span class="p">)</span> <span class="n">k</span>
</span><span class="line">    <span class="o">=</span> <span class="k">const</span> <span class="mi">0</span> <span class="mi">1</span> <span class="p">(</span><span class="k">const</span> <span class="p">(</span><span class="n">plus</span> <span class="p">(</span><span class="k">const</span> <span class="mi">0</span> <span class="n">k</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span> <span class="n">k</span>
</span><span class="line">    <span class="o">=</span> <span class="mi">0</span> <span class="p">(</span><span class="k">const</span> <span class="p">(</span><span class="n">plus</span> <span class="p">(</span><span class="k">const</span> <span class="mi">0</span> <span class="n">k</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span> <span class="n">k</span>
</span><span class="line">    <span class="o">=</span> <span class="p">(</span><span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">o</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="p">(</span><span class="n">plus</span> <span class="p">(</span><span class="k">const</span> <span class="mi">0</span> <span class="n">k</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span> <span class="n">k</span>
</span><span class="line">    <span class="o">=</span> <span class="n">k</span>
</span><span class="line"><span class="n">f</span> <span class="p">(</span><span class="k">const</span> <span class="mi">0</span><span class="p">)</span> <span class="o">=</span> <span class="n">id</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>そうでない(0でない数である)とき</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">g</span> <span class="o">::</span> <span class="n">number</span> <span class="o">-&gt;</span> <span class="n">number</span>
</span><span class="line"><span class="p">(</span><span class="n">g</span> <span class="mi">1</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span>
</span><span class="line"><span class="n">f</span> <span class="n">g</span> <span class="n">k</span>
</span><span class="line">    <span class="o">=</span> <span class="p">(</span><span class="n">g</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="k">const</span> <span class="p">(</span><span class="n">plus</span> <span class="p">(</span><span class="n">g</span> <span class="n">k</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span> <span class="n">k</span>
</span><span class="line">    <span class="o">=</span> <span class="p">(</span><span class="k">const</span> <span class="p">(</span><span class="n">plus</span> <span class="p">(</span><span class="n">g</span> <span class="n">k</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span> <span class="p">((</span><span class="k">const</span> <span class="p">(</span><span class="n">plus</span> <span class="p">(</span><span class="n">g</span> <span class="n">k</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span> <span class="p">(...</span> <span class="p">((</span><span class="k">const</span> <span class="p">(</span><span class="n">plus</span> <span class="p">(</span><span class="n">g</span> <span class="n">k</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span> <span class="n">k</span><span class="p">)))</span>
</span><span class="line">    <span class="o">=</span>        <span class="p">(</span><span class="n">plus</span> <span class="p">(</span><span class="n">g</span> <span class="n">k</span><span class="p">)</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line">    <span class="o">=</span> <span class="n">succ</span> <span class="p">(</span><span class="n">g</span> <span class="n">k</span><span class="p">)</span>
</span><span class="line"><span class="n">f</span>   <span class="n">id</span> <span class="n">k</span> <span class="o">=</span>       <span class="n">succ</span> <span class="n">k</span>
</span><span class="line"><span class="n">f</span> <span class="n">succ</span> <span class="n">k</span> <span class="o">=</span> <span class="n">succ</span> <span class="p">(</span><span class="n">succ</span> <span class="n">k</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>まとめると</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">pred</span> <span class="n">n</span>
</span><span class="line">    <span class="o">=</span> <span class="n">n</span> <span class="n">f</span> <span class="p">(</span><span class="k">const</span> <span class="mi">0</span><span class="p">)</span> <span class="mi">0</span>
</span><span class="line">    <span class="o">=</span> <span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(...</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="k">const</span> <span class="mi">0</span><span class="p">))</span> <span class="p">)))))</span> <span class="mi">0</span>
</span><span class="line">    <span class="o">=</span> <span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(...</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="n">id</span>            <span class="p">)))))</span> <span class="mi">0</span>
</span><span class="line">    <span class="o">=</span> <span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(...</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="err">\</span> <span class="n">n</span><span class="p">.</span> <span class="n">succ</span> <span class="p">(</span><span class="n">id</span> <span class="n">n</span><span class="p">))))))</span> <span class="mi">0</span>
</span><span class="line">    <span class="o">=</span> <span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(...</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="err">\</span> <span class="n">n</span><span class="p">.</span> <span class="n">succ</span> <span class="n">n</span>     <span class="p">)))))</span> <span class="mi">0</span>
</span><span class="line">    <span class="o">=</span> <span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(...</span> <span class="p">(</span><span class="err">\</span> <span class="n">n</span><span class="p">.</span> <span class="n">succ</span> <span class="p">(</span><span class="n">succ</span> <span class="n">n</span><span class="p">)</span>  <span class="p">))))</span> <span class="mi">0</span>
</span><span class="line">    <span class="o">=</span> <span class="p">(</span><span class="err">\</span><span class="n">n</span><span class="p">.</span> <span class="n">succ</span> <span class="p">(</span><span class="n">succ</span> <span class="p">(</span><span class="n">succ</span> <span class="p">(...</span> <span class="p">(</span><span class="n">succ</span> <span class="p">(</span><span class="n">succ</span> <span class="n">n</span><span class="p">))))))</span> <span class="mi">0</span>
</span><span class="line">    <span class="o">=</span>      <span class="n">succ</span> <span class="p">(</span><span class="n">succ</span> <span class="p">(</span><span class="n">succ</span> <span class="p">(...</span> <span class="p">(</span><span class="n">succ</span> <span class="p">(</span><span class="n">succ</span> <span class="mi">0</span><span class="p">)))))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>だいたい先ほどのと同じですね</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[すごいラムダ計算楽しく学ぼう]]></title>
    <link href="http://solorab.github.io/blog/2014/04/05/lambda-calculus-for-great-good/"/>
    <updated>2014-04-05T20:24:26+09:00</updated>
    <id>http://solorab.github.io/blog/2014/04/05/lambda-calculus-for-great-good</id>
    <content type="html"><![CDATA[<ul>
  <li>以前挑んだ時は惨敗したが、今回は程よく分かるので楽しい</li>
  <li>haskellにとってのlambda計算は、cにとってのbrainf*ckみたいなものっぽい</li>
  <li>教養の域を出なさそうだが楽しいので許す</li>
  <li>楽しい(自己暗示)</li>
</ul>

<!-- more -->
<!-- c は色付けのため -->

<h2 id="lambda">lambda計算とは</h2>
<ul>
  <li>無名関数のみで計算</li>
  <li><code>λ x y. y x</code>
    <ul>
      <li>haskellだと<code>\ x y -&gt; y x</code></li>
      <li>schemeだと<code>(lambda (x) (lambda (y) (y x)))</code></li>
      <li>pythonだと<code>lambda x : lambda y : y(x)</code></li>
    </ul>
  </li>
  <li># <code>λ</code>って打つの面倒なので<code>\</code>で代替</li>
</ul>

<h2 id="section">変換</h2>
<dl>
  <dt>alpha変換</dt>
  <dd>変数の名前は変えれるよ <code>(\ a -&gt; a) -&gt; (\ b -&gt; b)</code>
beta簡約</dd>
  <dd>関数適用のこと <code>(\ x -&gt; f x) y -&gt; f y</code>
eta変換</dd>
  <dd>const除去 <code>(\ _. a) b = (const a) b -&gt; a</code></dd>
</dl>

<h2 id="section-1">関数</h2>
<ul>
  <li>可読性のためhaskellから輸入しておく</li>
  <li>combinator理論</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="k">const</span> <span class="n">x</span> <span class="n">y</span> <span class="o">=</span> <span class="n">x</span>
</span><span class="line"><span class="n">id</span> <span class="n">x</span> <span class="o">=</span> <span class="n">x</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="church">church数</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="mi">0</span> <span class="o">=</span> <span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span>      <span class="n">o</span>
</span><span class="line"><span class="mi">1</span> <span class="o">=</span> <span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span>    <span class="n">s</span> <span class="n">o</span>
</span><span class="line"><span class="mi">2</span> <span class="o">=</span> <span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">s</span> <span class="p">(</span><span class="n">s</span> <span class="n">o</span><span class="p">)</span>
</span><span class="line"><span class="n">succ</span> <span class="n">n</span>   <span class="o">=</span> <span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span>   <span class="n">s</span> <span class="p">(</span><span class="n">n</span> <span class="n">s</span> <span class="n">o</span><span class="p">)</span>
</span><span class="line"><span class="n">plus</span> <span class="n">m</span> <span class="n">n</span> <span class="o">=</span> <span class="err">\</span> <span class="n">s</span> <span class="n">o</span><span class="p">.</span> <span class="n">m</span> <span class="n">s</span> <span class="p">(</span><span class="n">n</span> <span class="n">s</span> <span class="n">o</span><span class="p">)</span>
</span><span class="line"><span class="n">mult</span> <span class="n">m</span> <span class="n">n</span> <span class="o">=</span> <span class="err">\</span> <span class="n">s</span><span class="p">.</span> <span class="n">m</span> <span class="p">(</span><span class="n">n</span> <span class="n">s</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><code>(x -&gt; x) -&gt; x -&gt; x</code>な関数を数とみなす</li>
  <li><code>numberToInt a = a (+1) 0 :: (forall x. (x -&gt; x) -&gt; x -&gt; x) -&gt; Int</code></li>
  <li><code>Int -&gt; (a -&gt; a) -&gt; a</code>な関数はhayooでググったら<code>nest</code>って名前ついてたけど、<code>3 ~ nest 3</code>と思えば自然</li>
</ul>

<p>演算の定義別version</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">plus</span> <span class="n">m</span> <span class="n">n</span> <span class="o">=</span> <span class="n">m</span> <span class="n">succ</span> <span class="n">n</span>
</span><span class="line"><span class="n">mult</span> <span class="n">m</span> <span class="n">n</span> <span class="o">=</span> <span class="n">m</span> <span class="p">(</span><span class="n">plus</span> <span class="n">n</span><span class="p">)</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="pred">pred</h3>
<ul>
  <li><code>- 1</code></li>
  <li>&lt;-&gt; <code>succ</code></li>
  <li>最大の山場だった</li>
  <li>山場過ぎて<a href="http://solorab.github.io/blog/2014/04/05/church-number-and-pred-function/">別記事</a>に切り出した</li>
</ul>

<h3 id="section-2">減算</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">sub</span> <span class="n">m</span> <span class="n">n</span> <span class="o">=</span> <span class="n">n</span> <span class="n">pred</span> <span class="n">m</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><code>plus m n = m succ n</code>なことを考えると当然だった</li>
  <li>引数と定義部の順序の違いには注意すべきか</li>
</ul>

<h2 id="section-3">真偽値</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="nb">true</span>  <span class="n">t</span> <span class="n">f</span> <span class="o">=</span> <span class="n">t</span>
</span><span class="line"><span class="nb">false</span> <span class="n">t</span> <span class="n">f</span> <span class="o">=</span> <span class="n">f</span>
</span><span class="line"><span class="k">if</span> <span class="n">p</span> <span class="n">t</span> <span class="n">f</span> <span class="o">=</span> <span class="n">p</span> <span class="n">t</span> <span class="n">f</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="k">if</span> <span class="nb">true</span>  <span class="n">t</span> <span class="n">f</span> <span class="o">=</span> <span class="n">t</span>
</span><span class="line"><span class="k">if</span> <span class="nb">false</span> <span class="n">t</span> <span class="n">f</span> <span class="o">=</span> <span class="n">f</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><code>a -&gt; a -&gt; a</code>を真偽値とみなす</li>
  <li>分岐構造,jump命令が値に組み込まれている</li>
  <li><code>if</code>は構文糖</li>
</ul>

<h3 id="section-4">論理演算</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">not</span> <span class="n">p</span>   <span class="o">=</span> <span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="n">p</span> <span class="n">f</span> <span class="n">t</span>
</span><span class="line"><span class="n">and</span> <span class="n">p</span> <span class="n">q</span> <span class="o">=</span> <span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="n">p</span> <span class="p">(</span><span class="n">q</span> <span class="n">t</span> <span class="n">f</span><span class="p">)</span> <span class="n">f</span>
</span><span class="line"><span class="n">or</span>  <span class="n">p</span> <span class="n">q</span> <span class="o">=</span> <span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="n">p</span> <span class="n">t</span> <span class="p">(</span><span class="n">q</span> <span class="n">t</span> <span class="n">f</span><span class="p">)</span>
</span><span class="line"><span class="n">xor</span> <span class="n">p</span> <span class="n">q</span> <span class="o">=</span> <span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="n">p</span> <span class="p">(</span><span class="n">q</span> <span class="n">f</span> <span class="n">t</span><span class="p">)</span> <span class="p">(</span><span class="n">q</span> <span class="n">t</span> <span class="n">f</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>所詮if文なので楽勝</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">not</span> <span class="n">p</span>   <span class="o">=</span> <span class="n">p</span> <span class="nb">false</span> <span class="nb">true</span>
</span><span class="line"><span class="n">and</span> <span class="n">p</span> <span class="n">q</span> <span class="o">=</span> <span class="n">p</span> <span class="n">q</span> <span class="nb">false</span>
</span><span class="line"><span class="n">or</span>  <span class="n">p</span> <span class="n">q</span> <span class="o">=</span> <span class="n">p</span> <span class="nb">true</span> <span class="n">q</span>
</span><span class="line"><span class="n">xor</span> <span class="n">p</span> <span class="n">q</span> <span class="o">=</span> <span class="n">p</span> <span class="p">(</span><span class="n">not</span> <span class="n">q</span><span class="p">)</span> <span class="n">q</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>point-freeの綺麗な定義</li>
</ul>

<h2 id="section-5">比較</h2>

<h3 id="section-6">0判定</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">iszero</span> <span class="n">n</span> <span class="o">=</span> <span class="n">n</span> <span class="p">(</span><span class="k">const</span> <span class="nb">false</span><span class="p">)</span> <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">iszero</span> <span class="mi">2</span>
</span><span class="line"><span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="n">iszero</span> <span class="mi">2</span> <span class="n">t</span> <span class="n">f</span>
</span><span class="line"><span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="mi">2</span> <span class="p">(</span><span class="k">const</span> <span class="nb">false</span><span class="p">)</span> <span class="nb">true</span> <span class="n">t</span> <span class="n">f</span>
</span><span class="line"><span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="p">(</span><span class="k">const</span> <span class="nb">false</span><span class="p">)</span> <span class="p">((</span><span class="k">const</span> <span class="nb">false</span><span class="p">)</span> <span class="nb">true</span><span class="p">)</span> <span class="n">t</span> <span class="n">f</span>
</span><span class="line"><span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="nb">false</span> <span class="n">t</span> <span class="n">f</span>
</span><span class="line"><span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="n">f</span>
</span><span class="line"><span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">iszero</span> <span class="mi">0</span>
</span><span class="line"><span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="n">iszero</span> <span class="mi">0</span> <span class="n">t</span> <span class="n">f</span>
</span><span class="line"><span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="mi">0</span> <span class="p">(</span><span class="n">cons</span> <span class="nb">false</span><span class="p">)</span> <span class="nb">true</span> <span class="n">t</span> <span class="n">f</span>
</span><span class="line"><span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="nb">true</span> <span class="n">t</span> <span class="n">f</span>
</span><span class="line"><span class="err">\</span> <span class="n">t</span> <span class="n">f</span><span class="p">.</span> <span class="n">t</span>
</span><span class="line"><span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>よく見たら定義からして<code>0 = flip const = false</code>だった</p>

<h3 id="section-7">大小比較</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">gte</span> <span class="n">m</span> <span class="n">n</span> <span class="o">=</span> <span class="n">iszero</span> <span class="p">(</span><span class="n">sub</span> <span class="n">m</span> <span class="n">n</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>sub,predは負数にはならず0となるので</li>
</ul>

<h3 id="section-8">等値判定</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">equal</span> <span class="n">m</span> <span class="n">n</span> <span class="o">=</span> <span class="n">and</span> <span class="p">(</span><span class="n">gte</span> <span class="n">m</span> <span class="n">n</span><span class="p">)</span> <span class="p">(</span><span class="n">gte</span> <span class="n">n</span> <span class="n">m</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>十分高級なので問題ないね</li>
</ul>

<h2 id="loop">loop</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">Y</span> <span class="o">=</span> <span class="err">\</span> <span class="n">f</span><span class="p">.</span> <span class="p">(</span><span class="err">\</span> <span class="n">x</span><span class="p">.</span> <span class="n">f</span> <span class="p">(</span><span class="n">x</span> <span class="n">x</span><span class="p">))</span> <span class="p">(</span><span class="err">\</span> <span class="n">x</span><span class="p">.</span> <span class="n">f</span> <span class="p">(</span><span class="n">x</span> <span class="n">x</span><span class="p">)))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Y-combinatorと言うらしい</li>
  <li>意外に簡単だった</li>
  <li>というか既に慣れ親しんでた</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">Y</span> <span class="n">f</span> <span class="n">x</span>
</span><span class="line"><span class="p">(</span><span class="err">\</span><span class="n">y</span><span class="p">.</span><span class="n">f</span><span class="p">(</span><span class="n">y</span> <span class="n">y</span><span class="p">))</span> <span class="p">(</span><span class="err">\</span><span class="n">y</span><span class="p">.</span><span class="n">f</span><span class="p">(</span><span class="n">y</span> <span class="n">y</span><span class="p">))</span> <span class="n">x</span>
</span><span class="line"><span class="n">f</span> <span class="p">((</span><span class="err">\</span><span class="n">y</span><span class="p">.</span><span class="n">f</span><span class="p">(</span><span class="n">y</span> <span class="n">y</span><span class="p">))</span> <span class="p">(</span><span class="err">\</span><span class="n">y</span><span class="p">.</span><span class="n">f</span><span class="p">(</span><span class="n">y</span> <span class="n">y</span><span class="p">)))</span> <span class="n">x</span>
</span><span class="line"><span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">((</span><span class="err">\</span><span class="n">y</span><span class="p">.</span><span class="n">f</span><span class="p">(</span><span class="n">y</span> <span class="n">y</span><span class="p">))</span> <span class="p">(</span><span class="err">\</span><span class="n">y</span><span class="p">.</span><span class="n">f</span><span class="p">(</span><span class="n">y</span> <span class="n">y</span><span class="p">))))</span> <span class="n">x</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>やたら同じものが出てくるので<code>y = (\ x. f (x x))</code>とおいてみる</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">Y</span> <span class="n">f</span> <span class="n">x</span>
</span><span class="line"><span class="n">y</span> <span class="n">y</span> <span class="n">x</span>
</span><span class="line"><span class="n">f</span> <span class="p">(</span><span class="n">y</span> <span class="n">y</span><span class="p">)</span> <span class="n">x</span>
</span><span class="line"><span class="n">f</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="n">y</span> <span class="n">y</span><span class="p">))</span> <span class="n">x</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>Y</code>を<code>Y</code>で定義できそうなので元の式を弄くる</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">Y</span> <span class="n">f</span> <span class="o">=</span> <span class="n">y</span> <span class="n">y</span>
</span><span class="line">    <span class="o">=</span> <span class="n">f</span> <span class="p">(</span><span class="n">y</span> <span class="n">y</span><span class="p">)</span>
</span><span class="line">    <span class="o">=</span> <span class="n">f</span> <span class="p">(</span><span class="n">Y</span> <span class="n">f</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>haskellのfixと全く同じだったようだ</li>
</ul>

<h3 id="section-9">階乗</h3>
<p>lambda計算のような何か</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">fact</span> <span class="o">=</span> <span class="n">Y</span> <span class="p">(</span><span class="err">\</span> <span class="n">recur</span> <span class="n">n</span><span class="p">.</span> <span class="p">(</span><span class="n">iszero</span> <span class="n">n</span><span class="p">)</span> <span class="mi">1</span> <span class="p">(</span><span class="n">mult</span> <span class="n">n</span> <span class="p">(</span><span class="n">recur</span> <span class="p">(</span><span class="n">pred</span> <span class="n">n</span><span class="p">))))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>有効なhaskell-code</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>haskell</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">fact</span> <span class="o">=</span> <span class="n">fix</span> <span class="err">$</span> <span class="err">\</span> <span class="n">recur</span> <span class="n">n</span> <span class="o">-&gt;</span> <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span> <span class="n">then</span> <span class="mi">1</span> <span class="k">else</span> <span class="n">n</span> <span class="o">*</span> <span class="n">recur</span> <span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>完全に一致</p>

<h2 id="pair">pair</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>haskell</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">pair</span> <span class="n">l</span> <span class="n">r</span> <span class="o">=</span> <span class="err">\</span> <span class="n">f</span><span class="p">.</span> <span class="n">f</span> <span class="n">l</span> <span class="n">r</span>
</span><span class="line"><span class="n">fst</span> <span class="n">p</span> <span class="o">=</span> <span class="n">p</span> <span class="p">(</span><span class="err">\</span> <span class="n">l</span> <span class="n">r</span><span class="p">.</span> <span class="n">l</span><span class="p">)</span>
</span><span class="line"><span class="n">snd</span> <span class="n">p</span> <span class="o">=</span> <span class="n">p</span> <span class="p">(</span><span class="err">\</span> <span class="n">l</span> <span class="n">r</span><span class="p">.</span> <span class="n">r</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">swap</span> <span class="n">p</span> <span class="o">=</span> <span class="n">p</span> <span class="p">(</span><span class="err">\</span> <span class="n">l</span> <span class="n">r</span><span class="p">.</span> <span class="n">r</span> <span class="n">l</span><span class="p">)</span>
</span><span class="line"><span class="n">uncurry</span> <span class="n">f</span> <span class="o">=</span> <span class="err">\</span> <span class="n">p</span><span class="p">.</span> <span class="n">p</span> <span class="p">(</span><span class="err">\</span> <span class="n">l</span> <span class="n">r</span><span class="p">.</span> <span class="n">f</span> <span class="n">l</span> <span class="n">r</span><span class="p">)</span>
</span><span class="line"><span class="n">uncurry</span> <span class="n">f</span> <span class="n">p</span> <span class="o">=</span> <span class="n">p</span> <span class="n">f</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>問題ない</p>

<h2 id="list">list</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">cons</span> <span class="n">x</span> <span class="n">y</span> <span class="o">=</span> <span class="err">\</span> <span class="n">c</span> <span class="n">n</span><span class="p">.</span> <span class="n">c</span> <span class="n">x</span> <span class="p">(</span><span class="n">y</span> <span class="n">c</span> <span class="n">n</span><span class="p">)</span>
</span><span class="line"><span class="n">nil</span>      <span class="o">=</span> <span class="err">\</span> <span class="n">c</span> <span class="n">n</span><span class="p">.</span> <span class="n">n</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">foldr</span> <span class="n">f</span> <span class="n">a0</span> <span class="n">xs</span>
</span><span class="line">    <span class="o">=</span> <span class="n">xs</span> <span class="n">f</span> <span class="n">a0</span>
</span><span class="line">    <span class="o">=</span> <span class="n">cons</span> <span class="n">a</span> <span class="p">(</span><span class="n">cons</span> <span class="n">b</span> <span class="p">(</span><span class="n">cons</span> <span class="n">c</span> <span class="p">(...</span> <span class="p">(</span><span class="n">cons</span> <span class="n">y</span> <span class="p">(</span><span class="n">cons</span> <span class="n">z</span> <span class="n">nil</span><span class="p">)))))</span> <span class="n">f</span> <span class="n">a0</span>
</span><span class="line">    <span class="o">=</span> <span class="n">f</span>    <span class="n">a</span> <span class="p">(</span><span class="n">f</span>    <span class="n">b</span> <span class="p">(</span><span class="n">f</span>    <span class="n">c</span> <span class="p">(...</span> <span class="p">(</span><span class="n">f</span>    <span class="n">y</span> <span class="p">(</span><span class="n">f</span>    <span class="n">z</span>  <span class="n">a0</span><span class="p">)))))</span> <span class="n">f</span> <span class="n">a0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">map</span> <span class="n">f</span> <span class="o">=</span> <span class="n">foldr</span> <span class="p">(</span><span class="err">\</span> <span class="n">x</span><span class="p">.</span> <span class="n">cons</span> <span class="p">(</span><span class="n">f</span> <span class="n">x</span><span class="p">))</span> <span class="n">nil</span>
</span><span class="line"><span class="n">length</span> <span class="o">=</span> <span class="n">foldr</span> <span class="p">(</span><span class="k">const</span> <span class="n">succ</span><span class="p">)</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>church encoding と scott encoding の違いだとかはよく分からない</li>
  <li>手計算なのでそろそろ不安</li>
  <li>to be continued…</li>
</ul>

<h2 id="section-10">参考</h2>
<p>主に <a href="http://uid0130.blogspot.jp/2013/05/x.html">uid0130-blog: ラムダ計算の使い方</a></p>

<p>他にも:</p>

<ul>
  <li><a href="http://ja.wikipedia.org/wiki/%E3%83%A9%E3%83%A0%E3%83%80%E8%A8%88%E7%AE%97">ラムダ計算 - Wikipedia</a></li>
  <li><a href="http://www.slideshare.net/bleistift/f-28987517">F#の基礎(嘘)</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[目標と契約]]></title>
    <link href="http://solorab.github.io/blog/2014/03/28/goal-or-contract/"/>
    <updated>2014-03-28T23:20:46+09:00</updated>
    <id>http://solorab.github.io/blog/2014/03/28/goal-or-contract</id>
    <content type="html"><![CDATA[<p>もう(すぐ)春ですが、私はコミュ症です</p>

<!-- more -->

<p>そこまで重症ではないので気にしていませんが、ネット上で引き篭もりのようになっている状態は脱却したい<br />
面白い人は沢山いるので、眺めるだけなのは少しもったいない<br />
つまるところ、ROM専やめるぞ、と<br />
ついでにblogの頻度も上げたい</p>

<p>ゆえに、目標</p>

<ol>
  <li>twitter: 全ての日に関して、1回以上呟く</li>
  <li>blog: 最後の記事から7日以内に、何か書き公開する</li>
</ol>

<p>また、行為を行うこと事態を重視し、その内容は無視するものとする</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Openglの固定機能の座標変換を調べた]]></title>
    <link href="http://solorab.github.io/blog/2014/03/27/opengl-obsoleted-coord-and-trans/"/>
    <updated>2014-03-27T00:24:12+09:00</updated>
    <id>http://solorab.github.io/blog/2014/03/27/opengl-obsoleted-coord-and-trans</id>
    <content type="html"><![CDATA[<ul>
  <li>座標変換がよく分かってないので調べた</li>
  <li>固定機能と言って時代遅れで削除予定な部分</li>
  <li>学習の過程には必要なのではないでしょうか</li>
  <li>間違っているところもあると思う</li>
</ul>

<!-- more -->

<h2 id="section">主な参考</h2>
<ul>
  <li><a href="http://d.hatena.ne.jp/white_wheels/20100405/p1">OpenGL覚え書き3 座標系 - white wheelsのメモ</a></li>
  <li><a href="http://oshiro.bpe.es.osaka-u.ac.jp/people/staff/imura/computer/OpenGL/coordinates/disp_content">OpenGLの座標系</a></li>
  <li><a href="http://www.wakayama-u.ac.jp/~tokoi/opengl/libglut.html">GLUTによる「手抜き」OpenGL入門</a></li>
  <li><a href="http://homepage3.nifty.com/li-chu/OpenGL/OpenGL04.html">Lichu’s_Base</a></li>
</ul>

<h2 id="section-1">モデリング座標系 オブジェクト座標系</h2>
<ul>
  <li>モデル固有の座標系</li>
  <li>ポリゴンの左上や重心付近などが原点</li>
</ul>

<h2 id="section-2">モデリング変換</h2>
<ul>
  <li>モデリング座標系 -&gt; ワールド座標系</li>
  <li>modelview行列</li>
  <li>操作する行列らしい行列はこれだけ</li>
  <li>glTranslate* glScale* glRotate*</li>
</ul>

<h2 id="section-3">ワールド座標系 世界座標系</h2>
<ul>
  <li>ゲーム内の物体の共通の座標系</li>
  <li>原点は任意</li>
</ul>

<h2 id="section-4">視野変換</h2>
<ul>
  <li>ワールド座標系 -&gt; 視点座標系</li>
  <li>modelview行列</li>
  <li><a href="https://www.opengl.org/sdk/docs/man2/xhtml/gluLookAt.xml">gluLookAt</a>
    <ul>
      <li>単に行列掛けているだけ 冪等性なし</li>
      <li>modelview行列の頭に呼ぶ</li>
      <li>projection行列の最後でも変わらない? 陰影計算に影響する?</li>
    </ul>
  </li>
</ul>

<h2 id="section-5">視点座標系 眼点座標系</h2>
<ul>
  <li>カメラが原点</li>
  <li>スケールはワールド座標系に同じ</li>
</ul>

<h2 id="section-6">投影変換</h2>
<ul>
  <li>視点座標系 -&gt; 正規化デバイス座標系</li>
  <li>視界に入る部分を切り出す</li>
  <li>projection行列</li>
  <li>透視投影
    <ul>
      <li>glFrustum gluPerspective</li>
      <li>遠近感ある 遠くにあるほど小さい</li>
    </ul>
  </li>
  <li>平行投影 正射影
    <ul>
      <li>glOrtho gluOrtho2D</li>
      <li>遠近感ない つまり2D</li>
      <li>メニューとか書きたいときなど</li>
    </ul>
  </li>
  <li>これらも単に行列掛けているだけ 冪等性なし</li>
</ul>

<h2 id="section-7">正規化デバイス座標系 クリッピング座標系</h2>
<ul>
  <li>(-1,-1,-1) ~ (1,1,1) – 1辺の長さ2の立方体で中心が原点</li>
</ul>

<h2 id="section-8">ビューポート変換</h2>
<ul>
  <li>正規化デバイス座標系 -&gt; ウィンドウ座標系</li>
  <li>3D -&gt; 2D</li>
  <li>z軸を潰して、xy軸引き伸ばして、できた画像を画面に配置</li>
  <li><a href="https://www.opengl.org/sdk/docs/man/html/glViewport.xhtml">glViewport</a>
    <ul>
      <li>obsoletedでない</li>
      <li>冪等性あり</li>
      <li>少なくとも表面的には行列でない</li>
      <li>たいていwindowの大きさが変わった時に<code>glViewport(0, 0, screen_width, screen_height)</code>して画面いっぱいに表示</li>
    </ul>
  </li>
</ul>

<h2 id="section-9">ウィンドウ座標系</h2>
<ul>
  <li>画面そのまま</li>
  <li>単位はpixel</li>
  <li>左上が原点</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Extensible-effects上にoperational Monad作ってみた]]></title>
    <link href="http://solorab.github.io/blog/2014/03/13/operational-monad-on-extensible-effects/"/>
    <updated>2014-03-13T22:29:54+09:00</updated>
    <id>http://solorab.github.io/blog/2014/03/13/operational-monad-on-extensible-effects</id>
    <content type="html"><![CDATA[<p>extensible-effects上にoperational作った<br />
正確には、型パズル解いて遊んでいたらoperationalができていた</p>

<p>利点:</p>

<ul>
  <li>extensible-effectsとoperationalが合わさって最強に見える</li>
</ul>

<p>欠点:</p>

<ul>
  <li>Typeable1の宣言が必要
    <ul>
      <li>GADTs使うとderivingできないので面倒 (THで解決?)</li>
    </ul>
  </li>
</ul>

<!-- more -->

<h2 id="code">code</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="cm">{-# LANGUAGE ExistentialQuantification #-}</span>
</span><span class="line"><span class="cm">{-# LANGUAGE FlexibleContexts #-}</span>
</span><span class="line"><span class="cm">{-# LANGUAGE MultiParamTypeClasses #-}</span>
</span><span class="line"><span class="cm">{-# LANGUAGE Rank2Types #-}</span>
</span><span class="line"><span class="cm">{-# LANGUAGE ScopedTypeVariables #-}</span>
</span><span class="line"><span class="cm">{-# LANGUAGE TypeOperators #-}</span>
</span><span class="line"><span class="kr">module</span> <span class="nn">Control.Eff.Operational</span> <span class="p">(</span><span class="kt">Program</span><span class="p">,</span> <span class="nf">singleton</span><span class="p">,</span> <span class="nf">runProgram</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">
</span><span class="line"><span class="kr">import</span> <span class="nn">Control.Eff</span> <span class="p">(</span><span class="kt">Eff</span><span class="p">,</span> <span class="kt">Member</span><span class="p">,</span> <span class="p">(</span><span class="o">:&gt;</span><span class="p">),</span> <span class="kt">VE</span><span class="p">(</span><span class="kt">Val</span><span class="p">,</span> <span class="kt">E</span><span class="p">),</span> <span class="nf">inj</span><span class="p">,</span> <span class="nf">send</span><span class="p">,</span> <span class="nf">admin</span><span class="p">,</span> <span class="nf">handleRelay</span><span class="p">)</span>
</span><span class="line"><span class="kr">import</span> <span class="nn">Data.Typeable</span> <span class="p">(</span><span class="kt">Typeable1</span><span class="p">,</span> <span class="nf">typeOf1</span><span class="p">,</span> <span class="nf">mkTyCon3</span><span class="p">,</span> <span class="nf">mkTyConApp</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="kr">data</span> <span class="kt">Program</span> <span class="n">m</span> <span class="n">v</span> <span class="ow">=</span> <span class="n">forall</span> <span class="n">a</span><span class="o">.</span> <span class="kt">Program</span> <span class="p">(</span><span class="n">m</span> <span class="n">a</span><span class="p">)</span> <span class="p">(</span><span class="n">a</span> <span class="ow">-&gt;</span> <span class="n">v</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="kr">instance</span> <span class="kt">Functor</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">m</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">fmap</span> <span class="n">f</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">m</span> <span class="n">k</span><span class="p">)</span> <span class="ow">=</span> <span class="kt">Program</span> <span class="n">m</span> <span class="p">(</span><span class="n">f</span> <span class="o">.</span> <span class="n">k</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="kr">instance</span> <span class="kt">Typeable1</span> <span class="n">m</span> <span class="ow">=&gt;</span> <span class="kt">Typeable1</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">m</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">typeOf1</span> <span class="kr">_</span> <span class="ow">=</span> <span class="n">mkTyConApp</span> <span class="p">(</span><span class="n">mkTyCon3</span> <span class="s">&quot;&quot;</span> <span class="s">&quot;Control.Eff.Operational&quot;</span> <span class="s">&quot;Program&quot;</span><span class="p">)</span>
</span><span class="line">                           <span class="p">[</span><span class="n">typeOf1</span> <span class="p">(</span><span class="n">undefined</span> <span class="ow">::</span> <span class="n">m</span> <span class="nb">()</span><span class="p">)]</span>
</span><span class="line">
</span><span class="line"><span class="nf">singleton</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Typeable1</span> <span class="n">m</span><span class="p">,</span> <span class="kt">Member</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">m</span><span class="p">)</span> <span class="n">r</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="n">m</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">a</span>
</span><span class="line"><span class="nf">singleton</span> <span class="n">m</span> <span class="ow">=</span> <span class="n">send</span> <span class="p">(</span><span class="n">inj</span> <span class="o">.</span> <span class="kt">Program</span> <span class="n">m</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="nf">runProgram</span> <span class="ow">::</span> <span class="kt">Typeable1</span> <span class="n">f</span> <span class="ow">=&gt;</span> <span class="p">(</span><span class="n">forall</span> <span class="n">x</span><span class="o">.</span> <span class="n">f</span> <span class="n">x</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">x</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">f</span> <span class="kt">:&gt;</span> <span class="n">r</span><span class="p">)</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">a</span>
</span><span class="line"><span class="nf">runProgram</span> <span class="n">advent</span> <span class="ow">=</span> <span class="n">loop</span> <span class="o">.</span> <span class="n">admin</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">loop</span> <span class="p">(</span><span class="kt">Val</span> <span class="n">x</span><span class="p">)</span> <span class="ow">=</span> <span class="n">return</span> <span class="n">x</span>
</span><span class="line">    <span class="n">loop</span> <span class="p">(</span><span class="kt">E</span> <span class="n">u</span><span class="p">)</span> <span class="ow">=</span> <span class="n">handleRelay</span> <span class="n">u</span> <span class="n">loop</span>
</span><span class="line">        <span class="p">(</span><span class="nf">\</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">m</span> <span class="n">k</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="n">loop</span> <span class="o">.</span> <span class="n">k</span> <span class="o">=&lt;&lt;</span> <span class="n">advent</span> <span class="n">m</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section">比較</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">runProgram</span> <span class="ow">::</span> <span class="kt">Typeable1</span> <span class="n">f</span>          <span class="ow">=&gt;</span> <span class="p">(</span><span class="n">forall</span> <span class="n">x</span><span class="o">.</span> <span class="n">f</span> <span class="n">x</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">x</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">f</span> <span class="kt">:&gt;</span> <span class="n">r</span><span class="p">)</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">a</span>
</span><span class="line"><span class="nf">interpret</span>  <span class="ow">::</span> <span class="p">(</span><span class="kt">Functor</span> <span class="n">m</span><span class="p">,</span> <span class="kt">Monad</span> <span class="n">m</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="p">(</span><span class="n">forall</span> <span class="n">x</span><span class="o">.</span> <span class="n">instr</span> <span class="n">x</span> <span class="ow">-&gt;</span> <span class="n">m</span> <span class="n">x</span><span class="p">)</span> <span class="ow">-&gt;</span>      <span class="kt">Program</span> <span class="n">instr</span>   <span class="n">a</span> <span class="ow">-&gt;</span>     <span class="n">m</span> <span class="n">a</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当然似ている</p>

<h2 id="example">example</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kr">data</span> <span class="kt">Jail</span> <span class="n">a</span> <span class="kr">where</span>
</span><span class="line">    <span class="kt">Print</span> <span class="ow">::</span> <span class="kt">String</span> <span class="ow">-&gt;</span> <span class="kt">Jail</span> <span class="nb">()</span>
</span><span class="line">    <span class="kt">Scan</span> <span class="ow">::</span> <span class="kt">Jail</span> <span class="kt">String</span>
</span><span class="line">
</span><span class="line"><span class="kr">instance</span> <span class="kt">Typeable1</span> <span class="kt">Jail</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">typeOf1</span> <span class="kr">_</span> <span class="ow">=</span> <span class="n">mkTyConApp</span> <span class="p">(</span><span class="n">mkTyCon3</span> <span class="s">&quot;test&quot;</span> <span class="s">&quot;Main&quot;</span> <span class="s">&quot;Jail&quot;</span><span class="p">)</span> <span class="kt">[]</span>
</span><span class="line">
</span><span class="line"><span class="nf">prog</span> <span class="ow">::</span> <span class="kt">Member</span> <span class="p">(</span><span class="kt">Program</span> <span class="kt">Jail</span><span class="p">)</span> <span class="n">r</span> <span class="ow">=&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="nb">()</span>
</span><span class="line"><span class="nf">prog</span> <span class="ow">=</span> <span class="kr">do</span>
</span><span class="line">    <span class="n">singleton</span> <span class="o">$</span> <span class="kt">Print</span> <span class="s">&quot;getting input...&quot;</span>
</span><span class="line">    <span class="n">str</span> <span class="ow">&lt;-</span> <span class="n">singleton</span> <span class="kt">Scan</span>
</span><span class="line">    <span class="n">singleton</span> <span class="o">$</span> <span class="kt">Print</span> <span class="s">&quot;ok&quot;</span>
</span><span class="line">    <span class="n">singleton</span> <span class="o">$</span> <span class="kt">Print</span> <span class="p">(</span><span class="s">&quot;the input is &quot;</span> <span class="o">++</span> <span class="n">str</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="nf">adventIO</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Member</span> <span class="p">(</span><span class="kt">Lift</span> <span class="kt">IO</span><span class="p">)</span> <span class="n">r</span><span class="p">,</span> <span class="kt">SetMember</span> <span class="kt">Lift</span> <span class="p">(</span><span class="kt">Lift</span> <span class="kt">IO</span><span class="p">)</span> <span class="n">r</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="kt">Jail</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">a</span>
</span><span class="line"><span class="nf">adventIO</span> <span class="p">(</span><span class="kt">Print</span> <span class="n">a</span><span class="p">)</span> <span class="ow">=</span> <span class="n">lift</span> <span class="o">$</span> <span class="n">putStrLn</span> <span class="n">a</span>
</span><span class="line"><span class="nf">adventIO</span> <span class="kt">Scan</span> <span class="ow">=</span> <span class="n">lift</span> <span class="n">getLine</span>
</span><span class="line">
</span><span class="line"><span class="nf">main</span> <span class="ow">::</span> <span class="kt">IO</span> <span class="nb">()</span>
</span><span class="line"><span class="nf">main</span> <span class="ow">=</span> <span class="n">runLift</span> <span class="o">$</span> <span class="n">runProgram</span> <span class="n">adventIO</span> <span class="n">prog</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>もちろんrunProgramの第一引数は自由に差し替えられる</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">adventPure</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Member</span> <span class="p">(</span><span class="kt">Writer</span> <span class="kt">String</span><span class="p">)</span> <span class="n">r</span><span class="p">,</span> <span class="kt">Member</span> <span class="p">(</span><span class="kt">State</span> <span class="p">[</span><span class="kt">String</span><span class="p">])</span> <span class="n">r</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="kt">Jail</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">a</span>
</span><span class="line"><span class="nf">adventPure</span> <span class="p">(</span><span class="kt">Print</span> <span class="n">a</span><span class="p">)</span> <span class="ow">=</span> <span class="n">tell</span> <span class="n">a</span>
</span><span class="line"><span class="nf">adventPure</span> <span class="kt">Scan</span> <span class="ow">=</span> <span class="kr">do</span>
</span><span class="line">    <span class="n">x</span> <span class="ow">&lt;-</span> <span class="p">(</span><span class="n">fromMaybe</span> <span class="kt">[]</span> <span class="o">.</span> <span class="n">headMay</span><span class="p">)</span> <span class="o">&lt;$&gt;</span> <span class="n">get</span>
</span><span class="line">    <span class="n">modify</span> <span class="p">(</span><span class="n">tailSafe</span> <span class="ow">::</span> <span class="p">[</span><span class="kt">String</span><span class="p">]</span> <span class="ow">-&gt;</span> <span class="p">[</span><span class="kt">String</span><span class="p">])</span>
</span><span class="line">    <span class="n">return</span> <span class="n">x</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>型注釈はextensible-effectsの問題 newtypeすれば消えます</p>

<h2 id="section-1">おまけ</h2>
<p>advent部分の制約にoperationalを使うと、つまりoperationalの実装をoperationalで与えるといろいろ楽しい</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">advent</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Member</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">t</span><span class="p">)</span> <span class="n">r</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="n">t</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">a</span>
</span><span class="line"><span class="nf">runProgram</span> <span class="n">advent</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Member</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">t</span><span class="p">)</span> <span class="n">r</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="kt">Eff</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">t</span> <span class="kt">:&gt;</span> <span class="n">r</span><span class="p">)</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">a</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">advent</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Member</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">t</span><span class="p">)</span> <span class="n">r</span><span class="p">,</span> <span class="kt">Member</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">u</span><span class="p">)</span> <span class="n">r</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="n">s</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">a</span>
</span><span class="line"><span class="nf">runProgram</span> <span class="n">advent</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Member</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">t</span><span class="p">)</span> <span class="n">r</span><span class="p">,</span> <span class="kt">Member</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">u</span><span class="p">)</span> <span class="n">r</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="kt">Eff</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">s</span> <span class="kt">:&gt;</span> <span class="n">r</span><span class="p">)</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">a</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">advent</span>  <span class="ow">::</span> <span class="p">(</span><span class="kt">Member</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">u</span><span class="p">)</span> <span class="n">r</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="n">s</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">a</span>
</span><span class="line"><span class="nf">advent&#39;</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Member</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">u</span><span class="p">)</span> <span class="n">r</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="n">t</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">a</span>
</span><span class="line"><span class="nf">runProgram</span> <span class="n">advent&#39;</span> <span class="o">.</span> <span class="n">runProgram</span> <span class="n">advent</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Member</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">u</span><span class="p">)</span> <span class="n">r</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="kt">Eff</span> <span class="p">(</span><span class="kt">Program</span> <span class="n">s</span> <span class="kt">:&gt;</span> <span class="kt">Program</span> <span class="n">t</span> <span class="kt">:&gt;</span> <span class="n">r</span><span class="p">)</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">Eff</span> <span class="n">r</span> <span class="n">a</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">関連</h2>
<ul>
  <li><a href="http://notogawa.hatenablog.com/entry/2014/02/22/004828">IOアクションひとつひとつを利用許諾し・テスト可能にする - ぼくのぬまち 出張版</a></li>
  <li><a href="http://fumieval.hatenablog.com/entry/2013/05/09/223604">Freeモナドを超えた！？operationalモナドを使ってみよう - モナドとわたしとコモナド</a></li>
</ul>

<hr />

<dl>
  <dt>2014/04/11</dt>
  <dd>冗長だった部分を削減</dd>
</dl>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parsecで非決定的パース]]></title>
    <link href="http://solorab.github.io/blog/2014/01/25/non-deterministic-parsing-with-parsec/"/>
    <updated>2014-01-25T18:28:27+09:00</updated>
    <id>http://solorab.github.io/blog/2014/01/25/non-deterministic-parsing-with-parsec</id>
    <content type="html"><![CDATA[<p>ざっくりparseして、出力を<code>filter</code>や<code>head</code>で加工したかった</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">fork</span> <span class="ow">::</span> <span class="p">[</span><span class="kt">ParsecT</span> <span class="n">s</span> <span class="n">u</span> <span class="kt">[]</span> <span class="n">a</span><span class="p">]</span> <span class="ow">-&gt;</span> <span class="kt">ParsecT</span> <span class="n">s</span> <span class="n">u</span> <span class="kt">[]</span> <span class="n">a</span>
</span><span class="line"><span class="nf">fork</span> <span class="ow">=</span> <span class="n">join</span> <span class="o">.</span> <span class="n">lift</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>※ list-monadで非決定的計算できるのは、parsecに限った話ではない</p>

<!-- more -->

<p><code>ParsecT</code>をlist-monadと合成するだけなので、上のように定義する<br />
型注釈なしなら<code>join . lift :: (Monad (t m), Monad m, MonadTrans t) =&gt; m (t m a) -&gt; t m a</code></p>

<p>非決定的の厳密な定義を知らないが、chooseとfail<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup>が使えるので非決定的と呼んでいいはず<br />
ただし<code>fail = fork []</code>であって、<code>Prelude.fail</code>(<code>Text.Parsec.parserFail</code>)ではない</p>

<h2 id="section">例</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">p</span> <span class="ow">=</span> <span class="n">try</span> <span class="n">p&#39;</span> <span class="o">&lt;|&gt;</span> <span class="n">many1</span> <span class="n">anyChar</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">p&#39;</span> <span class="ow">=</span> <span class="kr">do</span>
</span><span class="line">        <span class="n">x</span> <span class="ow">&lt;-</span> <span class="n">manyTill</span> <span class="n">anyChar</span> <span class="o">$</span> <span class="n">char</span> <span class="sc">&#39;+&#39;</span>
</span><span class="line">        <span class="n">fork</span>
</span><span class="line">            <span class="p">[</span> <span class="n">return</span> <span class="n">x</span>
</span><span class="line">            <span class="p">,</span> <span class="p">(</span><span class="n">x</span> <span class="o">++</span><span class="p">)</span> <span class="o">&lt;$&gt;</span> <span class="n">p</span>
</span><span class="line">            <span class="p">]</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">runParserT</span> <span class="n">p</span> <span class="nb">()</span> <span class="s">&quot;input&quot;</span> <span class="s">&quot;a+b+c&quot;</span> <span class="kr">where</span>
</span><span class="line"><span class="p">[</span><span class="kt">Right</span> <span class="s">&quot;a&quot;</span><span class="p">,</span><span class="kt">Right</span> <span class="s">&quot;ab&quot;</span><span class="p">,</span><span class="kt">Right</span> <span class="s">&quot;abc&quot;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">q</span> <span class="ow">=</span> <span class="n">try</span> <span class="n">q&#39;</span> <span class="o">&lt;|&gt;</span> <span class="n">fork</span> <span class="kt">[]</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">q&#39;</span> <span class="ow">=</span> <span class="kr">do</span>
</span><span class="line">        <span class="n">x</span> <span class="ow">&lt;-</span> <span class="n">p</span>
</span><span class="line">        <span class="n">fork</span>
</span><span class="line">            <span class="p">[</span> <span class="n">return</span> <span class="p">[</span><span class="n">x</span><span class="p">]</span>
</span><span class="line">            <span class="p">,</span> <span class="p">(</span><span class="n">x</span> <span class="kt">:</span><span class="p">)</span> <span class="o">&lt;$&gt;</span> <span class="n">q</span>
</span><span class="line">            <span class="p">]</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">runParserT</span> <span class="n">p</span> <span class="nb">()</span> <span class="s">&quot;input&quot;</span> <span class="s">&quot;a+b+c&quot;</span> <span class="kr">where</span>
</span><span class="line"><span class="p">[</span><span class="kt">Right</span> <span class="p">[</span><span class="s">&quot;a&quot;</span><span class="p">],</span><span class="kt">Right</span> <span class="p">[</span><span class="s">&quot;a&quot;</span><span class="p">,</span><span class="s">&quot;b&quot;</span><span class="p">],</span><span class="kt">Right</span> <span class="p">[</span><span class="s">&quot;a&quot;</span><span class="p">,</span><span class="s">&quot;b&quot;</span><span class="p">,</span><span class="s">&quot;c&quot;</span><span class="p">],</span><span class="kt">Right</span> <span class="p">[</span><span class="s">&quot;a&quot;</span><span class="p">,</span><span class="s">&quot;bc&quot;</span><span class="p">],</span><span class="kt">Right</span> <span class="p">[</span><span class="s">&quot;ab&quot;</span><span class="p">],</span><span class="kt">Right</span> <span class="p">[</span><span class="s">&quot;ab&quot;</span><span class="p">,</span><span class="s">&quot;c&quot;</span><span class="p">],</span><span class="kt">Right</span> <span class="p">[</span><span class="s">&quot;abc&quot;</span><span class="p">]]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>ここではきものをぬいでください</code>のような文をparseするとき便利なんじゃないでしょうか</p>

<h2 id="section-1">参考</h2>

<ul>
  <li><a href="http://www.asahi-net.or.jp/~kc7k-nd/onlispjhtml/nondeterminism.html">On Lisp — 非決定性</a></li>
  <li><a href="http://hooki.blog23.fc2.com/blog-entry-74.html">雑草ブログ Listモナドで非決定的計算をしよう</a></li>
</ul>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>On Lispの説明による <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
</feed>
