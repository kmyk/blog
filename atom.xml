<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[高機能うさぎ小屋]]></title>
  <link href="http://solorab.github.io/atom.xml" rel="self"/>
  <link href="http://solorab.github.io/"/>
  <updated>2014-01-14T18:12:24+09:00</updated>
  <id>http://solorab.github.io/</id>
  <author>
    <name><![CDATA[そろうさぎ]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Free Monadとはmonadそのものである]]></title>
    <link href="http://solorab.github.io/blog/2013/12/29/free-monad-is-monad-itself/"/>
    <updated>2013-12-29T17:22:11+09:00</updated>
    <id>http://solorab.github.io/blog/2013/12/29/free-monad-is-monad-itself</id>
    <content type="html"><![CDATA[<p>以前少し挑戦して敗れたが、ふと思い出してリベンジした</p>

<p>結論としては<code>free monad</code>とはmonadをdataとして表現したものであると</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kr">data</span> <span class="kt">Free</span> <span class="n">f</span> <span class="n">a</span> <span class="ow">=</span> <span class="kt">Pure</span> <span class="n">a</span> <span class="o">|</span> <span class="kt">Free</span> <span class="p">(</span><span class="n">f</span> <span class="p">(</span><span class="kt">Free</span> <span class="n">f</span> <span class="n">a</span><span class="p">))</span>
</span><span class="line"><span class="kr">instance</span> <span class="kt">Functor</span> <span class="n">f</span> <span class="ow">=&gt;</span> <span class="kt">Monad</span> <span class="p">(</span><span class="kt">Free</span> <span class="n">f</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">return</span> <span class="ow">=</span> <span class="kt">Pure</span>
</span><span class="line">    <span class="kt">Pure</span> <span class="n">a</span> <span class="o">&gt;&gt;=</span> <span class="n">k</span> <span class="ow">=</span> <span class="n">k</span> <span class="n">a</span>
</span><span class="line">    <span class="kt">Free</span> <span class="n">fm</span> <span class="o">&gt;&gt;=</span> <span class="n">k</span> <span class="ow">=</span> <span class="kt">Free</span> <span class="p">(</span><span class="n">fmap</span> <span class="p">(</span><span class="o">&gt;&gt;=</span><span class="n">k</span><span class="p">)</span> <span class="n">fm</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!-- more -->

<h2 id="section">型のイメージ</h2>
<p>型レベルで、<code>ffffffffa</code>や<code>ffa</code>のような構造を畳み込む<br />
つまり<code>Free f a</code>は<code>fffffffa</code>と読み替えられる</p>

<p>たとえば</p>

<ul>
  <li><code>Free [] a</code> ~ <code>[[[[[a]]]]]</code></li>
  <li><code>Free Maybe a</code> ~ <code>Maybe (Maybe (Maybe a))</code></li>
</ul>

<h2 id="section-1">値と型</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kt">Free</span> <span class="p">[</span><span class="kt">Free</span> <span class="p">[</span><span class="kt">Free</span> <span class="p">[</span><span class="kt">Pure</span> <span class="nb">()</span><span class="p">]]]</span> <span class="ow">::</span> <span class="kt">Free</span> <span class="kt">[]</span> <span class="nb">()</span>
</span><span class="line"><span class="kt">Free</span> <span class="p">[</span><span class="kt">Pure</span> <span class="mi">3</span><span class="p">,</span> <span class="kt">Pure</span> <span class="mi">2</span><span class="p">,</span> <span class="kt">Free</span> <span class="p">[</span><span class="kt">Pure</span> <span class="mi">1</span><span class="p">,</span> <span class="kt">Free</span> <span class="kt">[]</span><span class="p">],</span> <span class="kt">Pure</span> <span class="mi">0</span><span class="p">]</span> <span class="ow">::</span> <span class="kt">Num</span> <span class="n">a</span> <span class="ow">=&gt;</span> <span class="kt">Free</span> <span class="kt">[]</span> <span class="n">a</span>
</span><span class="line"><span class="kt">Free</span> <span class="kt">[]</span> <span class="ow">::</span> <span class="kt">Free</span> <span class="kt">[]</span> <span class="n">a</span>
</span><span class="line"><span class="kt">Pure</span> <span class="nb">()</span> <span class="ow">::</span> <span class="kt">Free</span> <span class="n">f</span> <span class="nb">()</span>
</span><span class="line"><span class="kt">Free</span> <span class="p">[</span><span class="kt">Pure</span> <span class="o">$</span> <span class="kt">Free</span> <span class="p">[</span><span class="kt">Pure</span> <span class="nb">()</span><span class="p">]]</span> <span class="ow">::</span> <span class="kt">Free</span> <span class="kt">[]</span> <span class="p">(</span><span class="kt">Free</span> <span class="kt">[]</span> <span class="nb">()</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>よく分からない</p>

<h2 id="join">手を動かす: join</h2>
<p><code>&gt;&gt;=</code>や<code>bind</code>と呼ばれる<code>Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b</code>は<br />
<code>Control.Monad.join</code>こと<code>Monad m =&gt; m (m a) -&gt; m a</code>で定義できる<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup><sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>ので<br />
理解のため<code>join</code>を定義してみる</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">join&#39;</span> <span class="ow">::</span> <span class="kt">Functor</span> <span class="n">f</span> <span class="ow">=&gt;</span> <span class="kt">Free</span> <span class="n">f</span> <span class="p">(</span><span class="kt">Free</span> <span class="n">f</span> <span class="n">a</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="kt">Free</span> <span class="n">f</span> <span class="n">a</span>
</span><span class="line"><span class="nf">join&#39;</span> <span class="p">(</span><span class="kt">Pure</span> <span class="n">a</span><span class="p">)</span> <span class="ow">=</span> <span class="n">a</span>
</span><span class="line"><span class="nf">join&#39;</span> <span class="p">(</span><span class="kt">Free</span> <span class="n">fFreefa</span><span class="p">)</span> <span class="ow">=</span> <span class="kt">Free</span> <span class="p">(</span><span class="n">fmap</span> <span class="n">join&#39;</span> <span class="n">fFreefa</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="maybe">実際に: Maybe</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="kr">let</span> <span class="n">x</span> <span class="ow">=</span> <span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="kt">Nothing</span><span class="p">))))</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="kt">:</span><span class="n">t</span> <span class="n">x</span>
</span><span class="line"><span class="nf">x</span> <span class="ow">::</span> <span class="kt">Free</span> <span class="kt">Maybe</span> <span class="p">(</span><span class="kt">Free</span> <span class="kt">Maybe</span> <span class="p">(</span><span class="kt">Maybe</span> <span class="n">a</span><span class="p">))</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">join</span> <span class="n">x</span>
</span><span class="line"><span class="kt">Free</span> <span class="p">(</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Free</span> <span class="p">(</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Free</span> <span class="p">(</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="kt">Nothing</span><span class="p">))))))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>手で追う</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">join</span>          <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="kt">Nothing</span><span class="p">)))))</span>
</span><span class="line"><span class="kt">Free</span> <span class="p">(</span><span class="n">fmap</span>   <span class="n">join</span> <span class="o">$</span> <span class="kt">Just</span> <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="kt">Nothing</span><span class="p">)))))</span>
</span><span class="line"><span class="kt">Free</span> <span class="p">(</span><span class="kt">Just</span> <span class="o">$</span> <span class="n">join</span>        <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="kt">Nothing</span><span class="p">)))))</span>
</span><span class="line"><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span>          <span class="p">(</span><span class="n">join</span> <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="kt">Nothing</span><span class="p">)))))</span>
</span><span class="line"><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span>          <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="n">join</span> <span class="p">(</span><span class="kt">Pure</span> <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="kt">Nothing</span><span class="p">)))))</span>
</span><span class="line"><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span>          <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span>             <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="kt">Nothing</span><span class="p">)))</span>
</span><span class="line">               <span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span>       <span class="p">(</span><span class="kt">Free</span><span class="o">$</span><span class="kt">Just</span> <span class="p">(</span><span class="kt">Pure</span> <span class="kt">Nothing</span><span class="p">)))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>初期状態</li>
  <li><code>join</code>の展開</li>
  <li><code>fmap</code>の展開: <code>fmap f (Just a) = Just (f a)</code></li>
  <li>見やすくしただけ: <code>join</code>と<code>Free$Just</code>が入れ替わったのが分かる</li>
  <li>同様にする</li>
  <li><code>Pure</code>は<code>join</code>と対消滅する</li>
  <li>見やすくしただけ: 外側のPureを道連れにjoinが消え、外側と内側のFreeの境目を潰しているのが分かる</li>
</ol>

<h3 id="list">もう少し複雑な例: List</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="kr">let</span> <span class="n">x</span> <span class="ow">=</span> <span class="kt">Free</span><span class="p">[</span> <span class="kt">Free</span><span class="p">[</span> <span class="kt">Free[]</span><span class="p">,</span> <span class="kt">Pure</span><span class="p">(</span> <span class="kt">Free[]</span> <span class="p">)</span> <span class="p">],</span> <span class="kt">Pure</span><span class="p">(</span> <span class="kt">Free</span><span class="p">[</span> <span class="kt">Pure</span><span class="nb">()</span> <span class="p">]</span> <span class="p">)</span> <span class="p">]</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="kt">:</span><span class="n">t</span> <span class="n">x</span>
</span><span class="line"><span class="nf">x</span> <span class="ow">::</span> <span class="kt">Free</span> <span class="kt">[]</span> <span class="p">(</span><span class="kt">Free</span> <span class="kt">[]</span> <span class="nb">()</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">join</span> <span class="n">x</span>
</span><span class="line"><span class="kt">Free</span> <span class="p">[</span><span class="kt">Free</span> <span class="p">[</span><span class="kt">Free</span> <span class="kt">[]</span><span class="p">,</span><span class="kt">Free</span> <span class="kt">[]</span><span class="p">],</span><span class="kt">Free</span> <span class="p">[</span><span class="kt">Pure</span> <span class="nb">()</span><span class="p">]]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">join</span><span class="o">$</span><span class="kt">Free</span><span class="p">[</span>      <span class="kt">Free</span><span class="p">[</span>      <span class="kt">Free[]</span><span class="p">,</span>      <span class="kt">Pure</span><span class="p">(</span> <span class="kt">Free[]</span> <span class="p">)</span> <span class="p">],</span>      <span class="kt">Pure</span><span class="p">(</span> <span class="kt">Free</span><span class="p">[</span> <span class="kt">Pure</span><span class="nb">()</span> <span class="p">]</span> <span class="p">)</span> <span class="p">]</span>
</span><span class="line">     <span class="kt">Free</span><span class="p">[</span> <span class="n">join</span><span class="o">$</span><span class="kt">Free</span><span class="p">[</span>      <span class="kt">Free[]</span><span class="p">,</span>      <span class="kt">Pure</span><span class="p">(</span> <span class="kt">Free[]</span> <span class="p">)</span> <span class="p">],</span> <span class="n">join</span><span class="o">$</span><span class="kt">Pure</span><span class="p">(</span> <span class="kt">Free</span><span class="p">[</span> <span class="kt">Pure</span><span class="nb">()</span> <span class="p">]</span> <span class="p">)</span> <span class="p">]</span>
</span><span class="line">     <span class="kt">Free</span><span class="p">[</span>      <span class="kt">Free</span><span class="p">[</span> <span class="n">join</span><span class="o">$</span><span class="kt">Free[]</span><span class="p">,</span> <span class="n">join</span><span class="o">$</span><span class="kt">Pure</span><span class="p">(</span> <span class="kt">Free[]</span> <span class="p">)</span> <span class="p">],</span>            <span class="kt">Free</span><span class="p">[</span> <span class="kt">Pure</span><span class="nb">()</span> <span class="p">]</span>   <span class="p">]</span>
</span><span class="line">     <span class="kt">Free</span><span class="p">[</span>      <span class="kt">Free</span><span class="p">[</span>      <span class="kt">Free[]</span><span class="p">,</span>            <span class="kt">Free[]</span>   <span class="p">],</span>            <span class="kt">Free</span><span class="p">[</span> <span class="kt">Pure</span><span class="nb">()</span> <span class="p">]</span>   <span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">解釈</h3>
<p><code>join</code>の型が<code>Free f (Free f a) -&gt; Free f a</code>で、<code>Free f a</code>は<code>fffffffa</code>などと読み替えられることから、<br />
<code>join</code>とは<code>ffff(ffffa) -&gt; ffffffffa</code>的ななにかである<br />
それともつじつまの合う結果である<br />
なんとなく雰囲気はつかめた</p>

<h3 id="bind">bindへ</h3>
<p>そして</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">bind</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Functor</span> <span class="n">m</span><span class="p">,</span> <span class="kt">Monad</span> <span class="n">m</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="n">m</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="n">a</span> <span class="ow">-&gt;</span> <span class="n">m</span> <span class="n">b</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="n">m</span> <span class="n">b</span>
</span><span class="line"><span class="nf">bind</span> <span class="n">x</span> <span class="n">f</span> <span class="ow">=</span> <span class="n">join</span> <span class="o">$</span> <span class="n">fmap</span> <span class="n">f</span> <span class="n">x</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>である<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="kt">Free</span><span class="p">[</span> <span class="kt">Pure</span> <span class="mi">7</span><span class="p">,</span> <span class="kt">Pure</span> <span class="mi">2</span> <span class="p">]</span> <span class="o">&gt;&gt;=</span> <span class="p">(</span><span class="nf">\</span> <span class="n">x</span> <span class="ow">-&gt;</span> <span class="kt">Free</span><span class="p">[</span> <span class="kt">Pure</span> <span class="p">(</span><span class="n">show</span> <span class="n">x</span><span class="p">),</span> <span class="kt">Pure</span> <span class="p">(</span><span class="n">show</span> <span class="p">(</span><span class="n">x</span> <span class="o">^</span> <span class="n">x</span><span class="p">))</span> <span class="p">])</span>
</span><span class="line"><span class="kt">Free</span> <span class="p">[</span><span class="kt">Free</span> <span class="p">[</span><span class="kt">Pure</span> <span class="s">&quot;7&quot;</span><span class="p">,</span><span class="kt">Pure</span> <span class="s">&quot;823543&quot;</span><span class="p">],</span><span class="kt">Free</span> <span class="p">[</span><span class="kt">Pure</span> <span class="s">&quot;2&quot;</span><span class="p">,</span><span class="kt">Pure</span> <span class="s">&quot;4&quot;</span><span class="p">]]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>右辺のPureの位置に左辺が埋め込まれている</p>

<h2 id="section-3">自由</h2>
<p>弄っていたらいつの間にか気がついた<br />
<code>Free</code>の<code>free</code>とはおそらくfree monoidやfree magmaの<code>free</code>であろう<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup><br />
つまり、公理の等式以外に元の間の関係式をもたない、という意味<br />
この場合公理とはモナド則</p>

<p>つまりGADTsで定義して見やすくすると</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kr">class</span> <span class="kt">Functor</span> <span class="n">m</span> <span class="ow">=&gt;</span> <span class="kt">Monad</span> <span class="n">m</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">unit</span> <span class="ow">::</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="n">m</span> <span class="n">a</span>
</span><span class="line">    <span class="n">join</span> <span class="ow">::</span> <span class="n">m</span> <span class="p">(</span><span class="n">m</span> <span class="n">a</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="n">m</span> <span class="n">a</span>
</span><span class="line"><span class="kr">data</span> <span class="kt">FreeMonad</span> <span class="n">f</span> <span class="n">a</span> <span class="kr">where</span>
</span><span class="line">    <span class="kt">Unit</span> <span class="ow">::</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">FreeMonad</span> <span class="n">f</span> <span class="n">a</span>
</span><span class="line">    <span class="kt">Join</span> <span class="ow">::</span> <span class="n">f</span> <span class="p">(</span><span class="kt">FreeMonad</span> <span class="n">f</span> <span class="n">a</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="kt">FreeMonad</span> <span class="n">f</span> <span class="n">a</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>とある程度綺麗に対応している</p>

<h2 id="section-4">結論</h2>
<p><code>Free</code>とはmonadそのものであり、monadをdataとして表現したものである<br />
lispに似ているなと感じる</p>

<h2 id="section-5">予防線と残った疑問</h2>
<p><code>free monad</code>には別の定義も存在して</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="c1">-- join / f無し</span>
</span><span class="line"><span class="kr">data</span> <span class="kt">FreeMonad</span> <span class="n">a</span> <span class="kr">where</span>
</span><span class="line">    <span class="kt">Unit</span> <span class="ow">::</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">FreeMonad</span> <span class="n">a</span>
</span><span class="line">    <span class="kt">Join</span> <span class="ow">::</span> <span class="kt">FreeMonad</span> <span class="p">(</span><span class="kt">FreeMonad</span> <span class="n">a</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="kt">FreeMonad</span> <span class="n">a</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="c1">-- bind / f無し</span>
</span><span class="line"><span class="kr">data</span> <span class="kt">FreeMonad</span> <span class="n">a</span> <span class="kr">where</span>
</span><span class="line">    <span class="kt">Return</span> <span class="ow">::</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">FreeMonad</span> <span class="n">a</span>
</span><span class="line">    <span class="kt">Bind</span> <span class="ow">::</span> <span class="kt">FreeMonad</span> <span class="n">x</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="n">x</span> <span class="ow">-&gt;</span> <span class="kt">FreeMonad</span> <span class="n">a</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="kt">FreeMonad</span> <span class="n">a</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="c1">-- bind / f有り(BindのFreeMonad消去)</span>
</span><span class="line"><span class="kr">data</span> <span class="kt">FreeMonad</span> <span class="n">f</span> <span class="n">a</span> <span class="kr">where</span>
</span><span class="line">    <span class="kt">Return</span> <span class="ow">::</span> <span class="n">a</span> <span class="ow">-&gt;</span> <span class="kt">FreeMonad</span> <span class="n">f</span> <span class="n">a</span>
</span><span class="line">    <span class="kt">Bind</span> <span class="ow">::</span> <span class="n">f</span> <span class="n">x</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="n">x</span> <span class="ow">-&gt;</span> <span class="kt">FreeMonad</span> <span class="n">f</span> <span class="n">a</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="kt">FreeMonad</span> <span class="n">f</span> <span class="n">a</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>と思いつく範囲だけで3つ<br />
しかもこの3つは<code>f Functor</code>制約なしでmonadになる</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="c1">-- bind / f無し</span>
</span><span class="line"><span class="kr">instance</span> <span class="kt">Monad</span> <span class="kt">FreeMonad</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">return</span> <span class="ow">=</span> <span class="kt">Return</span>
</span><span class="line">    <span class="p">(</span><span class="o">&gt;&gt;=</span><span class="p">)</span> <span class="ow">=</span> <span class="kt">Bind</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="c1">-- bind / f有り(BindのFreeMonad消去)</span>
</span><span class="line"><span class="kr">instance</span> <span class="kt">Monad</span> <span class="p">(</span><span class="kt">FreeMonad</span> <span class="n">f</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">return</span> <span class="ow">=</span> <span class="kt">Return</span>
</span><span class="line">    <span class="p">(</span><span class="o">&gt;&gt;=</span><span class="p">)</span> <span class="p">(</span><span class="kt">Return</span> <span class="n">a</span><span class="p">)</span> <span class="n">a2fb</span> <span class="ow">=</span> <span class="n">a2fb</span> <span class="n">a</span>
</span><span class="line">    <span class="p">(</span><span class="o">&gt;&gt;=</span><span class="p">)</span> <span class="p">(</span><span class="kt">Bind</span> <span class="n">fx</span> <span class="n">x2fa</span><span class="p">)</span> <span class="n">a2fb</span> <span class="ow">=</span> <span class="kt">Bind</span> <span class="n">fx</span> <span class="p">((</span><span class="o">&gt;&gt;=</span> <span class="n">a2fb</span><span class="p">)</span> <span class="o">.</span> <span class="n">x2fa</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>一方<code>Free</code>で使われている定義は</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="c1">-- join / f有り(JoinのFreeMonad消去)</span>
</span><span class="line"><span class="kr">instance</span> <span class="kt">Functor</span> <span class="n">f</span> <span class="ow">=&gt;</span> <span class="kt">Functor</span> <span class="p">(</span><span class="kt">FreeMonad</span> <span class="n">f</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">fmap</span> <span class="n">a2b</span> <span class="p">(</span><span class="kt">Unit</span> <span class="n">a</span><span class="p">)</span> <span class="ow">=</span> <span class="kt">Unit</span> <span class="o">$</span> <span class="n">a2b</span> <span class="n">a</span>
</span><span class="line">    <span class="n">fmap</span> <span class="n">a2b</span> <span class="p">(</span><span class="kt">Join</span> <span class="n">ffa</span><span class="p">)</span> <span class="ow">=</span> <span class="kt">Join</span> <span class="o">$</span> <span class="n">fmap</span> <span class="p">(</span><span class="n">fmap</span> <span class="n">a2b</span><span class="p">)</span> <span class="n">ffa</span>
</span><span class="line"><span class="nf">join&#39;</span> <span class="ow">::</span> <span class="kt">Functor</span> <span class="n">f</span> <span class="ow">=&gt;</span> <span class="kt">FreeMonad</span> <span class="n">f</span> <span class="p">(</span><span class="kt">FreeMonad</span> <span class="n">f</span> <span class="n">a</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="kt">FreeMonad</span> <span class="n">f</span> <span class="n">a</span>
</span><span class="line"><span class="nf">join&#39;</span> <span class="p">(</span><span class="kt">Unit</span> <span class="n">a</span><span class="p">)</span> <span class="ow">=</span> <span class="n">a</span>
</span><span class="line"><span class="nf">join&#39;</span> <span class="p">(</span><span class="kt">Join</span> <span class="n">ffa</span><span class="p">)</span> <span class="ow">=</span> <span class="kt">Join</span> <span class="o">$</span> <span class="n">fmap</span> <span class="n">join&#39;</span> <span class="n">ffa</span>
</span><span class="line"><span class="kr">instance</span> <span class="kt">Functor</span> <span class="n">f</span> <span class="ow">=&gt;</span> <span class="kt">Monad</span> <span class="p">(</span><span class="kt">FreeMonad</span> <span class="n">f</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">return</span> <span class="ow">=</span> <span class="kt">Unit</span>
</span><span class="line">    <span class="p">(</span><span class="o">&gt;&gt;=</span><span class="p">)</span> <span class="n">fa</span> <span class="n">a2fb</span> <span class="ow">=</span> <span class="n">join&#39;</span> <span class="o">$</span> <span class="n">fmap</span> <span class="n">a2fb</span> <span class="n">fa</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>と要Functor制約<br />
<code>Join</code>の<code>f (FreeMonad f a)</code>を展開するのにどうしても必要なようだ<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup></p>

<p>そしてそもそも<code>f</code>が入るとはどういうことなのかいまいち分からない<br />
もしかしたら<code>Free</code>はfree monadでなく類似の別な概念のfreeかもしれない<br />
圏論に精通していないので分からない<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup></p>

<h3 id="operational">operational</h3>
<p>さらに強いと聞くoperational monadはこのbind型のfree monadなのではと考えた</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kr">type</span> <span class="kt">Program</span> <span class="n">t</span> <span class="ow">=</span> <span class="kt">Free</span> <span class="p">(</span><span class="kt">Coyoneda</span> <span class="n">t</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>らしく、</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="kr">data</span> <span class="kt">Coyoneda</span> <span class="n">t</span> <span class="n">x</span> <span class="kr">where</span>
</span><span class="line">    <span class="kt">Coyoneda</span> <span class="ow">::</span> <span class="n">t</span> <span class="n">r</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="n">r</span> <span class="ow">-&gt;</span> <span class="n">a</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="kt">Coyoneda</span> <span class="n">t</span> <span class="n">a</span>
</span><span class="line"><span class="kr">instance</span> <span class="kt">Functor</span> <span class="p">(</span><span class="kt">Coyoneda</span> <span class="n">t</span><span class="p">)</span> <span class="kr">where</span>
</span><span class="line">    <span class="n">fmap</span> <span class="n">f</span> <span class="p">(</span><span class="kt">Coyoneda</span> <span class="n">t</span> <span class="n">g</span><span class="p">)</span> <span class="ow">=</span> <span class="kt">Coyoneda</span> <span class="n">t</span> <span class="p">(</span><span class="n">f</span> <span class="o">.</span> <span class="n">g</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>とcoyonedaは制約なしでfunctorを作るので、ただのdataからmonadになるのだそうだ</p>

<p>coyonedaのmoduleも<code>Data.Functor.Coyoneda</code>にあるので、free functor的ななにかだと思い、<br />
free functorとfree monadを合成してもfree monadだろうという発想から少し頑張った<br />
しかし型パズルが解けずinterpretが定義できないので、全く違うのかもしれないし、haskell力足りていないだけかもしれない</p>

<h2 id="section-6">参考</h2>
<ul>
  <li><a href="http://d.hatena.ne.jp/fumiexcel/20121111/1352614885">そろそろFreeモナドに関して一言いっとくか - fumievalの日記</a></li>
  <li><a href="http://d.hatena.ne.jp/its_out_of_tune/20121111/1352632815">Freeモナドって何なのさっ！？ - capriccioso String Creating(Object something){ return My.Expression(something); }</a></li>
</ul>

<h3 id="operational-1">operational</h3>
<ul>
  <li><a href="http://d.hatena.ne.jp/its_out_of_tune/20130601/1370109743">YonedaとCoYoneda、そしてFunctor - capriccioso String Creating(Object something){ return My.Expression(something); }</a></li>
  <li><a href="http://fumieval.hatenablog.com/entry/2013/11/11/154146">Operationalモナドをゲームに応用した話 - モナドとわたしとコモナド</a></li>
  <li><a href="http://myuon-myon.hatenablog.com/entry/2013/06/09/135407">Yoneda lemmaとOperational Monad - Just $ A sandbox</a></li>
  <li><a href="http://togetter.com/li/526588">Operational Monad - Togetterまとめ</a></li>
</ul>

<h2 id="packages">packages</h2>
<ul>
  <li><a href="http://hackage.haskell.org/package/free">http://hackage.haskell.org/package/free</a> # 推奨</li>
  <li><a href="http://hackage.haskell.org/package/control-monad-free">http://hackage.haskell.org/package/control-monad-free</a> # ?</li>
  <li><a href="http://hackage.haskell.org/package/transformers-free">http://hackage.haskell.org/package/transformers-free</a> # deprecated</li>
</ul>

<h3 id="operational-2">operational</h3>
<ul>
  <li><a href="http://hackage.haskell.org/package/operational">http://hackage.haskell.org/package/operational</a> # 一番人気</li>
  <li><a href="http://hackage.haskell.org/package/free-operational">http://hackage.haskell.org/package/free-operational</a> # freeを使った実装</li>
  <li><a href="http://hackage.haskell.org/package/minioperational">http://hackage.haskell.org/package/minioperational</a> # 上に挙げたoperationalの解説記事など書いてる人の再実装</li>
</ul>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p><a href="https://ja.wikibooks.org/wiki/Haskell/%E5%9C%8F%E8%AB%96#.E3.83.A2.E3.83.8A.E3.83.89">https://ja.wikibooks.org/wiki/Haskell/%E5%9C%8F%E8%AB%96#.E3.83.A2.E3.83.8A.E3.83.89</a><a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>むしろmonadの定義としてはjoinの方が自然に見える<a href="#fnref:2" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:3">
      <p>functorの制約はhaskellのmonadの定義が悪い<a href="#fnref:3" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:4">
      <p>あまり圏論に明るくないので少し怪しい<a href="#fnref:4" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:5">
      <p>haskellのmonadがbindである理由かもしれない<a href="#fnref:5" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:6">
      <p>圏論に精通していれば分かるのかどうかも分からない<a href="#fnref:6" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Os入れ直した]]></title>
    <link href="http://solorab.github.io/blog/2013/12/12/reinstalled-os/"/>
    <updated>2013-12-12T02:18:26+09:00</updated>
    <id>http://solorab.github.io/blog/2013/12/12/reinstalled-os</id>
    <content type="html"><![CDATA[<p>XUbuntu, xmonad, fcitx + mozc<br />
導入のメモ</p>

<!-- more -->

<ol>
  <li>ubuntuでGDMからloginできなくなった
    <ul>
      <li>おそらくupdateが原因、ちゃんと調べてないのでよく分からない</li>
    </ul>
  </li>
  <li>良い機会だということでarchを入れた</li>
  <li>音が出ないなどしたのでxubuntuに逃げた</li>
</ol>

<h2 id="arch-linux">Arch Linux</h2>
<p>次に挑戦する時のために</p>

<h3 id="install">install</h3>
<p><a href="https://wiki.archlinux.org/index.php/Installation_Guide">install.txt</a>をよく読んでinstall<br />
locale-genを忘れてcan’t set the localeとか言われまくって悩んだ</p>

<h3 id="sudo">sudo</h3>
<p>よく分からなかったので/etc/sudoersに無理やり追記した<br />
<code>echo $USER ALL=\(ALL\) ALL &gt;&gt; /etc/sudoers</code> 的な</p>

<h3 id="gui">GUI環境</h3>
<p><code>pacman -S xfce4</code><br />
gnomeは入れたが起動失敗するのでやめた</p>

<p><code>pacman -S xmonad</code> し<br />
Session and Startup (xfce4-session-settings) -&gt; Application Autostart に <code>xmonad --replace</code> を追加</p>

<h3 id="section">日本語入力</h3>
<p>fcitxを導入することに<br />
<code>pacman -S fcitx fcitx-mozc fcitx-configtool</code><br />
変換/無変換をon/offに割り当て</p>

<p>fcitxは~/.Xmodmapがあれば読み込むらしく、xmodmap使ってる人には嬉しい</p>

<h3 id="mount">mount権限の追加</h3>
<p>polkitなるものを導入<br />
適当なgroup作って権限付与</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line"># /etc/polkit-1/rules.d/10-enable-mount.rules
</span><span class="line">polkit.addRule(function(action, subject) {
</span><span class="line">    if (action.id == "org.freedesktop.udisks2.filesystem-mount-system" &amp;&amp; subject.isInGroup("adm")) {
</span><span class="line">        return polkit.Result.YES;
</span><span class="line">    }
</span><span class="line">});</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-1">無線</h3>
<p>調子悪い</p>

<p>頻繁に切れ</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>ping 192.168.2.1
</span><span class="line">connect: Network is unreachable
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>となるなど</p>

<h3 id="section-2">音声</h3>
<p>出ない<br />
出ない</p>

<h2 id="xubuntu">XUbuntu</h2>

<h3 id="section-3">無線</h3>
<p>何故か調子が良い</p>

<h3 id="section-4">音声</h3>
<p>理由はわからないが出る<br />
xfceのpanel上のiconからは一切操作できないが、thinkpadのkeyboardの音量関連のkeyを通して操作可</p>

<h3 id="xfce-sudo-polkit">xfce, sudo, polkit</h3>
<p>導入済み</p>

<h3 id="section-5">日本語入力</h3>
<p>同じくfcitxをinstall -&gt; 問題発生 -&gt; 解決</p>

<p><a href="http://itiut.hatenablog.com/entry/2013/10/25/145408">Ubuntu 13.10 で fcitx-mozc を使う - 部屋の中にも一年</a></p>

<blockquote>
  <p>japanese-testersのリポジトリを追加。
  デフォルトのリポジトリのFicitxだと、IMオンのホットキーがIMのトグルとして動き、IMオフのホットキーが何も動作しないバグ？が起こりました。
  <code>
      $ sudo add-apt-repository ppa:japanese-testers/ppa
      $ sudo apt-get update
 </code></p>
</blockquote>

<h3 id="xmonad">xmonad</h3>
<p>自動起動してくれない問題が発生した<br />
環境変数の不足(PATH)により~/.xmonad/xmonad.hs内でこけていた<br />
application autostartのxmonadのcommandを<code>zsh -c 'xmonad --replace'</code>として、無理やり~/.zshenvを読ませることにより解決</p>

<p>試行錯誤中にSettings Editor (xfce4-settings-editor) -&gt; xfce4-session -&gt; session/Failsafe/Client0_commandなる項目を見つけた<br />
初期値が[“xfwm4”, “–replace”]とものすごくwindow manager関連ぽい<br />
しかし<code>xfconf-query -c xfce4-session -p /sessions/Failsafe/Client0_Command -t string -s xmonad -t string -s --replace -a</code>などとして設定しても、起動している様子が見られなかった<br />
他の方法で解決したので放置</p>

<ul>
  <li><a href="http://www.haskell.org/haskellwiki/Xmonad/Using_xmonad_in_XFCE">Xmonad/Using xmonad in XFCE - HaskellWiki</a></li>
  <li><a href="https://wiki.archlinux.org/index.php/xfce#Window_Manager">Xfce - ArchWiki # Window Manager</a></li>
  <li><a href="http://zsh.sourceforge.net/Intro/intro_3.html">An Introduction to the Z Shell - Startup Files</a></li>
</ul>

<h3 id="section-6">トラボ</h3>
<p>thinkpadとの相性でhotplugできない問題継続中<br />
抱き合わせのwindows上ですらできないのだから諦めている</p>

<h3 id="section-7">画面</h3>
<p>thinkpadの問題その２<br />
以前からsuspend後に画面の電源がつかなかった<br />
さらに蓋を閉じてもアウトに<br />
これは治せるだろうが面倒なので放置</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[日本語ocrをinstallした]]></title>
    <link href="http://solorab.github.io/blog/2013/12/06/install-japanese-ocr/"/>
    <updated>2013-12-06T14:57:47+09:00</updated>
    <id>http://solorab.github.io/blog/2013/12/06/install-japanese-ocr</id>
    <content type="html"><![CDATA[<p><a href="http://code.google.com/p/nhocr/">nhocr</a> and <a href="http://code.google.com/p/tesseract-ocr/">tesseract</a></p>

<p>日本語ではnhocrが、英数字ではtesseractが良いようだ</p>

<!-- more -->

<h2 id="tesseract">tesseract</h2>
<p>日本語専用ではない</p>

<h3 id="install">install</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo apt-get install tesseract-ocr tesseract-ocr-jpn
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>簡単</p>

<h3 id="test">test</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="c"># tesseract 3.02.01</span>
</span><span class="line"><span class="nv">$ </span>convert -font /usr/share/fonts/truetype/fonts-japanese-gothic.ttf -pointsize 32 label:<span class="s1">&#39;こんにちは 世界&#39;</span> a.pbm
</span><span class="line"><span class="nv">$ </span>tesseract a.pbm a -l jpn -psm 7 2&gt;/dev/null ; cat a.txt
</span><span class="line">こん~二ち【ま 世界
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>倍角文字やギャル文字の自動生成に使えそうだと思ったが</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>convert -font /usr/share/fonts/truetype/fonts-japanese-gothic.ttf -pointsize 32 label:<span class="s1">&#39;超絶核爆&#39;</span> -geometry 200%x100% a.pbm
</span><span class="line"><span class="nv">$ </span>tesseract a.pbm a -l jpn -psm 7 2&gt;/dev/null ; cat a.txt
</span><span class="line">超絶核曝
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>と、漢字には強いようだ<br />
表音文字より表意文字の方が得意とは驚きである</p>

<h2 id="nhocr">nhocr</h2>

<h3 id="install-1">install</h3>
<p>少し嵌まった<br />
prefixの指定が必須のようだ</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="c"># cd O2-tools</span>
</span><span class="line">./configure --prefix<span class="o">=</span>/usr/local
</span><span class="line">make
</span><span class="line">sudo make install
</span><span class="line"><span class="c"># cd nhocr</span>
</span><span class="line">./configure --prefix<span class="o">=</span>/usr/local --with-O2tools<span class="o">=</span>/usr/local
</span><span class="line">make
</span><span class="line">sudo make install
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="test-1">test</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="c"># NHocr - Japanese OCR  v0.21</span>
</span><span class="line"><span class="nv">$ </span>convert -font /usr/share/fonts/truetype/fonts-japanese-gothic.ttf -pointsize 32 label:<span class="s1">&#39;こんにちは 世界&#39;</span> a.pbm
</span><span class="line"><span class="nv">$ </span>nhocr -o - -line a.pbm
</span><span class="line">こんにちは世界
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>問題ない<br />
しかし非常にきれいな画像での結果なので、実際に使うと違ってくるかもしれない</p>

<h2 id="section">日本語以外の比較</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span>convert -pointsize 32 label:<span class="s1">&#39;Hello World&#39;</span> a.pbm
</span><span class="line"><span class="nv">$ </span>nhocr -o - -line a.pbm
</span><span class="line">H引foWohd
</span><span class="line"><span class="nv">$ </span>tesseract a.pbm a -l jpn -psm 7 2&gt;/dev/null ; cat a.txt
</span><span class="line">Heーー。 W。「ーd
</span><span class="line"><span class="nv">$ </span>tesseract a.pbm a -psm 7 2&gt;/dev/null ; cat a.txt
</span><span class="line">Hello World
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>convert -pointsize 32 label:<span class="s1">&#39;2.71828183&#39;</span> a.pbm
</span><span class="line"><span class="nv">$ </span>nhocr -o - -line a.pbm
</span><span class="line">2.7i828i88
</span><span class="line"><span class="nv">$ </span>tesseract a.pbm a -l jpn -psm 7 2&gt;/dev/null ; cat a.txt
</span><span class="line">2<span class="err">&#39;</span>7ー 828ー 83
</span><span class="line"><span class="nv">$ </span>tesseract a.pbm a -psm 7 2&gt;/dev/null ; cat a.txt
</span><span class="line">2.71828183
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>日本語以外ではtesseract(-l jpn 無し)が強い<br />
予想通りの結果</p>

<h2 id="library">他のlibrary</h2>
<p><a href="http://tomoe.sourceforge.jp/cgi-bin/ja/blog/index.rb">tomoe</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coffeescriptのis Notとisntは違う]]></title>
    <link href="http://solorab.github.io/blog/2013/12/05/is-not-is-not-isnt/"/>
    <updated>2013-12-05T14:24:25+09:00</updated>
    <id>http://solorab.github.io/blog/2013/12/05/is-not-is-not-isnt</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="coffeescript"><span class="line"><span class="nx">a</span> <span class="o">is</span> <span class="o">not</span> <span class="nx">b</span>
</span><span class="line"><span class="nx">a</span> <span class="o">isnt</span> <span class="nx">b</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>は</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">a</span> <span class="o">===</span> <span class="o">!</span><span class="nx">b</span>
</span><span class="line"><span class="nx">a</span> <span class="o">!===</span> <span class="nx">b</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>だそうだ<br />
つまり <code>a is not b</code> = <code>a is (not b)</code></p>

<p><a href="http://coffeescript.org/#try:a%20is%20not%20b%0Aa%20isnt%20b">try</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pixivをscarpingした]]></title>
    <link href="http://solorab.github.io/blog/2013/11/27/scraped-pixiv/"/>
    <updated>2013-11-27T21:47:44+09:00</updated>
    <id>http://solorab.github.io/blog/2013/11/27/scraped-pixiv</id>
    <content type="html"><![CDATA[<h2 id="pixiv-toolshttpsgithubcomsolorabpixiv-tools"><a href="https://github.com/solorab/pixiv-tools">pixiv-tools</a></h2>
<p>勢いで作った<br />
CasperJS + PhantomJS でかなり強引に処理</p>

<!-- more -->

<h2 id="memo">memo</h2>

<h3 id="javascript--flashlibrary">javascript (や flash)を扱えるlibraryたち</h3>
<ul>
  <li>mechanizeさんはむりぽ</li>
  <li>他にもたくさん</li>
</ul>

<h4 id="phantomjshttpphantomjsorg"><a href="http://phantomjs.org/">PhantomJS</a></h4>
<ul>
  <li>WebKit</li>
  <li>nodeでない</li>
  <li><a href="http://casperjs.org/">CasperJS</a>
    <ul>
      <li>nodejsでないwrapper</li>
    </ul>
  </li>
  <li><a href="http://nodejs.org/">Node.js</a>
    <ul>
      <li>bridge はいくつかあったが、結局使わなかった
        <ul>
          <li><a href="https://github.com/sgentle/phantomjs-node">phantomjs-node</a></li>
          <li><a href="https://github.com/WaterfallEngineering/SpookyJS">SpookyJS</a></li>
          <li><a href="https://github.com/Obvious/phantomjs">phantomjs</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h4 id="chimerahttpsgithubcomdeanmaonode-chimera"><a href="https://github.com/deanmao/node-chimera">Chimera</a></h4>
<ul>
  <li>WebKit</li>
  <li><code>npm install chimera</code></li>
  <li>うまく使えなかった</li>
  <li>documentどこですか</li>
</ul>

<h4 id="slimerjshttpslimerjsorg"><a href="http://slimerjs.org/">SlimerJS</a></h4>
<ul>
  <li>Gecko</li>
  <li>試してないのでよく分からない</li>
</ul>

<h3 id="section">競合</h3>

<h4 id="pixivutil2httpsgithubcomnandakapixivutil2"><a href="https://github.com/Nandaka/PixivUtil2">PixivUtil2</a></h4>
<ul>
  <li>作り終わってから見つけた 少し触った</li>
  <li>python + mechanize 製</li>
  <li>script tag内をそれらしいurlでgrepしてる</li>
  <li>機能豊富で良くできている むしろ多すぎ感ある</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[いろいろと作り直した]]></title>
    <link href="http://solorab.github.io/blog/2013/11/14/renewed-everything/"/>
    <updated>2013-11-14T05:40:00+09:00</updated>
    <id>http://solorab.github.io/blog/2013/11/14/renewed-everything</id>
    <content type="html"><![CDATA[<p>それはもうごっそりと</p>

<!-- more -->

<ul>
  <li>HN変更
    <ul>
      <li>ググラビリティの向上</li>
      <li>twitterはid変更が容易</li>
      <li>githubもid変更できる
        <ul>
          <li>もちろんURLも変更</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>独自ドメイン取得/運用開始
    <ul>
      <li>value-domain + github-pages
        <ul>
          <li><a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages">https://help.github.com/articles/setting-up-a-custom-domain-with-pages</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>もう破壊的変更はしないはず</li>
</ul>
]]></content>
  </entry>
  
</feed>
